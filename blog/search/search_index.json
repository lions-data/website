{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Table of contents Data Science KNIME - \u30c7\u30fc\u30bf\u5206\u6790\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 knime / KNIME \u6982\u8981 knime / KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 knime / KNIME \u5165\u9580\u7de8 / \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 knime / KNIME \u5165\u9580\u7de8 / \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0","title":"Introduction"},{"location":"#table-of-contents","text":"","title":"Table of contents"},{"location":"#data-science","text":"","title":"Data Science"},{"location":"#knime-","text":"knime / KNIME \u6982\u8981 knime / KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 knime / KNIME \u5165\u9580\u7de8 / \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 knime / KNIME \u5165\u9580\u7de8 / \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0","title":"KNIME - \u30c7\u30fc\u30bf\u5206\u6790\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0"},{"location":"data-science/","text":"Data Science ToC KNIME knime / KNIME \u6982\u8981 knime / KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 knime / KNIME \u5165\u9580\u7de8 / \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 knime / KNIME \u5165\u9580\u7de8 / \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0","title":"Data Science"},{"location":"data-science/#data-science","text":"","title":"Data Science"},{"location":"data-science/#toc","text":"","title":"ToC"},{"location":"data-science/#knime","text":"knime / KNIME \u6982\u8981 knime / KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 knime / KNIME \u5165\u9580\u7de8 / \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 knime / KNIME \u5165\u9580\u7de8 / \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0","title":"KNIME"},{"location":"data-science/knime/","text":"KNIME \u6982\u8981 \u4f5c\u6210\u65e5: 2020-03-31 \u66f4\u65b0\u65e5: 2020-04-11 KNIME (\u30ca\u30a4\u30e0) \u306f\u3001\u30c7\u30fc\u30bf\u9023\u643a\u30fb\u7d71\u5408\u30fb\u5206\u6790\u3092\u81ea\u52d5\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u306e\u30c7\u30fc\u30bf\u5206\u6790\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3059 \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u578b\u30c7\u30fc\u30bf\u5206\u6790\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 - \u30ce\u30fc\u30c9\u3068\u547c\u3070\u308c\u308b\u6a5f\u80fd\u306e\u304b\u305f\u307e\u308a(\u30e2\u30b8\u30e5\u30fc\u30eb)\u3092\u7e4b\u3052\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u3055\u307e\u3056\u307e\u306a\u51e6\u7406\u3092\u5b9f\u73fe\u3057\u307e\u3059 \u30c7\u30fc\u30bf\u5206\u6790\u3001\u64cd\u4f5c\u3001\u8996\u899a\u5316\u3001\u304a\u3088\u3073\u30ec\u30dd\u30fc\u30c8 2000\u3092\u8d85\u3048\u308b\u30ce\u30fc\u30c9\u3001\u6570\u591a\u304f\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u30b5\u30f3\u30d7\u30eb\u3001\u5305\u62ec\u7684\u306a\u7d71\u5408\u30c4\u30fc\u30eb\u3001\u69d8\u3005\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u5229\u7528\u3067\u304d\u3001\u30c7\u30fc\u30bf\u306b\u96a0\u3055\u308c\u3066\u3044\u308b\u53ef\u80fd\u6027\u3092\u767a\u898b\u3057\u305f\u308a\u3001\u65b0\u305f\u306a\u77e5\u898b\u3092\u5f97\u305f\u308a\u3001\u672a\u6765\u3092\u4e88\u6e2c\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059 \u591a\u69d8\u306a\u62e1\u5f35\u6a5f\u80fd\u306e\u63d0\u4f9b Text Mining Network Mining Cheminformatics Many integrations - Java, R, Python, Weka, H2O, etc \u30d3\u30eb\u30c8\u30a4\u30f3\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u3001\u9ad8\u5ea6\u306a\u5206\u6790\u3084\u5206\u6790\u306e\u81ea\u52d5\u5316\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 KNIME IDE Workflow \u30a8\u30c7\u30a3\u30bf\u30fc Node \u30ea\u30dd\u30b8\u30c8\u30ea\u30fc \u30b3\u30f3\u30bd\u30fc\u30eb KNIME\u306e\u30ce\u30fc\u30c9\u306f \u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u5404\u30ce\u30fc\u30c9\u306b\u306f\u8a2d\u5b9a\u753b\u9762\u304c\u3042\u308b\u306e\u3067\u300c\u5165\u529b\u3001\u51e6\u7406\u3001\u51fa\u529b\u300d\u306e\u8a2d\u5b9a\u3092\u884c\u306a\u3063\u305f\u30bf\u5f8c\u3001\u51e6\u7406\u3092\u5b9f\u884c (\u753b\u9762\u4e0a\u90e8\u306e\u5b9f\u884c\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b) \u3057\u307e\u3059\u3002\u30ce\u30fc\u30c9\u3068\u30ce\u30fc\u30c9\u3092\u63a5\u7d9a\u3057\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u73fe\u5728\u306e\u30ce\u30fc\u30c9\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u306f\u3001\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u30a8\u30c7\u30a3\u30bf\u30fc\u5185\u306e\u30ce\u30fc\u30c9\u30a2\u30a4\u30b3\u30f3\u4e0b\u90e8\u306b\u8868\u793a\u3055\u308c\u308b\u30ce\u30fc\u30c9\u30b9\u30c6\u30fc\u30bf\u30b9\u3067\u308f\u304b\u308a\u307e\u3059\u3002\u30ce\u30fc\u30c9\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u306f\u3001\u6b21\u306e\uff14\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002 Not Configured (\u672a\u8a2d\u5b9a) Configured (\u8a2d\u5b9a\u6e08\u307f) Executed (\u5b9f\u884c\u6e08\u307f) Error (\u5b9f\u884c\u30a8\u30e9\u30fc)","title":"KNIME \u6982\u8981"},{"location":"data-science/knime/#knime","text":"\u4f5c\u6210\u65e5: 2020-03-31 \u66f4\u65b0\u65e5: 2020-04-11 KNIME (\u30ca\u30a4\u30e0) \u306f\u3001\u30c7\u30fc\u30bf\u9023\u643a\u30fb\u7d71\u5408\u30fb\u5206\u6790\u3092\u81ea\u52d5\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u306e\u30c7\u30fc\u30bf\u5206\u6790\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3059 \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u578b\u30c7\u30fc\u30bf\u5206\u6790\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0 - \u30ce\u30fc\u30c9\u3068\u547c\u3070\u308c\u308b\u6a5f\u80fd\u306e\u304b\u305f\u307e\u308a(\u30e2\u30b8\u30e5\u30fc\u30eb)\u3092\u7e4b\u3052\u3066\u3044\u304f\u3053\u3068\u3067\u3001\u3055\u307e\u3056\u307e\u306a\u51e6\u7406\u3092\u5b9f\u73fe\u3057\u307e\u3059 \u30c7\u30fc\u30bf\u5206\u6790\u3001\u64cd\u4f5c\u3001\u8996\u899a\u5316\u3001\u304a\u3088\u3073\u30ec\u30dd\u30fc\u30c8 2000\u3092\u8d85\u3048\u308b\u30ce\u30fc\u30c9\u3001\u6570\u591a\u304f\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u30b5\u30f3\u30d7\u30eb\u3001\u5305\u62ec\u7684\u306a\u7d71\u5408\u30c4\u30fc\u30eb\u3001\u69d8\u3005\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u5229\u7528\u3067\u304d\u3001\u30c7\u30fc\u30bf\u306b\u96a0\u3055\u308c\u3066\u3044\u308b\u53ef\u80fd\u6027\u3092\u767a\u898b\u3057\u305f\u308a\u3001\u65b0\u305f\u306a\u77e5\u898b\u3092\u5f97\u305f\u308a\u3001\u672a\u6765\u3092\u4e88\u6e2c\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059 \u591a\u69d8\u306a\u62e1\u5f35\u6a5f\u80fd\u306e\u63d0\u4f9b Text Mining Network Mining Cheminformatics Many integrations - Java, R, Python, Weka, H2O, etc \u30d3\u30eb\u30c8\u30a4\u30f3\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u3001\u9ad8\u5ea6\u306a\u5206\u6790\u3084\u5206\u6790\u306e\u81ea\u52d5\u5316\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059","title":"KNIME \u6982\u8981"},{"location":"data-science/knime/#knime-ide","text":"Workflow \u30a8\u30c7\u30a3\u30bf\u30fc Node \u30ea\u30dd\u30b8\u30c8\u30ea\u30fc \u30b3\u30f3\u30bd\u30fc\u30eb KNIME\u306e\u30ce\u30fc\u30c9\u306f \u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u5404\u30ce\u30fc\u30c9\u306b\u306f\u8a2d\u5b9a\u753b\u9762\u304c\u3042\u308b\u306e\u3067\u300c\u5165\u529b\u3001\u51e6\u7406\u3001\u51fa\u529b\u300d\u306e\u8a2d\u5b9a\u3092\u884c\u306a\u3063\u305f\u30bf\u5f8c\u3001\u51e6\u7406\u3092\u5b9f\u884c (\u753b\u9762\u4e0a\u90e8\u306e\u5b9f\u884c\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b) \u3057\u307e\u3059\u3002\u30ce\u30fc\u30c9\u3068\u30ce\u30fc\u30c9\u3092\u63a5\u7d9a\u3057\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u73fe\u5728\u306e\u30ce\u30fc\u30c9\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u306f\u3001\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u30a8\u30c7\u30a3\u30bf\u30fc\u5185\u306e\u30ce\u30fc\u30c9\u30a2\u30a4\u30b3\u30f3\u4e0b\u90e8\u306b\u8868\u793a\u3055\u308c\u308b\u30ce\u30fc\u30c9\u30b9\u30c6\u30fc\u30bf\u30b9\u3067\u308f\u304b\u308a\u307e\u3059\u3002\u30ce\u30fc\u30c9\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u306f\u3001\u6b21\u306e\uff14\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002 Not Configured (\u672a\u8a2d\u5b9a) Configured (\u8a2d\u5b9a\u6e08\u307f) Executed (\u5b9f\u884c\u6e08\u307f) Error (\u5b9f\u884c\u30a8\u30e9\u30fc)","title":"KNIME IDE"},{"location":"data-science/knime/knime-1/","text":"KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 \u4f5c\u6210\u65e5: 2020-03-31 \u66f4\u65b0\u65e5: 2020-04-11 \u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3067\u306f\u3001\u5927\u91cf\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3001\u6570\u5024\u30c7\u30fc\u30bf\u3092\u6271\u3044\u307e\u3059\u3002\u6570\u5024\u30c7\u30fc\u30bf\u306b\u306f\u3001\u6b20\u640d\u5024\u3001\u7570\u5e38\u5024\u306a\u3069\u3092\u542b\u3080\u70ba\u3001\u305d\u306e\u307e\u307e\u30c7\u30fc\u30bf\u5206\u6790\u3092\u9032\u3081\u3066\u3082\u671f\u5f85\u3057\u305f\u7d50\u679c\u30fb\u52b9\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u30c7\u30fc\u30bf\u5206\u6790\u3067\u306f\u3001\u30c7\u30fc\u30bf\u306e\u8aa4\u308a\u3001\u6f0f\u308c\u3001\u4e0d\u8db3\u3001\u77db\u76fe\u3092\u4e8b\u524d\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3001\u30c7\u30fc\u30bf\u3092\u6574\u3048\u308b\u300c\u524d\u51e6\u7406\u300d\u3068\u3044\u3046\u5de5\u7a0b\u304c\u5fc5\u8981\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u9867\u5ba2\u30de\u30b9\u30bf\u3068\u58f2\u4e0a\u30c7\u30fc\u30bf\u306e\u4e8c\u3064\u306e\u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u3092CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3001\u6b21\u56de\u306e\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 (\u53ef\u8996\u5316\u542b\u3080) \u306b\u9032\u307f\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5168\u4f53 \u9867\u5ba2\u30de\u30b9\u30bf \u30c7\u30fc\u30bf\u51e6\u7406 \u58f2\u4e0a\u30c7\u30fc\u30bf \u30c7\u30fc\u30bf\u51e6\u7406 \u9867\u5ba2\u30de\u30b9\u30bf, \u58f2\u4e0a\u30c7\u30fc\u30bf\u7d50\u5408 CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u51fa\u529b \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u4e0b\u306e\u56f3\u306b\u793a\u3057\u305f\u901a\u308a\u3067\u3059\u3002 \u9867\u5ba2\u30de\u30b9\u30bf \u3068 \u58f2\u4e0a\u30c7\u30fc\u30bf \u306e\u524d\u51e6\u7406\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092 META_\u9867\u5ba2\u30de\u30b9\u30bf W/F \u3068 META_\u58f2\u4e0a\u30c7\u30fc\u30bf W/F \u306b\u305d\u308c\u305e\u308c\u307e\u3068\u3081\u3001\u305d\u306e\u5f8c\u3001 \u524d\u51e6\u7406\u5f8c\u306e\u4e8c\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u7d50\u5408 \u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u3001\u7d50\u5408\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3092 CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b \u3057\u307e\u3059\u3002 Fig. \u5168\u4f53\u30ef\u30fc\u30af\u30d5\u30ed\u30fc META_\u9867\u5ba2\u30de\u30b9\u30bf \u3068 META_\u58f2\u4e0a\u30c7\u30fc\u30bf \u306e\u7d50\u5408 META_\u9867\u5ba2\u30de\u30b9\u30bf W/F \u3068 META_\u58f2\u4e0a\u30c7\u30fc\u30bf W/F \u306e\u51fa\u529b (\u30ec\u30b3\u30fc\u30c9) \u3092\u7d50\u5408\u3057\u307e\u3059\u3002\u7d50\u5408\u3059\u308b\u30ab\u30e9\u30e0\u306f\u3001 \u9867\u5ba2\u540d \u3067\u3059\u3002 Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Split & Combine / Joiner CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u306e\u51fa\u529b \u6700\u7d42\u7684\u306b\u5f97\u3089\u308c\u305f\u30ec\u30b3\u30fc\u30c9\u3092CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002 \u51fa\u529b\u5148\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b \u30d5\u30a1\u30a4\u30eb\u304c\u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u6642\u3001\u4e0a\u66f8\u304d\u3092\u6307\u5b9a\u3059\u308b Fig. CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u51fa\u529b \u5229\u7528\u30ce\u30fc\u30c9: IO / Write / CSV Writer \u9867\u5ba2\u30de\u30b9\u30bf \u524d\u51e6\u7406 \u51e6\u7406\u6982\u8981: \u30c7\u30fc\u30bf\u8aad\u8fbc\u307f: \u9867\u5ba2\u30de\u30b9\u30bf\u30fc Excel\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f \u524d\u51e6\u7406: \u6c0f\u540d \u30b9\u30da\u30fc\u30b9\u9664\u53bb \u767b\u9332\u65e5 \u30c7\u30fc\u30bf\u578b\u7d71\u4e00 Excel \u30b7\u30ea\u30a2\u30eb\u5024 \u3092\u65e5\u4ed8\u578b\u306b\u5909\u63db \u30ec\u30b3\u30fc\u30c9\u30de\u30fc\u30b8 \u30c7\u30fc\u30bf\u51fa\u529b: \u30c7\u30fc\u30bf\u51e6\u7406\u5f8c \u9867\u5ba2\u30de\u30b9\u30bf\u30fc CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u51fa\u529b (\u518d\u5229\u7528) Fig. \u9867\u5ba2\u30de\u30b9\u30bf.\u524d\u51e6\u7406\u30ef\u30fc\u30af\u30d5\u30ed\u30fc 1. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc Excel\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f KNIME\u306b \u9867\u5ba2\u30de\u30b9\u30bf\u30fc\u30d5\u30a1\u30a4\u30eb (Excel) \u3092\u8aad\u307f\u8fbc\u307f\u3001\u30ec\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u4e0a\u306b\u3042\u308b \u9867\u5ba2\u30de\u30b9\u30bf\u30fc Excel\u30d5\u30a1\u30a4\u30eb \u3092\u6307\u5b9a\u3059\u308b Excel\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u6210\u529f\u5f8c\u3001\u30c7\u30fc\u30bf\u30d7\u30ec\u30d3\u30e5\u30fc\u30a8\u30ea\u30a2\u306b\u30ec\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b \u5229\u7528\u30ce\u30fc\u30c9: IO / Read / Excel Reader 2-1. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u6c0f\u540d\u30ab\u30e9\u30e0 / \u30b9\u30da\u30fc\u30b9\u9664\u53bb \u9867\u5ba2\u30de\u30b9\u30bf\u30fc.\u767b\u9332\u65e5\u30ab\u30e9\u30e0\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u7d71\u4e00\u3059\u308b\u70ba\u3001\u4e0d\u8981\u306a\u30b9\u30da\u30fc\u30b9 (Whitespace) \u3092\u9664\u53bb\u3057\u307e\u3059\u3002 replace\u95a2\u6570 \u3092\u4f7f\u3044 \" \" \u30b9\u30da\u30fc\u30b9\u3092\u9664\u53bb\u3059\u308b \u65e2\u5b58\u306e\u5217, \u9867\u5ba2\u540d\u3092\u6307\u5b9a\u3057\u3001\u51e6\u7406\u7d50\u679c\u3092\u4e0a\u66f8\u304d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / String Manipulation 2-2. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5224\u5b9a + \u30ec\u30b3\u30fc\u30c9\u5206\u5272 \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u306e\u5024\u304c \u671f\u5f85\u3059\u308b\u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068 \u305d\u308c\u4ee5\u5916\u306b\u5206\u985e\u3057\u307e\u3059\u3002 \u691c\u67fb\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b\u3000 \u767b\u9332\u65e5 \u3092\u6307\u5b9a\u3059\u308b \u671f\u5f85\u3059\u308b\u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092 \u6b63\u898f\u8868\u73fe - ^(\\d{4})/(\\d{2})/(\\d{2})$ \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Filter / Row Splitter \u9664\u5916\u30ec\u30b3\u30fc\u30c9 (Filtered Out) \u30ce\u30fc\u30c9\u30a2\u30a4\u30b3\u30f3 \u3092\u9078\u629e\u3057\u3001\u51e6\u7406\u30e1\u30cb\u30e5\u30fc\u306e\u4e2d\u306e Filtered Out \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u9664\u5916\u30ec\u30b3\u30fc\u30c9 (\u671f\u5f85\u3059\u308b\u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4ee5\u5916) \u306e\u30ec\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 Fig. \u51e6\u7406\u30e1\u30cb\u30e5\u30fc Fig. \u9664\u5916\u30ec\u30b3\u30fc\u30c9\u8868 \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u306e\u5024\u304c reserved-*x1F \u3068\u306a\u3063\u3066\u3044\u3066 \u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306a\u3044\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 2-3. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u6587\u5b57\u5217\u7f6e\u63db \u300c2-1. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u6c0f\u540d\u30ab\u30e9\u30e0 / \u30b9\u30da\u30fc\u30b9\u9664\u53bb\u300d\u3068\u540c\u69d8\u306b String Manipulation \u30ce\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u3001\u6587\u5b57\u5217\u7f6e\u63db\u3092\u884c\u3046 - \u5024\u304b\u3089 \u6587\u5b57\u5217 reserved- \u3068 x1F \u3092\u9664\u53bb\u3057\u307e\u3059\u3002 1 replace ( replace ( $\u767b\u9332\u65e5$ , \"reserved-\" , \"\" ), \"x1F\" , \"\" ) \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / String Manipulation 2-4. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u5909\u63db \u524d\u306e\u30ce\u30fc\u30c9 - \u300c2-3. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u6587\u5b57\u5217\u7f6e\u63db\u300d\u3067 \u767b\u9332\u65e5 \u304b\u3089\u4e0d\u8981\u306a\u6587\u5b57\u5217\u3092\u9664\u53bb\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u5024 (\u6587\u5b57\u5217) \u306b\u6574\u5f62\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3092\u6570\u5024\u306b\u5909\u63db\u3059\u307e\u3059\u3002 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / String To Number 2-5. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / Java\u30b3\u30fc\u30c9 - \u30b7\u30ea\u30a2\u30eb\u5024\u304b\u3089Unix Timestamp\u3078\u5909\u63db \u524d\u306e\u30ce\u30fc\u30c9 - \u300c2-4. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u5909\u63db\u300d\u3067 \u767b\u9332\u65e5 \u306e\u30b7\u30ea\u30a2\u30eb\u5024\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u3055\u3089\u306b\u305d\u306e\u5024\u3092 Unix Timestamp\u306b\u5909\u63db\u3057\u307e\u3059\u3002 \u30b7\u30ea\u30a2\u30eb\u5024\u304b\u3089Unix Timestamp\u306b\u5909\u63db\u3059\u308bJava\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b 1 2 // Enter your code here: out_RegisterdAt = ( c_RegisterdAt - 25569 ) * 86400 ; Java\u304b\u3089\u30ec\u30b3\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u3059\u308b\u70ba\u3001Input\u30a8\u30ea\u30a2\u306b \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3057\u3001\u30c7\u30fc\u30bf\u578b: Integer, Java Field: c_RegisteredAt \u3068\u3059\u308b\u3002\u307e\u305f\u3001\u30b7\u30ea\u30a2\u30eb\u5024\u304b\u3089Unix Timestamp\u306b\u5909\u63db\u3057\u305f\u5024\u3092 \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u306b\u4e0a\u66f8\u304d\u3059\u308b (Output\u30a8\u30ea\u30a2\u3067\u8a2d\u5b9a\u3059\u308b) \u5229\u7528\u30ce\u30fc\u30c9: Scripting / Java / Java Snipet 2-6. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / Unix Timestamp\u304b\u3089\u65e5\u4ed8\u578b\u3078\u5909\u63db \u524d\u306e\u30ce\u30fc\u30c9 - \u300c2-5. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / Java\u30b3\u30fc\u30c9 - \u30b7\u30ea\u30a2\u30eb\u5024\u304b\u3089Unix Timestamp\u3078\u5909\u63db\u300d\u3067 \u767b\u9332\u65e5 \u306e Unix Timestamp\u306e\u5024\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u65e5\u4ed8\u578b\u306b\u5909\u63db\u3057\u307e\u3059\u3002 Include\u30a8\u30ea\u30a2\u3067 \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3059\u308b \u5165\u529b\u5217\u306e\u5358\u4f4d\u3001\u51fa\u529b\u5217\u306e\u30c7\u30fc\u30bf\u578b - Date \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Other / Data Types / Time Series / Transform / UNIX Timestamp to Date&Time 2-7. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u30ec\u30b3\u30fc\u30c9\u7d50\u5408 \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u306e\u4e0d\u6b63\u306a\u5024\u3092\u65e5\u4ed8\u578b\u306b\u4fee\u6b63\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3068\u3001\u6700\u521d\u304b\u3089\u65e5\u4ed8\u578b\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u7d50\u5408\u3057\u3001\u30c7\u30fc\u30bf\u5206\u6790\u7528\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\u51e6\u7406\u5f8c\u306e\u30ec\u30b3\u30fc\u30c9\u306f\u3001 Concatenated table \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Transform / Concatenate 3. \u30c7\u30fc\u30bf\u51e6\u7406\u5f8c \u30d5\u30a1\u30a4\u30eb\u51fa\u529b \u524d\u51e6\u7406\u3092\u5b8c\u4e86\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3092CSV\u5f62\u5f0f\u3067\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u518d\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u5148\u3092\u6307\u5b9a\u3057\u3001\u65e2\u306b\u540c\u540d\u79f0\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u6642\u306f\u3001\u4e0a\u66f8\u304d\u3059\u308b\u3088\u3046\u306b If file exists...: Overwrite(\u4e0a\u66f8\u304d) \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u5229\u7528\u30ce\u30fc\u30c9: IO / Write / CSV Writer \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 \u51e6\u7406\u6982\u8981: \u30c7\u30fc\u30bf\u8aad\u8fbc\u307f: \u58f2\u4e0a\u30c7\u30fc\u30bf CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f \u524d\u51e6\u7406: \u8cfc\u8cb7\u65e5 RowID\u3092\u5143\u306b\u3001 \u8cfc\u8cb7\u65e5 \u5217\u8ffd\u52a0 \u30c7\u30fc\u30bf\u578b\u7d71\u4e00 \u6587\u5b57\u5217\u304b\u3089\u65e5\u4ed8\u578b\u3078 \u8cfc\u8cb7\u65e5 \u3092\u5143\u306b\u3001 \u8cfc\u8cb7\u5e74\u6708 \u5217\u8ffd\u52a0 \u5546\u54c1\u540d \u30b9\u30da\u30fc\u30b9\u9664\u53bb (\u6587\u5b57\u5217\u51e6\u7406) \u5546\u54c1\u4fa1\u683c \u6b20\u640d\u5024\u51e6\u7406 \u6b20\u640d\u5024\u5b58\u5728\u30ec\u30b3\u30fc\u30c9, \u672a\u5b58\u5728\u30ec\u30b3\u30fc\u30c9 \u5206\u5272 \u6b20\u640d\u5024\u7f6e\u63db\u5024 \u7b97\u51fa\u3068\u7f6e\u63db \u30ec\u30b3\u30fc\u30c9\u7d50\u5408, \u6b20\u640d\u5024\u51e6\u7406\u6e08\u30ec\u30b3\u30fc\u30c9\u3068\u6b20\u640d\u5024\u51e6\u7406\u5bfe\u8c61\u5916\u30ec\u30b3\u30fc\u30c9 Fig. \u58f2\u4e0a\u30c7\u30fc\u30bf.\u524d\u51e6\u7406w\u30ef\u30fc\u30af\u30d5\u30ed\u30fc 1. \u58f2\u4e0a\u30c7\u30fc\u30bf CSV\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f KNIME\u306b \u58f2\u4e0a\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb (CSV) \u3092\u8aad\u307f\u8fbc\u307f\u3001\u30ec\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u4e0a\u306b\u3042\u308b \u58f2\u4e0a\u30c7\u30fc\u30bf CSV\u30d5\u30a1\u30a4\u30eb \u3092\u6307\u5b9a\u3059\u308b CSV\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u6210\u529f\u5f8c\u3001\u30c7\u30fc\u30bf\u30d7\u30ec\u30d3\u30e5\u30fc\u30a8\u30ea\u30a2\u306b\u30ec\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b \u5229\u7528\u30ce\u30fc\u30c9: IO / Read / CSV Reader \u53c2\u8003: \u9867\u5ba2\u30de\u30b9\u30bf \u524d\u51e6\u7406 / 1. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc Excel\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f 2-1. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u8cfc\u8cb7\u65e5 / \u30ab\u30e9\u30e0\u8ffd\u52a0 KNIME\u3067\u306f\u3001\u5148\u982d\u30ab\u30e9\u30e0\u3092 RowID \u306b\u3059\u308b\u70ba\u3001RowID\u3092\u5143\u306b \u8cfc\u8cb7\u65e5 \u30ab\u30e9\u30e0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u51e6\u7406\u7d50\u679c\u306b \u8cfc\u8cb7\u65e5 \u30ab\u30e9\u30e0\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. RowID\u3092\u5143\u306b\u30ab\u30e9\u30e0\u8ffd\u52a0 Fig. \u30ab\u30e9\u30e0\u8ffd\u52a0\u5f8c\u30ec\u30b3\u30fc\u30c9 \u65b0\u3057\u3044\u5217\u540d - purchase_date (\u8cfc\u8cb7\u65e5) \u3092\u6307\u5b9a\u3059\u308b \u65b0\u3057\u3044\u5217 - purchase_date (\u8cfc\u8cb7\u65e5) \u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Other / RowID 2-2. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u8cfc\u8cb7\u65e5 / \u30c7\u30fc\u30bf\u578b\u5909\u66f4 \u8cfc\u8cb7\u65e5 \u30ab\u30e9\u30e0\u306e\u30c7\u30fc\u30bf\u578b\u3092\u6587\u5b57\u5217\u304b\u3089\u65e5\u4ed8\u306b\u5909\u66f4\u3057\u307e\u3059 Fig. \u6587\u5b57\u5217\u304b\u3089\u65e5\u4ed8\u306b\u5909\u63db Include\u30a8\u30ea\u30a2\u3067 purchase_date (\u8cfc\u8cb7\u65e5) \u306e\u307f\u3092\u6307\u5b9a\u3059\u308b \u5909\u63db\u3059\u308b\u30c7\u30fc\u30bf\u578b: Date \u3001\u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: yyyy-MM-dd HH:mm:ss \u3001Locale (\u5730\u57df) : ja-JP \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Other Data Types / Time Series /Transform / String to Date&Time 2-3. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u8cfc\u8cb7\u5e74\u6708 / \u30ab\u30e9\u30e0\u4f5c\u6210 \u8cfc\u8cb7\u65e5 \u30ab\u30e9\u30e0\u3092\u5143\u306b \u8cfc\u8cb7\u5e74\u6708 \u30ab\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3001\u96c6\u8a08\u6642\u306e\u96c6\u8a08\u9805\u76ee\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059 Fig. \u8cfc\u8cb7\u65e5\u30ab\u30e9\u30e0\u304b\u3089\u8cfc\u8cb7\u5e74\u6708\u30ab\u30e9\u30e0\u3092\u4f5c\u6210 Include\u30a8\u30ea\u30a2\u306b purchase_date (\u8cfc\u8cb7\u65e5) \u306e\u307f\u3092\u6307\u5b9a\u3059\u308b \u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: yyyy-MM \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Other Data Types / Time Series /Transform / Date&Time to String 2-4. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u8cfc\u8cb7\u5e74\u6708 / \u30ab\u30e9\u30e0\u540d\u5909\u66f4 \u8cfc\u8cb7\u5e74\u6708 \u30ab\u30e9\u30e0\u3092\u6b63\u3057\u3044\u540d\u79f0\u306b\u5909\u66f4\u3057\u307e\u3059 Fig. \u8cfc\u8cb7\u5e74\u6708\u30ab\u30e9\u30e0\u540d \u5909\u66f4 \u5909\u66f4\u5bfe\u8c61\u5217 - purchase_date(String) \u3092\u6307\u5b9a\u3059\u308b \u5909\u66f4\u5f8c\u306e\u5217\u540d purchase_year_month , \u30c7\u30fc\u30bf\u578b: StringValue \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Other Data Types / Time Series /Transform / Date&Time to String 2-5. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u540d / \u30b9\u30da\u30fc\u30b9\u9664\u53bb\u7b49 (\u6587\u5b57\u5217\u51e6\u7406) \u5404\u30ec\u30b3\u30fc\u30c9\u306e \u5546\u54c1\u540d \u306e\u5024\u304c\u7d71\u4e00\u3055\u308c\u3066\u3044\u306a\u3044\u70ba\u3001 \u5546\u54c1\u540d \u30ab\u30e9\u30e0\u306e\u5024\u3092\u6574\u5f62\u3057\u307e\u3059 \u30b9\u30da\u30fc\u30b9\u9664\u53bb \u6587\u5b57\u3092\u5927\u6587\u5b57\u306b\u7d71\u4e00 Fig. \u5546\u54c1\u540d \u6587\u5b57\u5217\u51e6\u7406 Java\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b 1 2 replace ( upperCase ( $item_name$ ), \" \" , \"\" ) \u4e0a\u66f8\u304d\u3059\u308b\u5217 - item_name (\u5546\u54c1\u540d) \u3092\u9078\u629e\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / String Manipulation 2-6. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u4fa1\u683c / \u6b20\u640d\u5024\u30ec\u30b3\u30fc\u30c9\u62bd\u51fa \u5546\u54c1\u4fa1\u683c\u30ab\u30e9\u30e0\u306e \u6b20\u640d\u5024 \u306e\u30ec\u30b3\u30fc\u30c9\u3092\u62bd\u51fa\u3057\u3001\u9664\u5916\u3055\u308c\u305f\u30ec\u30b3\u30fc\u30c9 (\u6b63\u3057\u3044\u30ec\u30b3\u30fc\u30c9) \u3092\u5143\u306b\u6b20\u640d\u5024\u3092\u7f6e\u63db\u3059\u308b\u5024\u3092 \u300c2-7\u300d\u304b\u3089\u306e\u51e6\u7406\u3067\u7b97\u51fa\u3057\u307e\u3059\u3002\u62bd\u51fa\u3057\u305f \u6b20\u640d\u5024 \u3092\u4fdd\u6709\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. \u30ec\u30b3\u30fc\u30c9\u5206\u5272 - \u6b20\u640d\u5024\u30ec\u30b3\u30fc\u30c9\u62bd\u51fa item_price (\u5546\u54c1\u540d) \u3092\u6b20\u640d\u5024\u5224\u5b9a\u30ab\u30e9\u30e0\u306b\u6307\u5b9a\u3059\u308b \u5224\u5b9a\u51e6\u7406 only missing value match (\u6b20\u640d\u5024\u306e\u307f\u306b\u8a72\u5f53) \u3092\u6307\u5b9a\u3059\u308b Fig. \u30ec\u30b3\u30fc\u30c9\u5206\u5272 - \u6b20\u640d\u5024\u30ec\u30b3\u30fc\u30c9 \u5b9f\u884c\u7d50\u679c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u78ba\u8a8d\u3057\u3001 item_price \u30ab\u30e9\u30e0\u304c\u5168\u3066 ? \u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Filter / Row Splitter 2-7. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u5e73\u5747\u7b97\u51fa item_name (\u5546\u54c1\u540d) \u5225 item_price (\u5546\u54c1\u4fa1\u683c) \u306e\u5e73\u5747\u5024\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002 Fig. \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u5e73\u5747\u7b97\u51fa Group\u30a8\u30ea\u30a2\u306b item_name (\u5546\u54c1\u540d) \u3092\u6307\u5b9a\u3059\u308b \u96c6\u8a08\u5bfe\u8c61\u30ab\u30e9\u30e0\u3068\u8a08\u7b97\u65b9\u6cd5 - item_price (\u5546\u54c1\u4fa1\u683c) \u306e\u5e73\u5747\u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Transform / GroupBy 2-8. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u7f6e\u63db-1 (\u30c6\u30fc\u30d6\u30eb\u9023\u7d50) \u300c2-2. \u6b20\u640d\u5024\u62bd\u51fa\u3055\u308c\u305f\u30ec\u30b3\u30fc\u30c9\u300d \u3068 \u300c2-7. \u6b20\u640d\u5024\u3092\u88dc\u5b8c\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u300d\u3092\u7d50\u5408\u3057\u307e\u3059\u3002 Mean(item_price) \u30ab\u30e9\u30e0\u304c\u6b20\u640d\u5024\u3092\u88dc\u5b8c\u3059\u308b\u5024\u306b\u306a\u308a\u307e\u3059\u3002 Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 - \u5546\u54c1\u4fa1\u683c\u306b\u6b20\u640d\u5024\u304c\u5b58\u5728\u3057\u305f\u30ec\u30b3\u30fc\u30c9 \u7d50\u5408\u3059\u308b\u30ab\u30e9\u30e0\u306b item_name (\u5546\u54c1\u540d) \u3092\u6307\u5b9a\u3059\u308b Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408\u5f8c\u30ec\u30b3\u30fc\u30c9 \u7d50\u5408\u51e6\u7406\u5b9f\u884c\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u78ba\u8a8d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Split & Combine / Joiner 2-9. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u7f6e\u63db-2 (\u4e0d\u8981\u30ab\u30e9\u30e0\u524a\u9664) item_price (\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u3092\u524a\u9664\u5bfe\u8c61\u306b\u6307\u5b9a\u3057\u3001 Mean(item_price) (\u5e73\u5747\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u3092\u6b8b\u3057\u307e\u3059\u3002 Fig. \u30ab\u30e9\u30e0\u30d5\u30a3\u30eb\u30bf\u30fc / \u4e0d\u8981\u30ab\u30e9\u30e0\u524a\u9664 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Filter / Column Filter 2-10. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u7f6e\u63db-2 (\u30ab\u30e9\u30e0\u540d\u5909\u66f4) \u30c6\u30fc\u30d6\u30eb\u7d50\u5408\u3057\u305f\u5f8c\u306e Mean(item_price) (\u5e73\u5747\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u306e\u540d\u79f0\u3092 item_price (\u5546\u54c1\u4fa1\u683c) \u5909\u66f4\u3057\u307e\u3059\u3002 Fig. \u30ab\u30e9\u30e0\u540d\u5909\u66f4 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / Column Rename 2-11. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u4fa1\u683c / \u6b20\u640d\u5024\u7f6e\u63db \u300c2-2. \u6b20\u640d\u5024\u30ec\u30b3\u30fc\u30c9\u62bd\u51fa\u51e6\u7406\u300d\u3067 \u6b20\u640d\u5024\u51e6\u7406\u5bfe\u8c61\u5916\u30ec\u30b3\u30fc\u30c9\u3068\u3001\u300c2-10. \u6b20\u640d\u5024\u51e6\u7406\u3092\u884c\u306a\u3063\u305f\u30ec\u30b3\u30fc\u30c9\u300d\u3092\u4e00\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u3057\u307e\u3059\u3002 Fig. \u30ec\u30b3\u30fc\u30c9\u7d50\u5408 Fig. \u30ec\u30b3\u30fc\u30c9\u7d50\u5408 \u7d50\u679c \u7d50\u5408\u51e6\u7406\u5b9f\u884c\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u78ba\u8a8d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Transform / Concatenate \u4f7f\u7528\u30ce\u30fc\u30c9\u4e00\u89a7 \u540d\u79f0 \u30a2\u30a4\u30b3\u30f3 \u6a5f\u80fd Excel Reader Excel \u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u3092\u306e1\u3064\u306e\u30b7\u30fc\u30c8\u304b\u3089\u30c7\u30fc\u30bf\u306e\u307f\u3092\u8aad\u307f\u53d6\u308a\u307e\u3059\u3002\u6570\u5024\u3001\u65e5\u4ed8\u3001\u30d6\u30fc\u30eb\u5024\u3001\u6587\u5b57\u5217\u306e\u30c7\u30fc\u30bf\u306e\u307f\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u56f3\u3001\u5199\u771f\u3001\u305d\u306e\u4ed6\u306e\u30a2\u30a4\u30c6\u30e0\u306f\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093 CSV Reader CSV\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u53d6\u308a\u307e\u3059\u3002\u30ce\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u30b9\u30ad\u30e3\u30f3\u3057\u3066\u5217\u306e\u6570\u3068\u30bf\u30a4\u30d7\u3092\u6c7a\u5b9a\u3057\u3001\u81ea\u52d5\u63a8\u6e2c\u3055\u308c\u305f\u69cb\u9020\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059 CSV Writer \u5165\u529b\u30c7\u30fc\u30bf\u30c6\u30fc\u30d6\u30eb\u3092\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306fURL\u3067\u793a\u3055\u308c\u308b\u30ea\u30e2\u30fc\u30c8\u306e\u5834\u6240\u306bCSV\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u66f8\u304d\u8fbc\u307f\u307e\u3059 String Manipulation \u691c\u7d22\u3068\u7f6e\u63db\u3001\u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u306e\u533a\u5225\u3001\u5148\u982d\u3068\u672b\u5c3e\u306e\u7a7a\u767d\u306a\u3069\u306e\u6587\u5b57\u5217\u3092\u64cd\u4f5c\u3057\u307e\u3059 String To Number \u5217 (\u307e\u305f\u306f\u5217\u306e\u30bb\u30c3\u30c8) \u5185\u306e\u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u307e\u3059 Column Rename \u5217\u540d\u3092\u5909\u66f4\u3059\u308b\u304b\u3001\u305d\u306e\u30bf\u30a4\u30d7\u3092\u5909\u66f4\u3057\u307e\u3059 Unix Timestamp To Date Time \u30a8\u30dd\u30c3\u30af (1970\u5e741\u67081\u65e5) \u4ee5\u964d\u306e\u79d2\u5358\u4f4d\u3001\u30df\u30ea\u79d2\u5358\u4f4d\u3001\u30de\u30a4\u30af\u30ed\u79d2\u5358\u4f4d\u3001\u307e\u305f\u306f\u30ca\u30ce\u79d2\u5358\u4f4d\u306eUNIX\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u51fa\u529b\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u3068\u30be\u30fc\u30f3\u306e\u65e5\u4ed8\u3068\u6642\u523b\u306e\u5f62\u5f0f\u3092\u9078\u629e\u3057\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059 Date Time To String DateTimeFormatter\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u6307\u5b9a\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3001Date\uff06Time\u5217\u306e\u6642\u523b\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u307e\u3059 String To Date Time \u6587\u5b57\u5217\u3092\u89e3\u6790\u3057\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u65e5\u4ed8\u3068\u6642\u523b\u306e\u30bb\u30eb\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u65e5\u4ed8\u306b\u306f\u3001\u6708\u3084\u66dc\u65e5\u306e\u540d\u524d\u306a\u3069\u306e\u30ed\u30fc\u30ab\u30e9\u30a4\u30ba\u3055\u308c\u305f\u7528\u8a9e\u304c\u542b\u307e\u308c\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u30ed\u30b1\u30fc\u30eb\u3092\u9078\u629e\u3067\u304d\u307e\u3059 Row Splitter Row Filter \u3068\u307e\u3063\u305f\u304f\u540c\u3058\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u306e\u7406\u7531\u304b\u3089\u3001\u884c\u30d5\u30a3\u30eb\u30bf\u30fc\u30ce\u30fc\u30c9\u306e\u4f7f\u7528\u3092\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 RowID \u5165\u529b\u30c7\u30fc\u30bf\u306e RowID \u3092\u5225\u306e\u5217\u306e\u5024 (\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u3053\u3068) \u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 (\u5217\u3092\u65b0\u898f\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd) Concatenate 2\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u9023\u7d50\u3057\u307e\u3059 Group By \u9078\u629e\u3057\u305f\u30b0\u30eb\u30fc\u30d7\u5217\u306e\u4e00\u610f\u306e\u5024\u3067\u30c6\u30fc\u30d6\u30eb\u306e\u884c\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002\u9078\u629e\u3057\u305f\u30b0\u30eb\u30fc\u30d7\u5217\u306e\u5024\u306e\u4e00\u610f\u306e\u30bb\u30c3\u30c8\u3054\u3068\u306b\u884c\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u6b8b\u308a\u306e\u5217\u306f\u3001\u6307\u5b9a\u3057\u305f\u96c6\u8a08\u8a2d\u5b9a\u306b\u57fa\u3065\u3044\u3066\u96c6\u8a08\u3055\u308c\u307e\u3059 Column Filter \u5165\u529b\u30c6\u30fc\u30d6\u30eb\u306e\u4e0d\u8981\u306a\u5217\u3092\u51fa\u529b\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u9664\u5916\u3057\u307e\u3059 Joiner \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u3088\u3046\u306a\u65b9\u6cd5\u30672\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u7d50\u5408\u3057\u307e\u3059 ( inner join , left outer join , right outer join , full outer join \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3059\u308b) Java Snipet \u4efb\u610f\u306eJava\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u65b0\u3057\u3044\u5217\u3092\u4f5c\u6210\u3057\u305f\u308a\u3001\u65e2\u5b58\u306e\u5217\u3092\u7f6e\u304d\u63db\u3048\u305f\u308a\u3067\u304d\u307e\u3059","title":"KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406"},{"location":"data-science/knime/knime-1/#knime","text":"\u4f5c\u6210\u65e5: 2020-03-31 \u66f4\u65b0\u65e5: 2020-04-11 \u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3067\u306f\u3001\u5927\u91cf\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3001\u6570\u5024\u30c7\u30fc\u30bf\u3092\u6271\u3044\u307e\u3059\u3002\u6570\u5024\u30c7\u30fc\u30bf\u306b\u306f\u3001\u6b20\u640d\u5024\u3001\u7570\u5e38\u5024\u306a\u3069\u3092\u542b\u3080\u70ba\u3001\u305d\u306e\u307e\u307e\u30c7\u30fc\u30bf\u5206\u6790\u3092\u9032\u3081\u3066\u3082\u671f\u5f85\u3057\u305f\u7d50\u679c\u30fb\u52b9\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u30c7\u30fc\u30bf\u5206\u6790\u3067\u306f\u3001\u30c7\u30fc\u30bf\u306e\u8aa4\u308a\u3001\u6f0f\u308c\u3001\u4e0d\u8db3\u3001\u77db\u76fe\u3092\u4e8b\u524d\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3001\u30c7\u30fc\u30bf\u3092\u6574\u3048\u308b\u300c\u524d\u51e6\u7406\u300d\u3068\u3044\u3046\u5de5\u7a0b\u304c\u5fc5\u8981\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u9867\u5ba2\u30de\u30b9\u30bf\u3068\u58f2\u4e0a\u30c7\u30fc\u30bf\u306e\u4e8c\u3064\u306e\u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u3092CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3001\u6b21\u56de\u306e\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 (\u53ef\u8996\u5316\u542b\u3080) \u306b\u9032\u307f\u307e\u3059\u3002","title":"KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406"},{"location":"data-science/knime/knime-1/#_1","text":"\u9867\u5ba2\u30de\u30b9\u30bf \u30c7\u30fc\u30bf\u51e6\u7406 \u58f2\u4e0a\u30c7\u30fc\u30bf \u30c7\u30fc\u30bf\u51e6\u7406 \u9867\u5ba2\u30de\u30b9\u30bf, \u58f2\u4e0a\u30c7\u30fc\u30bf\u7d50\u5408 CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u51fa\u529b \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u4e0b\u306e\u56f3\u306b\u793a\u3057\u305f\u901a\u308a\u3067\u3059\u3002 \u9867\u5ba2\u30de\u30b9\u30bf \u3068 \u58f2\u4e0a\u30c7\u30fc\u30bf \u306e\u524d\u51e6\u7406\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092 META_\u9867\u5ba2\u30de\u30b9\u30bf W/F \u3068 META_\u58f2\u4e0a\u30c7\u30fc\u30bf W/F \u306b\u305d\u308c\u305e\u308c\u307e\u3068\u3081\u3001\u305d\u306e\u5f8c\u3001 \u524d\u51e6\u7406\u5f8c\u306e\u4e8c\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u7d50\u5408 \u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u3001\u7d50\u5408\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3092 CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b \u3057\u307e\u3059\u3002 Fig. \u5168\u4f53\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","title":"\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5168\u4f53"},{"location":"data-science/knime/knime-1/#meta_-meta_","text":"META_\u9867\u5ba2\u30de\u30b9\u30bf W/F \u3068 META_\u58f2\u4e0a\u30c7\u30fc\u30bf W/F \u306e\u51fa\u529b (\u30ec\u30b3\u30fc\u30c9) \u3092\u7d50\u5408\u3057\u307e\u3059\u3002\u7d50\u5408\u3059\u308b\u30ab\u30e9\u30e0\u306f\u3001 \u9867\u5ba2\u540d \u3067\u3059\u3002 Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Split & Combine / Joiner","title":"META_\u9867\u5ba2\u30de\u30b9\u30bf \u3068 META_\u58f2\u4e0a\u30c7\u30fc\u30bf \u306e\u7d50\u5408"},{"location":"data-science/knime/knime-1/#csv","text":"\u6700\u7d42\u7684\u306b\u5f97\u3089\u308c\u305f\u30ec\u30b3\u30fc\u30c9\u3092CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002 \u51fa\u529b\u5148\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b \u30d5\u30a1\u30a4\u30eb\u304c\u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u6642\u3001\u4e0a\u66f8\u304d\u3092\u6307\u5b9a\u3059\u308b Fig. CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u51fa\u529b \u5229\u7528\u30ce\u30fc\u30c9: IO / Write / CSV Writer","title":"CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u306e\u51fa\u529b"},{"location":"data-science/knime/knime-1/#_2","text":"\u51e6\u7406\u6982\u8981: \u30c7\u30fc\u30bf\u8aad\u8fbc\u307f: \u9867\u5ba2\u30de\u30b9\u30bf\u30fc Excel\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f \u524d\u51e6\u7406: \u6c0f\u540d \u30b9\u30da\u30fc\u30b9\u9664\u53bb \u767b\u9332\u65e5 \u30c7\u30fc\u30bf\u578b\u7d71\u4e00 Excel \u30b7\u30ea\u30a2\u30eb\u5024 \u3092\u65e5\u4ed8\u578b\u306b\u5909\u63db \u30ec\u30b3\u30fc\u30c9\u30de\u30fc\u30b8 \u30c7\u30fc\u30bf\u51fa\u529b: \u30c7\u30fc\u30bf\u51e6\u7406\u5f8c \u9867\u5ba2\u30de\u30b9\u30bf\u30fc CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u51fa\u529b (\u518d\u5229\u7528) Fig. \u9867\u5ba2\u30de\u30b9\u30bf.\u524d\u51e6\u7406\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","title":"\u9867\u5ba2\u30de\u30b9\u30bf \u524d\u51e6\u7406"},{"location":"data-science/knime/knime-1/#1-excel","text":"KNIME\u306b \u9867\u5ba2\u30de\u30b9\u30bf\u30fc\u30d5\u30a1\u30a4\u30eb (Excel) \u3092\u8aad\u307f\u8fbc\u307f\u3001\u30ec\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u4e0a\u306b\u3042\u308b \u9867\u5ba2\u30de\u30b9\u30bf\u30fc Excel\u30d5\u30a1\u30a4\u30eb \u3092\u6307\u5b9a\u3059\u308b Excel\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u6210\u529f\u5f8c\u3001\u30c7\u30fc\u30bf\u30d7\u30ec\u30d3\u30e5\u30fc\u30a8\u30ea\u30a2\u306b\u30ec\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b \u5229\u7528\u30ce\u30fc\u30c9: IO / Read / Excel Reader","title":"1. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc Excel\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f"},{"location":"data-science/knime/knime-1/#2-1","text":"\u9867\u5ba2\u30de\u30b9\u30bf\u30fc.\u767b\u9332\u65e5\u30ab\u30e9\u30e0\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u7d71\u4e00\u3059\u308b\u70ba\u3001\u4e0d\u8981\u306a\u30b9\u30da\u30fc\u30b9 (Whitespace) \u3092\u9664\u53bb\u3057\u307e\u3059\u3002 replace\u95a2\u6570 \u3092\u4f7f\u3044 \" \" \u30b9\u30da\u30fc\u30b9\u3092\u9664\u53bb\u3059\u308b \u65e2\u5b58\u306e\u5217, \u9867\u5ba2\u540d\u3092\u6307\u5b9a\u3057\u3001\u51e6\u7406\u7d50\u679c\u3092\u4e0a\u66f8\u304d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / String Manipulation","title":"2-1. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u6c0f\u540d\u30ab\u30e9\u30e0 / \u30b9\u30da\u30fc\u30b9\u9664\u53bb"},{"location":"data-science/knime/knime-1/#2-2","text":"\u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u306e\u5024\u304c \u671f\u5f85\u3059\u308b\u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068 \u305d\u308c\u4ee5\u5916\u306b\u5206\u985e\u3057\u307e\u3059\u3002 \u691c\u67fb\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b\u3000 \u767b\u9332\u65e5 \u3092\u6307\u5b9a\u3059\u308b \u671f\u5f85\u3059\u308b\u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092 \u6b63\u898f\u8868\u73fe - ^(\\d{4})/(\\d{2})/(\\d{2})$ \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Filter / Row Splitter","title":"2-2. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5224\u5b9a + \u30ec\u30b3\u30fc\u30c9\u5206\u5272"},{"location":"data-science/knime/knime-1/#filtered-out","text":"\u30ce\u30fc\u30c9\u30a2\u30a4\u30b3\u30f3 \u3092\u9078\u629e\u3057\u3001\u51e6\u7406\u30e1\u30cb\u30e5\u30fc\u306e\u4e2d\u306e Filtered Out \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u9664\u5916\u30ec\u30b3\u30fc\u30c9 (\u671f\u5f85\u3059\u308b\u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4ee5\u5916) \u306e\u30ec\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 Fig. \u51e6\u7406\u30e1\u30cb\u30e5\u30fc Fig. \u9664\u5916\u30ec\u30b3\u30fc\u30c9\u8868 \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u306e\u5024\u304c reserved-*x1F \u3068\u306a\u3063\u3066\u3044\u3066 \u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306a\u3044\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002","title":"\u9664\u5916\u30ec\u30b3\u30fc\u30c9 (Filtered Out)"},{"location":"data-science/knime/knime-1/#2-3","text":"\u300c2-1. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u6c0f\u540d\u30ab\u30e9\u30e0 / \u30b9\u30da\u30fc\u30b9\u9664\u53bb\u300d\u3068\u540c\u69d8\u306b String Manipulation \u30ce\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u3001\u6587\u5b57\u5217\u7f6e\u63db\u3092\u884c\u3046 - \u5024\u304b\u3089 \u6587\u5b57\u5217 reserved- \u3068 x1F \u3092\u9664\u53bb\u3057\u307e\u3059\u3002 1 replace ( replace ( $\u767b\u9332\u65e5$ , \"reserved-\" , \"\" ), \"x1F\" , \"\" ) \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / String Manipulation","title":"2-3. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u6587\u5b57\u5217\u7f6e\u63db"},{"location":"data-science/knime/knime-1/#2-4","text":"\u524d\u306e\u30ce\u30fc\u30c9 - \u300c2-3. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u6587\u5b57\u5217\u7f6e\u63db\u300d\u3067 \u767b\u9332\u65e5 \u304b\u3089\u4e0d\u8981\u306a\u6587\u5b57\u5217\u3092\u9664\u53bb\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u5024 (\u6587\u5b57\u5217) \u306b\u6574\u5f62\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3092\u6570\u5024\u306b\u5909\u63db\u3059\u307e\u3059\u3002 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / String To Number","title":"2-4. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u5909\u63db"},{"location":"data-science/knime/knime-1/#2-5-java-unix-timestamp","text":"\u524d\u306e\u30ce\u30fc\u30c9 - \u300c2-4. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u5909\u63db\u300d\u3067 \u767b\u9332\u65e5 \u306e\u30b7\u30ea\u30a2\u30eb\u5024\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u3055\u3089\u306b\u305d\u306e\u5024\u3092 Unix Timestamp\u306b\u5909\u63db\u3057\u307e\u3059\u3002 \u30b7\u30ea\u30a2\u30eb\u5024\u304b\u3089Unix Timestamp\u306b\u5909\u63db\u3059\u308bJava\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b 1 2 // Enter your code here: out_RegisterdAt = ( c_RegisterdAt - 25569 ) * 86400 ; Java\u304b\u3089\u30ec\u30b3\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306b\u3059\u308b\u70ba\u3001Input\u30a8\u30ea\u30a2\u306b \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3057\u3001\u30c7\u30fc\u30bf\u578b: Integer, Java Field: c_RegisteredAt \u3068\u3059\u308b\u3002\u307e\u305f\u3001\u30b7\u30ea\u30a2\u30eb\u5024\u304b\u3089Unix Timestamp\u306b\u5909\u63db\u3057\u305f\u5024\u3092 \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u306b\u4e0a\u66f8\u304d\u3059\u308b (Output\u30a8\u30ea\u30a2\u3067\u8a2d\u5b9a\u3059\u308b) \u5229\u7528\u30ce\u30fc\u30c9: Scripting / Java / Java Snipet","title":"2-5. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / Java\u30b3\u30fc\u30c9 - \u30b7\u30ea\u30a2\u30eb\u5024\u304b\u3089Unix Timestamp\u3078\u5909\u63db"},{"location":"data-science/knime/knime-1/#2-6-unix-timestamp","text":"\u524d\u306e\u30ce\u30fc\u30c9 - \u300c2-5. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / Java\u30b3\u30fc\u30c9 - \u30b7\u30ea\u30a2\u30eb\u5024\u304b\u3089Unix Timestamp\u3078\u5909\u63db\u300d\u3067 \u767b\u9332\u65e5 \u306e Unix Timestamp\u306e\u5024\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u65e5\u4ed8\u578b\u306b\u5909\u63db\u3057\u307e\u3059\u3002 Include\u30a8\u30ea\u30a2\u3067 \u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3059\u308b \u5165\u529b\u5217\u306e\u5358\u4f4d\u3001\u51fa\u529b\u5217\u306e\u30c7\u30fc\u30bf\u578b - Date \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Other / Data Types / Time Series / Transform / UNIX Timestamp to Date&Time","title":"2-6. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u767b\u9332\u65e5\u30ab\u30e9\u30e0 / Unix Timestamp\u304b\u3089\u65e5\u4ed8\u578b\u3078\u5909\u63db"},{"location":"data-science/knime/knime-1/#2-7","text":"\u767b\u9332\u65e5 \u30ab\u30e9\u30e0\u306e\u4e0d\u6b63\u306a\u5024\u3092\u65e5\u4ed8\u578b\u306b\u4fee\u6b63\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3068\u3001\u6700\u521d\u304b\u3089\u65e5\u4ed8\u578b\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u7d50\u5408\u3057\u3001\u30c7\u30fc\u30bf\u5206\u6790\u7528\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\u51e6\u7406\u5f8c\u306e\u30ec\u30b3\u30fc\u30c9\u306f\u3001 Concatenated table \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Transform / Concatenate","title":"2-7. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc \u524d\u51e6\u7406 / \u30ec\u30b3\u30fc\u30c9\u7d50\u5408"},{"location":"data-science/knime/knime-1/#3","text":"\u524d\u51e6\u7406\u3092\u5b8c\u4e86\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3092CSV\u5f62\u5f0f\u3067\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u518d\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u5148\u3092\u6307\u5b9a\u3057\u3001\u65e2\u306b\u540c\u540d\u79f0\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308b\u6642\u306f\u3001\u4e0a\u66f8\u304d\u3059\u308b\u3088\u3046\u306b If file exists...: Overwrite(\u4e0a\u66f8\u304d) \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 \u5229\u7528\u30ce\u30fc\u30c9: IO / Write / CSV Writer","title":"3. \u30c7\u30fc\u30bf\u51e6\u7406\u5f8c \u30d5\u30a1\u30a4\u30eb\u51fa\u529b"},{"location":"data-science/knime/knime-1/#_3","text":"\u51e6\u7406\u6982\u8981: \u30c7\u30fc\u30bf\u8aad\u8fbc\u307f: \u58f2\u4e0a\u30c7\u30fc\u30bf CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f \u524d\u51e6\u7406: \u8cfc\u8cb7\u65e5 RowID\u3092\u5143\u306b\u3001 \u8cfc\u8cb7\u65e5 \u5217\u8ffd\u52a0 \u30c7\u30fc\u30bf\u578b\u7d71\u4e00 \u6587\u5b57\u5217\u304b\u3089\u65e5\u4ed8\u578b\u3078 \u8cfc\u8cb7\u65e5 \u3092\u5143\u306b\u3001 \u8cfc\u8cb7\u5e74\u6708 \u5217\u8ffd\u52a0 \u5546\u54c1\u540d \u30b9\u30da\u30fc\u30b9\u9664\u53bb (\u6587\u5b57\u5217\u51e6\u7406) \u5546\u54c1\u4fa1\u683c \u6b20\u640d\u5024\u51e6\u7406 \u6b20\u640d\u5024\u5b58\u5728\u30ec\u30b3\u30fc\u30c9, \u672a\u5b58\u5728\u30ec\u30b3\u30fc\u30c9 \u5206\u5272 \u6b20\u640d\u5024\u7f6e\u63db\u5024 \u7b97\u51fa\u3068\u7f6e\u63db \u30ec\u30b3\u30fc\u30c9\u7d50\u5408, \u6b20\u640d\u5024\u51e6\u7406\u6e08\u30ec\u30b3\u30fc\u30c9\u3068\u6b20\u640d\u5024\u51e6\u7406\u5bfe\u8c61\u5916\u30ec\u30b3\u30fc\u30c9 Fig. \u58f2\u4e0a\u30c7\u30fc\u30bf.\u524d\u51e6\u7406w\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","title":"\u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406"},{"location":"data-science/knime/knime-1/#1-csv","text":"KNIME\u306b \u58f2\u4e0a\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb (CSV) \u3092\u8aad\u307f\u8fbc\u307f\u3001\u30ec\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u4e0a\u306b\u3042\u308b \u58f2\u4e0a\u30c7\u30fc\u30bf CSV\u30d5\u30a1\u30a4\u30eb \u3092\u6307\u5b9a\u3059\u308b CSV\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u6210\u529f\u5f8c\u3001\u30c7\u30fc\u30bf\u30d7\u30ec\u30d3\u30e5\u30fc\u30a8\u30ea\u30a2\u306b\u30ec\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b \u5229\u7528\u30ce\u30fc\u30c9: IO / Read / CSV Reader \u53c2\u8003: \u9867\u5ba2\u30de\u30b9\u30bf \u524d\u51e6\u7406 / 1. \u9867\u5ba2\u30de\u30b9\u30bf\u30fc Excel\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f","title":"1. \u58f2\u4e0a\u30c7\u30fc\u30bf CSV\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f"},{"location":"data-science/knime/knime-1/#2-1_1","text":"KNIME\u3067\u306f\u3001\u5148\u982d\u30ab\u30e9\u30e0\u3092 RowID \u306b\u3059\u308b\u70ba\u3001RowID\u3092\u5143\u306b \u8cfc\u8cb7\u65e5 \u30ab\u30e9\u30e0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u51e6\u7406\u7d50\u679c\u306b \u8cfc\u8cb7\u65e5 \u30ab\u30e9\u30e0\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. RowID\u3092\u5143\u306b\u30ab\u30e9\u30e0\u8ffd\u52a0 Fig. \u30ab\u30e9\u30e0\u8ffd\u52a0\u5f8c\u30ec\u30b3\u30fc\u30c9 \u65b0\u3057\u3044\u5217\u540d - purchase_date (\u8cfc\u8cb7\u65e5) \u3092\u6307\u5b9a\u3059\u308b \u65b0\u3057\u3044\u5217 - purchase_date (\u8cfc\u8cb7\u65e5) \u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Other / RowID","title":"2-1. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u8cfc\u8cb7\u65e5 / \u30ab\u30e9\u30e0\u8ffd\u52a0"},{"location":"data-science/knime/knime-1/#2-2_1","text":"\u8cfc\u8cb7\u65e5 \u30ab\u30e9\u30e0\u306e\u30c7\u30fc\u30bf\u578b\u3092\u6587\u5b57\u5217\u304b\u3089\u65e5\u4ed8\u306b\u5909\u66f4\u3057\u307e\u3059 Fig. \u6587\u5b57\u5217\u304b\u3089\u65e5\u4ed8\u306b\u5909\u63db Include\u30a8\u30ea\u30a2\u3067 purchase_date (\u8cfc\u8cb7\u65e5) \u306e\u307f\u3092\u6307\u5b9a\u3059\u308b \u5909\u63db\u3059\u308b\u30c7\u30fc\u30bf\u578b: Date \u3001\u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: yyyy-MM-dd HH:mm:ss \u3001Locale (\u5730\u57df) : ja-JP \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Other Data Types / Time Series /Transform / String to Date&Time","title":"2-2. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u8cfc\u8cb7\u65e5 / \u30c7\u30fc\u30bf\u578b\u5909\u66f4"},{"location":"data-science/knime/knime-1/#2-3_1","text":"\u8cfc\u8cb7\u65e5 \u30ab\u30e9\u30e0\u3092\u5143\u306b \u8cfc\u8cb7\u5e74\u6708 \u30ab\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3001\u96c6\u8a08\u6642\u306e\u96c6\u8a08\u9805\u76ee\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059 Fig. \u8cfc\u8cb7\u65e5\u30ab\u30e9\u30e0\u304b\u3089\u8cfc\u8cb7\u5e74\u6708\u30ab\u30e9\u30e0\u3092\u4f5c\u6210 Include\u30a8\u30ea\u30a2\u306b purchase_date (\u8cfc\u8cb7\u65e5) \u306e\u307f\u3092\u6307\u5b9a\u3059\u308b \u65e5\u4ed8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8: yyyy-MM \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Other Data Types / Time Series /Transform / Date&Time to String","title":"2-3. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u8cfc\u8cb7\u5e74\u6708 / \u30ab\u30e9\u30e0\u4f5c\u6210"},{"location":"data-science/knime/knime-1/#2-4_1","text":"\u8cfc\u8cb7\u5e74\u6708 \u30ab\u30e9\u30e0\u3092\u6b63\u3057\u3044\u540d\u79f0\u306b\u5909\u66f4\u3057\u307e\u3059 Fig. \u8cfc\u8cb7\u5e74\u6708\u30ab\u30e9\u30e0\u540d \u5909\u66f4 \u5909\u66f4\u5bfe\u8c61\u5217 - purchase_date(String) \u3092\u6307\u5b9a\u3059\u308b \u5909\u66f4\u5f8c\u306e\u5217\u540d purchase_year_month , \u30c7\u30fc\u30bf\u578b: StringValue \u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Other Data Types / Time Series /Transform / Date&Time to String","title":"2-4. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u8cfc\u8cb7\u5e74\u6708 / \u30ab\u30e9\u30e0\u540d\u5909\u66f4"},{"location":"data-science/knime/knime-1/#2-5","text":"\u5404\u30ec\u30b3\u30fc\u30c9\u306e \u5546\u54c1\u540d \u306e\u5024\u304c\u7d71\u4e00\u3055\u308c\u3066\u3044\u306a\u3044\u70ba\u3001 \u5546\u54c1\u540d \u30ab\u30e9\u30e0\u306e\u5024\u3092\u6574\u5f62\u3057\u307e\u3059 \u30b9\u30da\u30fc\u30b9\u9664\u53bb \u6587\u5b57\u3092\u5927\u6587\u5b57\u306b\u7d71\u4e00 Fig. \u5546\u54c1\u540d \u6587\u5b57\u5217\u51e6\u7406 Java\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b 1 2 replace ( upperCase ( $item_name$ ), \" \" , \"\" ) \u4e0a\u66f8\u304d\u3059\u308b\u5217 - item_name (\u5546\u54c1\u540d) \u3092\u9078\u629e\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / String Manipulation","title":"2-5. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u540d / \u30b9\u30da\u30fc\u30b9\u9664\u53bb\u7b49 (\u6587\u5b57\u5217\u51e6\u7406)"},{"location":"data-science/knime/knime-1/#2-6","text":"\u5546\u54c1\u4fa1\u683c\u30ab\u30e9\u30e0\u306e \u6b20\u640d\u5024 \u306e\u30ec\u30b3\u30fc\u30c9\u3092\u62bd\u51fa\u3057\u3001\u9664\u5916\u3055\u308c\u305f\u30ec\u30b3\u30fc\u30c9 (\u6b63\u3057\u3044\u30ec\u30b3\u30fc\u30c9) \u3092\u5143\u306b\u6b20\u640d\u5024\u3092\u7f6e\u63db\u3059\u308b\u5024\u3092 \u300c2-7\u300d\u304b\u3089\u306e\u51e6\u7406\u3067\u7b97\u51fa\u3057\u307e\u3059\u3002\u62bd\u51fa\u3057\u305f \u6b20\u640d\u5024 \u3092\u4fdd\u6709\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. \u30ec\u30b3\u30fc\u30c9\u5206\u5272 - \u6b20\u640d\u5024\u30ec\u30b3\u30fc\u30c9\u62bd\u51fa item_price (\u5546\u54c1\u540d) \u3092\u6b20\u640d\u5024\u5224\u5b9a\u30ab\u30e9\u30e0\u306b\u6307\u5b9a\u3059\u308b \u5224\u5b9a\u51e6\u7406 only missing value match (\u6b20\u640d\u5024\u306e\u307f\u306b\u8a72\u5f53) \u3092\u6307\u5b9a\u3059\u308b Fig. \u30ec\u30b3\u30fc\u30c9\u5206\u5272 - \u6b20\u640d\u5024\u30ec\u30b3\u30fc\u30c9 \u5b9f\u884c\u7d50\u679c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u78ba\u8a8d\u3057\u3001 item_price \u30ab\u30e9\u30e0\u304c\u5168\u3066 ? \u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Filter / Row Splitter","title":"2-6. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u4fa1\u683c / \u6b20\u640d\u5024\u30ec\u30b3\u30fc\u30c9\u62bd\u51fa"},{"location":"data-science/knime/knime-1/#2-7_1","text":"item_name (\u5546\u54c1\u540d) \u5225 item_price (\u5546\u54c1\u4fa1\u683c) \u306e\u5e73\u5747\u5024\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002 Fig. \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u5e73\u5747\u7b97\u51fa Group\u30a8\u30ea\u30a2\u306b item_name (\u5546\u54c1\u540d) \u3092\u6307\u5b9a\u3059\u308b \u96c6\u8a08\u5bfe\u8c61\u30ab\u30e9\u30e0\u3068\u8a08\u7b97\u65b9\u6cd5 - item_price (\u5546\u54c1\u4fa1\u683c) \u306e\u5e73\u5747\u3092\u6307\u5b9a\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Transform / GroupBy","title":"2-7. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u5e73\u5747\u7b97\u51fa"},{"location":"data-science/knime/knime-1/#2-8-1","text":"\u300c2-2. \u6b20\u640d\u5024\u62bd\u51fa\u3055\u308c\u305f\u30ec\u30b3\u30fc\u30c9\u300d \u3068 \u300c2-7. \u6b20\u640d\u5024\u3092\u88dc\u5b8c\u3059\u308b\u30ec\u30b3\u30fc\u30c9\u300d\u3092\u7d50\u5408\u3057\u307e\u3059\u3002 Mean(item_price) \u30ab\u30e9\u30e0\u304c\u6b20\u640d\u5024\u3092\u88dc\u5b8c\u3059\u308b\u5024\u306b\u306a\u308a\u307e\u3059\u3002 Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 - \u5546\u54c1\u4fa1\u683c\u306b\u6b20\u640d\u5024\u304c\u5b58\u5728\u3057\u305f\u30ec\u30b3\u30fc\u30c9 \u7d50\u5408\u3059\u308b\u30ab\u30e9\u30e0\u306b item_name (\u5546\u54c1\u540d) \u3092\u6307\u5b9a\u3059\u308b Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408\u5f8c\u30ec\u30b3\u30fc\u30c9 \u7d50\u5408\u51e6\u7406\u5b9f\u884c\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u78ba\u8a8d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Split & Combine / Joiner","title":"2-8. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u7f6e\u63db-1 (\u30c6\u30fc\u30d6\u30eb\u9023\u7d50)"},{"location":"data-science/knime/knime-1/#2-9-2","text":"item_price (\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u3092\u524a\u9664\u5bfe\u8c61\u306b\u6307\u5b9a\u3057\u3001 Mean(item_price) (\u5e73\u5747\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u3092\u6b8b\u3057\u307e\u3059\u3002 Fig. \u30ab\u30e9\u30e0\u30d5\u30a3\u30eb\u30bf\u30fc / \u4e0d\u8981\u30ab\u30e9\u30e0\u524a\u9664 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Filter / Column Filter","title":"2-9. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u7f6e\u63db-2 (\u4e0d\u8981\u30ab\u30e9\u30e0\u524a\u9664)"},{"location":"data-science/knime/knime-1/#2-10-2","text":"\u30c6\u30fc\u30d6\u30eb\u7d50\u5408\u3057\u305f\u5f8c\u306e Mean(item_price) (\u5e73\u5747\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u306e\u540d\u79f0\u3092 item_price (\u5546\u54c1\u4fa1\u683c) \u5909\u66f4\u3057\u307e\u3059\u3002 Fig. \u30ab\u30e9\u30e0\u540d\u5909\u66f4 \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Column / Convert & Replace / Column Rename","title":"2-10. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u5225 \u5546\u54c1\u4fa1\u683c \u7f6e\u63db-2 (\u30ab\u30e9\u30e0\u540d\u5909\u66f4)"},{"location":"data-science/knime/knime-1/#2-11","text":"\u300c2-2. \u6b20\u640d\u5024\u30ec\u30b3\u30fc\u30c9\u62bd\u51fa\u51e6\u7406\u300d\u3067 \u6b20\u640d\u5024\u51e6\u7406\u5bfe\u8c61\u5916\u30ec\u30b3\u30fc\u30c9\u3068\u3001\u300c2-10. \u6b20\u640d\u5024\u51e6\u7406\u3092\u884c\u306a\u3063\u305f\u30ec\u30b3\u30fc\u30c9\u300d\u3092\u4e00\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u3057\u307e\u3059\u3002 Fig. \u30ec\u30b3\u30fc\u30c9\u7d50\u5408 Fig. \u30ec\u30b3\u30fc\u30c9\u7d50\u5408 \u7d50\u679c \u7d50\u5408\u51e6\u7406\u5b9f\u884c\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u78ba\u8a8d\u3059\u308b \u5229\u7528\u30ce\u30fc\u30c9: Manipulation / Row / Transform / Concatenate","title":"2-11. \u58f2\u4e0a\u30c7\u30fc\u30bf \u524d\u51e6\u7406 / \u5546\u54c1\u4fa1\u683c / \u6b20\u640d\u5024\u7f6e\u63db"},{"location":"data-science/knime/knime-1/#_4","text":"\u540d\u79f0 \u30a2\u30a4\u30b3\u30f3 \u6a5f\u80fd Excel Reader Excel \u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\u3092\u306e1\u3064\u306e\u30b7\u30fc\u30c8\u304b\u3089\u30c7\u30fc\u30bf\u306e\u307f\u3092\u8aad\u307f\u53d6\u308a\u307e\u3059\u3002\u6570\u5024\u3001\u65e5\u4ed8\u3001\u30d6\u30fc\u30eb\u5024\u3001\u6587\u5b57\u5217\u306e\u30c7\u30fc\u30bf\u306e\u307f\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u56f3\u3001\u5199\u771f\u3001\u305d\u306e\u4ed6\u306e\u30a2\u30a4\u30c6\u30e0\u306f\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093 CSV Reader CSV\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u53d6\u308a\u307e\u3059\u3002\u30ce\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3092\u30b9\u30ad\u30e3\u30f3\u3057\u3066\u5217\u306e\u6570\u3068\u30bf\u30a4\u30d7\u3092\u6c7a\u5b9a\u3057\u3001\u81ea\u52d5\u63a8\u6e2c\u3055\u308c\u305f\u69cb\u9020\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb\u3092\u51fa\u529b\u3057\u307e\u3059 CSV Writer \u5165\u529b\u30c7\u30fc\u30bf\u30c6\u30fc\u30d6\u30eb\u3092\u30d5\u30a1\u30a4\u30eb\u307e\u305f\u306fURL\u3067\u793a\u3055\u308c\u308b\u30ea\u30e2\u30fc\u30c8\u306e\u5834\u6240\u306bCSV\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u66f8\u304d\u8fbc\u307f\u307e\u3059 String Manipulation \u691c\u7d22\u3068\u7f6e\u63db\u3001\u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u306e\u533a\u5225\u3001\u5148\u982d\u3068\u672b\u5c3e\u306e\u7a7a\u767d\u306a\u3069\u306e\u6587\u5b57\u5217\u3092\u64cd\u4f5c\u3057\u307e\u3059 String To Number \u5217 (\u307e\u305f\u306f\u5217\u306e\u30bb\u30c3\u30c8) \u5185\u306e\u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u307e\u3059 Column Rename \u5217\u540d\u3092\u5909\u66f4\u3059\u308b\u304b\u3001\u305d\u306e\u30bf\u30a4\u30d7\u3092\u5909\u66f4\u3057\u307e\u3059 Unix Timestamp To Date Time \u30a8\u30dd\u30c3\u30af (1970\u5e741\u67081\u65e5) \u4ee5\u964d\u306e\u79d2\u5358\u4f4d\u3001\u30df\u30ea\u79d2\u5358\u4f4d\u3001\u30de\u30a4\u30af\u30ed\u79d2\u5358\u4f4d\u3001\u307e\u305f\u306f\u30ca\u30ce\u79d2\u5358\u4f4d\u306eUNIX\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u51fa\u529b\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u3068\u30be\u30fc\u30f3\u306e\u65e5\u4ed8\u3068\u6642\u523b\u306e\u5f62\u5f0f\u3092\u9078\u629e\u3057\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059 Date Time To String DateTimeFormatter\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u6307\u5b9a\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3001Date\uff06Time\u5217\u306e\u6642\u523b\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u307e\u3059 String To Date Time \u6587\u5b57\u5217\u3092\u89e3\u6790\u3057\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u65e5\u4ed8\u3068\u6642\u523b\u306e\u30bb\u30eb\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u65e5\u4ed8\u306b\u306f\u3001\u6708\u3084\u66dc\u65e5\u306e\u540d\u524d\u306a\u3069\u306e\u30ed\u30fc\u30ab\u30e9\u30a4\u30ba\u3055\u308c\u305f\u7528\u8a9e\u304c\u542b\u307e\u308c\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u30ed\u30b1\u30fc\u30eb\u3092\u9078\u629e\u3067\u304d\u307e\u3059 Row Splitter Row Filter \u3068\u307e\u3063\u305f\u304f\u540c\u3058\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u306e\u7406\u7531\u304b\u3089\u3001\u884c\u30d5\u30a3\u30eb\u30bf\u30fc\u30ce\u30fc\u30c9\u306e\u4f7f\u7528\u3092\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 RowID \u5165\u529b\u30c7\u30fc\u30bf\u306e RowID \u3092\u5225\u306e\u5217\u306e\u5024 (\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3059\u308b\u3053\u3068) \u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 (\u5217\u3092\u65b0\u898f\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd) Concatenate 2\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u9023\u7d50\u3057\u307e\u3059 Group By \u9078\u629e\u3057\u305f\u30b0\u30eb\u30fc\u30d7\u5217\u306e\u4e00\u610f\u306e\u5024\u3067\u30c6\u30fc\u30d6\u30eb\u306e\u884c\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002\u9078\u629e\u3057\u305f\u30b0\u30eb\u30fc\u30d7\u5217\u306e\u5024\u306e\u4e00\u610f\u306e\u30bb\u30c3\u30c8\u3054\u3068\u306b\u884c\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u6b8b\u308a\u306e\u5217\u306f\u3001\u6307\u5b9a\u3057\u305f\u96c6\u8a08\u8a2d\u5b9a\u306b\u57fa\u3065\u3044\u3066\u96c6\u8a08\u3055\u308c\u307e\u3059 Column Filter \u5165\u529b\u30c6\u30fc\u30d6\u30eb\u306e\u4e0d\u8981\u306a\u5217\u3092\u51fa\u529b\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u9664\u5916\u3057\u307e\u3059 Joiner \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u3088\u3046\u306a\u65b9\u6cd5\u30672\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u7d50\u5408\u3057\u307e\u3059 ( inner join , left outer join , right outer join , full outer join \u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3059\u308b) Java Snipet \u4efb\u610f\u306eJava\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u65b0\u3057\u3044\u5217\u3092\u4f5c\u6210\u3057\u305f\u308a\u3001\u65e2\u5b58\u306e\u5217\u3092\u7f6e\u304d\u63db\u3048\u305f\u308a\u3067\u304d\u307e\u3059","title":"\u4f7f\u7528\u30ce\u30fc\u30c9\u4e00\u89a7"},{"location":"data-science/knime/knime-2/","text":"KNIME \u5165\u9580\u7de8 / \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 \u4f5c\u6210\u65e5: 2020-04-07 \u66f4\u65b0\u65e5: 2020-04-12 \u524d\u56de - KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 (1) \u3067\u3001 (1)\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30fc\u30bf\u306b\u5b58\u5728\u3057\u3066\u3044\u305f\u6b20\u640d\u5024\u3092\u4fee\u6b63\u3001(2)\u5404\u30ab\u30e9\u30e0\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u7d71\u4e00 \u3001\u3059\u308b\u3053\u3068\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u305d\u308c\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u5206\u6790\u53ef\u80fd\u306a\u30c7\u30fc\u30bf\u3092\u4f5c\u308a\u3001CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u307e\u3057\u305f\u3002 \u4eca\u56de\u306f\u3001\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 ( Exploratory Data Analysis: EDA ) - \u30c7\u30fc\u30bf\u306e\u96c6\u8a08\u3001\u8981\u7d04\u3001\u53ef\u8996\u5316\u3092\u884c\u3044\u3001\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3057\u307e\u3059\u3002 \u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u524d\u306b \u3069\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306a\u306e\u304b\u78ba\u8a8d\u3059\u308b\u6bb5\u968e\u304c\u5fc5\u8981\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7406\u89e3\u3092\u6df1\u3081\u308b\u3053\u3068\u3067\u3001\u826f\u3044\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u306b\u7e4b\u304c\u308b\u53ef\u80fd\u6027\u3092\u9ad8\u3081\u308b\u304b\u3089\u3067\u3059\u3002 \u30c7\u30fc\u30bf\u3092\u4fef\u77b0\u3057\u3001\u6b20\u640d\u5024\u3001\u7570\u5e38\u5024(\u5916\u308c\u5024)\u3001\u30c7\u30fc\u30bf\u306e\u5206\u5e03\u306a\u3069\u30c7\u30fc\u30bf\u5168\u4f53\u3042\u308b\u3044\u306f\u30c7\u30fc\u30bf\u9593\u306e\u95a2\u4fc2\u6027\u3084\u305d\u306e\u3070\u3089\u3064\u304d\u3092\u898b\u308b\u70ba\u306b\u3001\u3053\u306e\u6bb5\u968e\u3067\u306f\u3001\u7c21\u5358\u306a\u96c6\u8a08\u3068\u30c7\u30fc\u30bf\u3092\u5404\u7a2e\u30c1\u30e3\u30fc\u30c8\u4f5c\u6210\u3057\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5168\u4f53 \u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u5f8c\u58f2\u4e0a\u30c7\u30fc\u30bf (CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb) \u8aad\u307f\u8fbc\u307f \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u4f5c\u6210 \u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u53ef\u8996\u5316 \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u4e0b\u306e\u56f3\u306b\u793a\u3057\u305f\u901a\u308a\u3067\u3059\u3002 \u524d\u56de - KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 (1) \u3067\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30fc\u30bf\u3092\u30c7\u30fc\u30bf\u5206\u6790\u304c\u884c\u3048\u308b\u30c7\u30fc\u30bf\u306b\u4fee\u6b63\u3057\u3001\u305d\u308c\u3092 CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3044\u53ef\u8996\u5316\u3092\u884c\u3044\u307e\u3059\u3002 Fig. \u5168\u4f53\u30ef\u30fc\u30af\u30d5\u30ed\u30fc \u30c7\u30fc\u30bf \u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u5f8c \u58f2\u4e0a\u30c7\u30fc\u30bf \u8aad\u307f\u8fbc\u307f \u524d\u56de\u4f5c\u6210\u3057\u305f \u300c\u30c7\u30fc\u30bf \u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u5f8c \u58f2\u4e0a\u30c7\u30fc\u30bf\u300d \u3092\u6307\u5b9a\u3057\u3001KNIME\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u304c\u6b63\u3057\u304f\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u304b File Table \u3092\u5b9f\u884c\u3057\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. CSV Reader \u8a2d\u5b9a Fig. \u30ec\u30b3\u30fc\u30c9\u4e00\u89a7 (File Table) \u5229\u7528\u30ce\u30fc\u30c9: IO / Read / CSV Reader \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0 \u30c1\u30e3\u30fc\u30c8 \u4f5c\u6210 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3057\u307e\u3059\u3002 purchase_year_month (\u8cfc\u5165\u5e74\u6708) \u3092\u30d3\u30cb\u30f3\u30b0\u30ab\u30e9\u30e0\u306b\u6307\u5b9a\u3057\u3001 item_price\u3000(\u5546\u54c1\u4fa1\u683c) \u3092\u96c6\u8a08\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 Fig. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u30ce\u30fc\u30c9 \u8a2d\u5b9a View: Interactive Histogram View \u3092\u5b9f\u884c\u3057\u3001\u51e6\u7406\u5f8c\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u30c1\u30e3\u30fc\u30c8\u3092\u8868\u793a\u3057\u307e\u3059\u3002 Fig. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u30ce\u30fc\u30c9 \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc \u4e0b\u306e\u56f3\u3067\u306f\u3001\u8cfc\u5165\u5e74\u6708\u5225\u306e item_price (\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u306e\u30ec\u30b3\u30fc\u30c9\u306e\u5408\u8a08\u3092\u96c6\u8a08\u3057\u305f\u30c1\u30e3\u30fc\u30c8\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002 1. \u96c6\u8a08\u65b9\u6cd5\u306e\u5909\u66f4 \u3068 2. \u30d3\u30cb\u30f3\u30b0\u30ab\u30e9\u30e0\u306e\u5909\u66f4 \u304c\u53ef\u80fd\u3067\u3059\u3002 \u96c6\u8a08\u65b9\u6cd5: Average (\u5e73\u5747) Sum (\u5408\u8a08) Row Count (\u884c\u6570) Row Count w/o missin values (\u6b20\u640d\u5024\u3092\u9664\u304f\u884c\u6570) \u30d3\u30cb\u30f3\u30b0\u30ab\u30e9\u30e0: item_name (\u5546\u54c1\u540d) purchase_year_and_month (\u8cfc\u5165\u5e74\u6708) item_price (\u5546\u54c1\u4fa1\u683c) \u5730\u57df Fig. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0 Interactive Histogram (\u5bfe\u8a71\u578b\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0) \u30ce\u30fc\u30c9 \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5bb9\u6613\u306b\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002 \u5229\u7528\u30ce\u30fc\u30c9: Views / Local (Swing) / Interactive Histogram (Local) \u53ef\u8996\u5316 \u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u51e6\u7406\u6982\u8981: \u30c7\u30fc\u30bf\u51e6\u7406: \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 \u6b20\u640d\u5024\u51e6\u7406 \u53ef\u8996\u5316: Data Explorer - \u30c7\u30fc\u30bf\u63a2\u7d22 Box Plot - \u30dc\u30c3\u30af\u30b9 \u30d7\u30ed\u30c3\u30c8 (\u7bb1\u3072\u3052\u56f3) Line Plot - \u30e9\u30a4\u30f3 \u30d7\u30ed\u30c3\u30c8 (\u6298\u308c\u7dda) Stacked Area Chart - \u7a4d\u91cd\u306d\u30a8\u30ea\u30a2 \u30c1\u30e3\u30fc\u30c8 Bar Plot - \u30d0\u30fc \u30c1\u30e3\u30fc\u30c8 Fig. \u53ef\u8996\u5316/\u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u30ef\u30fc\u30af\u30d5\u30ed\u30fc \u30c7\u30fc\u30bf\u51e6\u7406/ \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 \u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d\u30c6\u30fc\u30d6\u30eb \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Group column(s) \u306b purchase_year_and_month (\u8cfc\u5165\u5e74\u6708) \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3059\u308b Pivoit column(s) \u306b item_name (\u5546\u54c1\u540d) \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3059\u308b \u96c6\u8a08\u5bfe\u8c61\u306b item_price (\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3057\u3001\u96c6\u8a08\u65b9\u6cd5\u3092 Sum (\u5408\u8a08) \u3068\u3059\u308b Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30ce\u30fc\u30c9 \u8a2d\u5b9a (1) Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30ce\u30fc\u30c9 \u8a2d\u5b9a (2) Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30ce\u30fc\u30c9 \u8a2d\u5b9a (3) \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc (\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc) \u5185\u306e Pivot Table \u3092\u5b9f\u884c\u3057\u3001\u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d\u30c6\u30fc\u30d6\u30eb\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u51e6\u7406\u7d50\u679c\u3068\u3001 \u5546\u54c1Z \u306b\u6b20\u640d\u5024\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30ce\u30fc\u30c9 \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30c7\u30fc\u30bf\u51e6\u7406/ \u6b20\u640d\u5024\u51e6\u7406 \u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d\u30c6\u30fc\u30d6\u30eb\u306e \u5546\u54c1Z \u306e\u6b20\u640d\u5024\u306b 0 \u3092\u8a2d\u5b9a\u3057\u3001\u53ef\u8996\u5316\u51e6\u7406\u7528\u306e\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u51e6\u7406\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d\u65b9\u6cd5\u306f\u3001\u524d\u306e\u30b9\u30c6\u30c3\u30d7\u3068\u540c\u69d8\u306b \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc (\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc) \u5185\u306e Output Table \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u5143\u306b\u3057\u3066\u5404\u53ef\u8996\u5316\u30ce\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u8a2d\u5b9a\u753b\u9762 Number (double): Fix Value, Value: 0.0 \u3092\u6307\u5b9a\u3059\u308b Fig. \u6b20\u640d\u5024\u51e6\u7406\u30ce\u30fc\u30c9 \u8a2d\u5b9a \u53ef\u8996\u5316 / \u30c7\u30fc\u30bf\u63a2\u7d22 \u5546\u54c1\u5225\u306e\u7d71\u8a08\u60c5\u5831\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u7d71\u8a08\u60c5\u5831\u306b\u6b21\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059 - Minimum (\u6700\u5c0f\u5024) , Maximum (\u6700\u5927\u5024) , Mean (\u5e73\u5747) , Median (\u4e2d\u592e\u5024) , Standard Deviation (\u6a19\u6e96\u504f\u5dee) , Variance (\u5206\u6563) , Skewness (\u6b6a\u5ea6) , Kurtosis (\u5c16\u5ea6) , Overall Sum (\u7dcf\u548c) \u5c1a\u3001 Median (\u4e2d\u592e\u5024) \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8a08\u7b97\u5bfe\u8c61\u5916\u306b\u306a\u3063\u3066\u3044\u308b\u70ba\u3001\u5fc5\u8981\u306a\u6642\u306f\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7d71\u8a08\u60c5\u5831\u306e\u5217\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u3001\u964d\u9806/\u6607\u9806\u30bd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22\u30ce\u30fc\u30c9 \u51e6\u7406\u7d50\u679c (1) \u5404\u884c\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b [+]\u30dc\u30bf\u30f3 \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u3001\u9078\u629e\u884c\u306e\u4e0b\u90e8\u306b\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22\u30ce\u30fc\u30c9 \u51e6\u7406\u7d50\u679c (2) \u53ef\u8996\u5316 / \u30dc\u30c3\u30af\u30b9 \u30d7\u30ed\u30c3\u30c8 \u5168\u5546\u54c1\u3092\u5bfe\u8c61\u3068\u3059\u308b \u30dc\u30c3\u30af\u30b9 \u30d7\u30ed\u30c3\u30c8 (\u7bb1\u3072\u3052\u56f3) \u3092\u4f5c\u6210\u3057\u3001\u30c7\u30fc\u30bf\u306e\u5206\u5e03\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u63a2\u7d22\u30ce\u30fc\u30c9\u3088\u308a\u3082\u76f4\u611f\u7684\u306b\u30c7\u30fc\u30bf\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Fig. \u30dc\u30c3\u30af\u30b9\u30d7\u30ed\u30c3\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u30dc\u30c3\u30af\u30b9\u30d7\u30ed\u30c3\u30c8 \u53c2\u8003: \u7bb1\u3072\u3052\u56f3 \u53ef\u8996\u5316 / \u30e9\u30a4\u30f3 \u30d7\u30ed\u30c3\u30c8 X\u8ef8\u306b\u8cfc\u5165\u5e74\u6708\u5225\u3092, Y\u8ef8\u306b\u5546\u54c1\u4fa1\u683c\u306e\u7dcf\u548c\u3092\u6307\u5b9a\u3057\u3001\u5168\u5546\u54c1\u3092\u5bfe\u8c61\u306b\u3057\u305f\u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Fig. \u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a (1) Fig. \u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a (2) Fig. \u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8 \u5546\u54c1\u6570\u304c\u591a\u3044\u70ba\u3001\u76f4\u611f\u7684\u306b\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8\u3068\u30d0\u30fc\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8\u3068\u306e\u9055\u3044\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002 \u53ef\u8996\u5316 / \u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8 X\u8ef8\u306b\u8cfc\u5165\u5e74\u6708\u5225\u3092, Y\u8ef8\u306b\u5546\u54c1\u4fa1\u683c\u306e\u7dcf\u548c\u3092\u6307\u5b9a\u3057\u3001\u5168\u5546\u54c1\u3092\u5bfe\u8c61\u306b\u3057\u305f\u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8\u3068\u6bd4\u8f03\u3057\u3066\u3001\u8cfc\u5165\u5e74\u6708\u5225\u306e\u58f2\u4e0a\u7dcf\u984d\u3001\u5546\u54c1\u5225\u304c\u3069\u308c\u304f\u3089\u3044\u58f2\u4e0a\u5168\u4f53\u306b\u5bfe\u3057\u3066\u306b\u5360\u3081\u3066\u3044\u308b\u304b\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Fig. \u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8 \u53ef\u8996\u5316 / \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 X\u8ef8\u306b\u8cfc\u5165\u5e74\u6708\u5225\u3092, Y\u8ef8\u306b\u5546\u54c1\u4fa1\u683c\u306e\u7dcf\u548c\u3092\u6307\u5b9a\u3057\u3001\u5168\u5546\u54c1\u3092\u5bfe\u8c61\u306b\u3057\u305f\u7a4d\u91cd\u306d\u30d0\u30fc\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8\u3068\u540c\u69d8\u306b\u3001\u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8\u3068\u6bd4\u8f03\u3057\u3066\u3001\u8cfc\u5165\u5e74\u6708\u5225\u306e\u58f2\u4e0a\u7dcf\u984d\u3001\u5546\u54c1\u5225\u304c\u3069\u308c\u304f\u3089\u3044\u58f2\u4e0a\u5168\u4f53\u306b\u5bfe\u3057\u3066\u306b\u5360\u3081\u3066\u3044\u308b\u304b\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u5229\u7528\u30ce\u30fc\u30c9 Manipulation / Row / Transform / Pivoting Manipulation / Column / Transform / Missing Value Nodes / KNIME Labs / JavaScript Views (Labs) / Data Explorer Views / JavaScript / Box Plot Views / JavaScript / Line Plot Views / JavaScript / Stacked Area Chart Views / JavaScript / Bar Chart \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u5168\u671f\u9593\u5546\u54c1\u5225\u306e\u58f2\u4e0a\u91d1\u984d\u3092\u96c6\u8a08\u3057\u305f\u7d50\u679c\u306e\u53ef\u8996\u5316\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u306e\u53ef\u8996\u5316\u306b\u3088\u308a\u5546\u54c1\u5225\u306e\u58f2\u4e0a\u306e\u76f8\u9055\u3092\u628a\u63e1\u3059\u308b\u3053\u304c\u3067\u304d\u307e\u3059\u3002 \u30c7\u30fc\u30bf\u51e6\u7406 / \u96c6\u8a08 Group column(s)\u306b item_name (\u5546\u54c1\u540d) \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Fig. \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u96c6\u8a08 \u8a2d\u5b9a (1) \u96c6\u8a08\u30ab\u30e9\u30e0\u306b item_price (\u5546\u54c1\u4fa1\u683c) \u3001\u96c6\u8a08\u65b9\u6cd5\u306b Sum (\u7dcf\u548c) \u3092\u6307\u5b9a\u3057\u307e\u3059 Fig. \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u96c6\u8a08 \u8a2d\u5b9a (2) \u53ef\u8996\u5316 / \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 Category Column (X\u8ef8) \u306b item_name (\u5546\u54c1\u540d) \u3001Y\u8ef8\u306b Sum(item_price) \u3092\u6307\u5b9a\u3057\u3001\u4e0b\u56f3\u306e\u30d0\u30fc\u30c1\u30e3\u30fc\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u5229\u7528\u30ce\u30fc\u30c9 Nodes / Manipulation / RowRow / Transform / GroupBy Views / JavaScript / Bar Chart \u5730\u57df\u5225 \u58f2\u4e0a\u91d1\u984d \u5168\u671f\u9593\u5730\u57df\u5225\u306e\u58f2\u4e0a\u91d1\u984d\u3092\u96c6\u8a08\u3057\u305f\u7d50\u679c\u306e\u53ef\u8996\u5316\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u306e\u53ef\u8996\u5316\u306b\u3088\u308a\u5730\u57df\u5225\u306e\u58f2\u4e0a\u306e\u76f8\u9055\u3092\u628a\u63e1\u3059\u308b\u3053\u304c\u3067\u304d\u307e\u3059\u3002 \u30c7\u30fc\u30bf\u51e6\u7406 / \u96c6\u8a08 Group column(s)\u306b \u5730\u57df \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Fig. \u5730\u57df\u5225 \u58f2\u4e0a\u91d1\u984d \u96c6\u8a08 \u8a2d\u5b9a (1) \u96c6\u8a08\u30ab\u30e9\u30e0\u306b item_price (\u5546\u54c1\u4fa1\u683c) \u3001\u96c6\u8a08\u65b9\u6cd5\u306b Sum (\u7dcf\u548c) \u3092\u6307\u5b9a\u3057\u307e\u3059 Fig. \u5730\u57df\u5225 \u58f2\u4e0a\u91d1\u984d \u96c6\u8a08 \u8a2d\u5b9a (2) \u53ef\u8996\u5316 / \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 Category Column (X\u8ef8) \u306b \u5730\u57df \u3001Y\u8ef8\u306b Sum(item_price) \u3092\u6307\u5b9a\u3057\u3001\u4e0b\u56f3\u306e\u30d0\u30fc\u30c1\u30e3\u30fc\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u5229\u7528\u30ce\u30fc\u30c9 Nodes / Manipulation / RowRow / Transform Views / JavaScript / Bar Chart \u307e\u3068\u3081 \u30c7\u30fc\u30bf\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3001\u7bb1\u3072\u3052\u56f3\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001 \u30c7\u30fc\u30bf\u306e\u5206\u5e03\u3092\u628a\u63e1 \u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u307e\u305f\u3001 \u8cfc\u5165\u5e74\u6708\u5225\u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u306e\u96c6\u8a08\u7d50\u679c \u3092\u5404\u7a2e\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u305f\u3053\u3068\u3067\u3001\u8cfc\u5165\u5e74\u6708\u5225\u306e\u58f2\u4e0a\u7dcf\u548c\u306e\u6bd4\u8f03\u3001\u305d\u306e\u4ed6 \u96c6\u8a08\u51e6\u7406\u5f8c\u306e\u53ef\u8996\u5316\u306b\u3088\u308a\u3001 \u5168\u671f\u9593\u306e\u5730\u57df\u5225\u58f2\u4e0a\u91d1\u984d, \u5168\u671f\u9593\u306e\u5546\u54c1\u5225\u58f2\u4e0a\u91d1\u984d \u3001\u3092\u76f4\u611f\u7684\u306b\u628a\u63e1\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u63b2\u8f09\u3057\u305f\u5185\u5bb9\u306f\u4e00\u90e8\u3067\u3042\u308a\u3001 \u8cfc\u5165\u5e74\u6708\u5225\u5730\u57df\u5225 \u3001 \u9867\u5ba2\u5225 \u306a\u3069\u306e\u53ef\u8996\u5316\u3092\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4eca\u56de\u306f\u3001 KNIME \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u8a73\u7d30\u306a\u30c7\u30fc\u30bf\u5206\u6790\u3092\u9032\u3081\u308b\u524d\u306e \u30c7\u30fc\u30bf\u63a2\u7d22\u3001\u53ef\u8996\u5316\u3092\u77ed\u6642\u9593\u3067\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002","title":"KNIME \u5165\u9580\u7de8 / \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790"},{"location":"data-science/knime/knime-2/#knime","text":"\u4f5c\u6210\u65e5: 2020-04-07 \u66f4\u65b0\u65e5: 2020-04-12 \u524d\u56de - KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 (1) \u3067\u3001 (1)\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30fc\u30bf\u306b\u5b58\u5728\u3057\u3066\u3044\u305f\u6b20\u640d\u5024\u3092\u4fee\u6b63\u3001(2)\u5404\u30ab\u30e9\u30e0\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u7d71\u4e00 \u3001\u3059\u308b\u3053\u3068\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u305d\u308c\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u5206\u6790\u53ef\u80fd\u306a\u30c7\u30fc\u30bf\u3092\u4f5c\u308a\u3001CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u307e\u3057\u305f\u3002 \u4eca\u56de\u306f\u3001\u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 ( Exploratory Data Analysis: EDA ) - \u30c7\u30fc\u30bf\u306e\u96c6\u8a08\u3001\u8981\u7d04\u3001\u53ef\u8996\u5316\u3092\u884c\u3044\u3001\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3057\u307e\u3059\u3002 \u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u524d\u306b \u3069\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306a\u306e\u304b\u78ba\u8a8d\u3059\u308b\u6bb5\u968e\u304c\u5fc5\u8981\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7406\u89e3\u3092\u6df1\u3081\u308b\u3053\u3068\u3067\u3001\u826f\u3044\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u306b\u7e4b\u304c\u308b\u53ef\u80fd\u6027\u3092\u9ad8\u3081\u308b\u304b\u3089\u3067\u3059\u3002 \u30c7\u30fc\u30bf\u3092\u4fef\u77b0\u3057\u3001\u6b20\u640d\u5024\u3001\u7570\u5e38\u5024(\u5916\u308c\u5024)\u3001\u30c7\u30fc\u30bf\u306e\u5206\u5e03\u306a\u3069\u30c7\u30fc\u30bf\u5168\u4f53\u3042\u308b\u3044\u306f\u30c7\u30fc\u30bf\u9593\u306e\u95a2\u4fc2\u6027\u3084\u305d\u306e\u3070\u3089\u3064\u304d\u3092\u898b\u308b\u70ba\u306b\u3001\u3053\u306e\u6bb5\u968e\u3067\u306f\u3001\u7c21\u5358\u306a\u96c6\u8a08\u3068\u30c7\u30fc\u30bf\u3092\u5404\u7a2e\u30c1\u30e3\u30fc\u30c8\u4f5c\u6210\u3057\u307e\u3059\u3002","title":"KNIME \u5165\u9580\u7de8 / \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790"},{"location":"data-science/knime/knime-2/#_1","text":"\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u5f8c\u58f2\u4e0a\u30c7\u30fc\u30bf (CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb) \u8aad\u307f\u8fbc\u307f \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u4f5c\u6210 \u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u53ef\u8996\u5316 \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u4e0b\u306e\u56f3\u306b\u793a\u3057\u305f\u901a\u308a\u3067\u3059\u3002 \u524d\u56de - KNIME \u5165\u9580\u7de8 / \u524d\u51e6\u7406 (1) \u3067\u30aa\u30ea\u30b8\u30ca\u30eb\u30c7\u30fc\u30bf\u3092\u30c7\u30fc\u30bf\u5206\u6790\u304c\u884c\u3048\u308b\u30c7\u30fc\u30bf\u306b\u4fee\u6b63\u3057\u3001\u305d\u308c\u3092 CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3044\u53ef\u8996\u5316\u3092\u884c\u3044\u307e\u3059\u3002 Fig. \u5168\u4f53\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","title":"\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5168\u4f53"},{"location":"data-science/knime/knime-2/#_2","text":"\u524d\u56de\u4f5c\u6210\u3057\u305f \u300c\u30c7\u30fc\u30bf \u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u5f8c \u58f2\u4e0a\u30c7\u30fc\u30bf\u300d \u3092\u6307\u5b9a\u3057\u3001KNIME\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u304c\u6b63\u3057\u304f\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\u304b File Table \u3092\u5b9f\u884c\u3057\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. CSV Reader \u8a2d\u5b9a Fig. \u30ec\u30b3\u30fc\u30c9\u4e00\u89a7 (File Table) \u5229\u7528\u30ce\u30fc\u30c9: IO / Read / CSV Reader","title":"\u30c7\u30fc\u30bf \u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u5f8c \u58f2\u4e0a\u30c7\u30fc\u30bf \u8aad\u307f\u8fbc\u307f"},{"location":"data-science/knime/knime-2/#_3","text":"\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3057\u307e\u3059\u3002 purchase_year_month (\u8cfc\u5165\u5e74\u6708) \u3092\u30d3\u30cb\u30f3\u30b0\u30ab\u30e9\u30e0\u306b\u6307\u5b9a\u3057\u3001 item_price\u3000(\u5546\u54c1\u4fa1\u683c) \u3092\u96c6\u8a08\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002 Fig. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u30ce\u30fc\u30c9 \u8a2d\u5b9a View: Interactive Histogram View \u3092\u5b9f\u884c\u3057\u3001\u51e6\u7406\u5f8c\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u30c1\u30e3\u30fc\u30c8\u3092\u8868\u793a\u3057\u307e\u3059\u3002 Fig. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u30ce\u30fc\u30c9 \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc \u4e0b\u306e\u56f3\u3067\u306f\u3001\u8cfc\u5165\u5e74\u6708\u5225\u306e item_price (\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u306e\u30ec\u30b3\u30fc\u30c9\u306e\u5408\u8a08\u3092\u96c6\u8a08\u3057\u305f\u30c1\u30e3\u30fc\u30c8\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002 1. \u96c6\u8a08\u65b9\u6cd5\u306e\u5909\u66f4 \u3068 2. \u30d3\u30cb\u30f3\u30b0\u30ab\u30e9\u30e0\u306e\u5909\u66f4 \u304c\u53ef\u80fd\u3067\u3059\u3002 \u96c6\u8a08\u65b9\u6cd5: Average (\u5e73\u5747) Sum (\u5408\u8a08) Row Count (\u884c\u6570) Row Count w/o missin values (\u6b20\u640d\u5024\u3092\u9664\u304f\u884c\u6570) \u30d3\u30cb\u30f3\u30b0\u30ab\u30e9\u30e0: item_name (\u5546\u54c1\u540d) purchase_year_and_month (\u8cfc\u5165\u5e74\u6708) item_price (\u5546\u54c1\u4fa1\u683c) \u5730\u57df Fig. \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0 Interactive Histogram (\u5bfe\u8a71\u578b\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0) \u30ce\u30fc\u30c9 \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5bb9\u6613\u306b\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002 \u5229\u7528\u30ce\u30fc\u30c9: Views / Local (Swing) / Interactive Histogram (Local)","title":"\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0 \u30c1\u30e3\u30fc\u30c8 \u4f5c\u6210"},{"location":"data-science/knime/knime-2/#_4","text":"","title":"\u53ef\u8996\u5316"},{"location":"data-science/knime/knime-2/#_5","text":"\u51e6\u7406\u6982\u8981: \u30c7\u30fc\u30bf\u51e6\u7406: \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 \u6b20\u640d\u5024\u51e6\u7406 \u53ef\u8996\u5316: Data Explorer - \u30c7\u30fc\u30bf\u63a2\u7d22 Box Plot - \u30dc\u30c3\u30af\u30b9 \u30d7\u30ed\u30c3\u30c8 (\u7bb1\u3072\u3052\u56f3) Line Plot - \u30e9\u30a4\u30f3 \u30d7\u30ed\u30c3\u30c8 (\u6298\u308c\u7dda) Stacked Area Chart - \u7a4d\u91cd\u306d\u30a8\u30ea\u30a2 \u30c1\u30e3\u30fc\u30c8 Bar Plot - \u30d0\u30fc \u30c1\u30e3\u30fc\u30c8 Fig. \u53ef\u8996\u5316/\u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u30ef\u30fc\u30af\u30d5\u30ed\u30fc","title":"\u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d"},{"location":"data-science/knime/knime-2/#_6","text":"\u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d\u30c6\u30fc\u30d6\u30eb \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Group column(s) \u306b purchase_year_and_month (\u8cfc\u5165\u5e74\u6708) \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3059\u308b Pivoit column(s) \u306b item_name (\u5546\u54c1\u540d) \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3059\u308b \u96c6\u8a08\u5bfe\u8c61\u306b item_price (\u5546\u54c1\u4fa1\u683c) \u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3057\u3001\u96c6\u8a08\u65b9\u6cd5\u3092 Sum (\u5408\u8a08) \u3068\u3059\u308b Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30ce\u30fc\u30c9 \u8a2d\u5b9a (1) Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30ce\u30fc\u30c9 \u8a2d\u5b9a (2) Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30ce\u30fc\u30c9 \u8a2d\u5b9a (3) \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc (\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc) \u5185\u306e Pivot Table \u3092\u5b9f\u884c\u3057\u3001\u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d\u30c6\u30fc\u30d6\u30eb\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u51e6\u7406\u7d50\u679c\u3068\u3001 \u5546\u54c1Z \u306b\u6b20\u640d\u5024\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb \u30ce\u30fc\u30c9 \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc Fig. \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb","title":"\u30c7\u30fc\u30bf\u51e6\u7406/ \u30d4\u30dc\u30c3\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210"},{"location":"data-science/knime/knime-2/#_7","text":"\u8cfc\u5165\u5e74\u6708\u5225 \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d\u30c6\u30fc\u30d6\u30eb\u306e \u5546\u54c1Z \u306e\u6b20\u640d\u5024\u306b 0 \u3092\u8a2d\u5b9a\u3057\u3001\u53ef\u8996\u5316\u51e6\u7406\u7528\u306e\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u51e6\u7406\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d\u65b9\u6cd5\u306f\u3001\u524d\u306e\u30b9\u30c6\u30c3\u30d7\u3068\u540c\u69d8\u306b \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc (\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc) \u5185\u306e Output Table \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u5143\u306b\u3057\u3066\u5404\u53ef\u8996\u5316\u30ce\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \u8a2d\u5b9a\u753b\u9762 Number (double): Fix Value, Value: 0.0 \u3092\u6307\u5b9a\u3059\u308b Fig. \u6b20\u640d\u5024\u51e6\u7406\u30ce\u30fc\u30c9 \u8a2d\u5b9a","title":"\u30c7\u30fc\u30bf\u51e6\u7406/ \u6b20\u640d\u5024\u51e6\u7406"},{"location":"data-science/knime/knime-2/#_8","text":"\u5546\u54c1\u5225\u306e\u7d71\u8a08\u60c5\u5831\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u7d71\u8a08\u60c5\u5831\u306b\u6b21\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059 - Minimum (\u6700\u5c0f\u5024) , Maximum (\u6700\u5927\u5024) , Mean (\u5e73\u5747) , Median (\u4e2d\u592e\u5024) , Standard Deviation (\u6a19\u6e96\u504f\u5dee) , Variance (\u5206\u6563) , Skewness (\u6b6a\u5ea6) , Kurtosis (\u5c16\u5ea6) , Overall Sum (\u7dcf\u548c) \u5c1a\u3001 Median (\u4e2d\u592e\u5024) \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8a08\u7b97\u5bfe\u8c61\u5916\u306b\u306a\u3063\u3066\u3044\u308b\u70ba\u3001\u5fc5\u8981\u306a\u6642\u306f\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7d71\u8a08\u60c5\u5831\u306e\u5217\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u3001\u964d\u9806/\u6607\u9806\u30bd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22\u30ce\u30fc\u30c9 \u51e6\u7406\u7d50\u679c (1) \u5404\u884c\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b [+]\u30dc\u30bf\u30f3 \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u3001\u9078\u629e\u884c\u306e\u4e0b\u90e8\u306b\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22\u30ce\u30fc\u30c9 \u51e6\u7406\u7d50\u679c (2)","title":"\u53ef\u8996\u5316 / \u30c7\u30fc\u30bf\u63a2\u7d22"},{"location":"data-science/knime/knime-2/#_9","text":"\u5168\u5546\u54c1\u3092\u5bfe\u8c61\u3068\u3059\u308b \u30dc\u30c3\u30af\u30b9 \u30d7\u30ed\u30c3\u30c8 (\u7bb1\u3072\u3052\u56f3) \u3092\u4f5c\u6210\u3057\u3001\u30c7\u30fc\u30bf\u306e\u5206\u5e03\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u63a2\u7d22\u30ce\u30fc\u30c9\u3088\u308a\u3082\u76f4\u611f\u7684\u306b\u30c7\u30fc\u30bf\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Fig. \u30dc\u30c3\u30af\u30b9\u30d7\u30ed\u30c3\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u30dc\u30c3\u30af\u30b9\u30d7\u30ed\u30c3\u30c8 \u53c2\u8003: \u7bb1\u3072\u3052\u56f3","title":"\u53ef\u8996\u5316 / \u30dc\u30c3\u30af\u30b9 \u30d7\u30ed\u30c3\u30c8"},{"location":"data-science/knime/knime-2/#_10","text":"X\u8ef8\u306b\u8cfc\u5165\u5e74\u6708\u5225\u3092, Y\u8ef8\u306b\u5546\u54c1\u4fa1\u683c\u306e\u7dcf\u548c\u3092\u6307\u5b9a\u3057\u3001\u5168\u5546\u54c1\u3092\u5bfe\u8c61\u306b\u3057\u305f\u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Fig. \u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a (1) Fig. \u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a (2) Fig. \u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8 \u5546\u54c1\u6570\u304c\u591a\u3044\u70ba\u3001\u76f4\u611f\u7684\u306b\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8\u3068\u30d0\u30fc\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8\u3068\u306e\u9055\u3044\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002","title":"\u53ef\u8996\u5316 / \u30e9\u30a4\u30f3 \u30d7\u30ed\u30c3\u30c8"},{"location":"data-science/knime/knime-2/#_11","text":"X\u8ef8\u306b\u8cfc\u5165\u5e74\u6708\u5225\u3092, Y\u8ef8\u306b\u5546\u54c1\u4fa1\u683c\u306e\u7dcf\u548c\u3092\u6307\u5b9a\u3057\u3001\u5168\u5546\u54c1\u3092\u5bfe\u8c61\u306b\u3057\u305f\u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8\u3068\u6bd4\u8f03\u3057\u3066\u3001\u8cfc\u5165\u5e74\u6708\u5225\u306e\u58f2\u4e0a\u7dcf\u984d\u3001\u5546\u54c1\u5225\u304c\u3069\u308c\u304f\u3089\u3044\u58f2\u4e0a\u5168\u4f53\u306b\u5bfe\u3057\u3066\u306b\u5360\u3081\u3066\u3044\u308b\u304b\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Fig. \u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8","title":"\u53ef\u8996\u5316 / \u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8"},{"location":"data-science/knime/knime-2/#_12","text":"X\u8ef8\u306b\u8cfc\u5165\u5e74\u6708\u5225\u3092, Y\u8ef8\u306b\u5546\u54c1\u4fa1\u683c\u306e\u7dcf\u548c\u3092\u6307\u5b9a\u3057\u3001\u5168\u5546\u54c1\u3092\u5bfe\u8c61\u306b\u3057\u305f\u7a4d\u91cd\u306d\u30d0\u30fc\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u7a4d\u91cd\u306d\u30a8\u30ea\u30a2\u30c1\u30e3\u30fc\u30c8\u3068\u540c\u69d8\u306b\u3001\u30e9\u30a4\u30f3\u30d7\u30ed\u30c3\u30c8\u3068\u6bd4\u8f03\u3057\u3066\u3001\u8cfc\u5165\u5e74\u6708\u5225\u306e\u58f2\u4e0a\u7dcf\u984d\u3001\u5546\u54c1\u5225\u304c\u3069\u308c\u304f\u3089\u3044\u58f2\u4e0a\u5168\u4f53\u306b\u5bfe\u3057\u3066\u306b\u5360\u3081\u3066\u3044\u308b\u304b\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8","title":"\u53ef\u8996\u5316 / \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8"},{"location":"data-science/knime/knime-2/#_13","text":"Manipulation / Row / Transform / Pivoting Manipulation / Column / Transform / Missing Value Nodes / KNIME Labs / JavaScript Views (Labs) / Data Explorer Views / JavaScript / Box Plot Views / JavaScript / Line Plot Views / JavaScript / Stacked Area Chart Views / JavaScript / Bar Chart","title":"\u5229\u7528\u30ce\u30fc\u30c9"},{"location":"data-science/knime/knime-2/#_14","text":"\u5168\u671f\u9593\u5546\u54c1\u5225\u306e\u58f2\u4e0a\u91d1\u984d\u3092\u96c6\u8a08\u3057\u305f\u7d50\u679c\u306e\u53ef\u8996\u5316\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u306e\u53ef\u8996\u5316\u306b\u3088\u308a\u5546\u54c1\u5225\u306e\u58f2\u4e0a\u306e\u76f8\u9055\u3092\u628a\u63e1\u3059\u308b\u3053\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d"},{"location":"data-science/knime/knime-2/#_15","text":"Group column(s)\u306b item_name (\u5546\u54c1\u540d) \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Fig. \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u96c6\u8a08 \u8a2d\u5b9a (1) \u96c6\u8a08\u30ab\u30e9\u30e0\u306b item_price (\u5546\u54c1\u4fa1\u683c) \u3001\u96c6\u8a08\u65b9\u6cd5\u306b Sum (\u7dcf\u548c) \u3092\u6307\u5b9a\u3057\u307e\u3059 Fig. \u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u96c6\u8a08 \u8a2d\u5b9a (2)","title":"\u30c7\u30fc\u30bf\u51e6\u7406 / \u96c6\u8a08"},{"location":"data-science/knime/knime-2/#_16","text":"Category Column (X\u8ef8) \u306b item_name (\u5546\u54c1\u540d) \u3001Y\u8ef8\u306b Sum(item_price) \u3092\u6307\u5b9a\u3057\u3001\u4e0b\u56f3\u306e\u30d0\u30fc\u30c1\u30e3\u30fc\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8","title":"\u53ef\u8996\u5316 / \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8"},{"location":"data-science/knime/knime-2/#_17","text":"Nodes / Manipulation / RowRow / Transform / GroupBy Views / JavaScript / Bar Chart","title":"\u5229\u7528\u30ce\u30fc\u30c9"},{"location":"data-science/knime/knime-2/#_18","text":"\u5168\u671f\u9593\u5730\u57df\u5225\u306e\u58f2\u4e0a\u91d1\u984d\u3092\u96c6\u8a08\u3057\u305f\u7d50\u679c\u306e\u53ef\u8996\u5316\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u306e\u53ef\u8996\u5316\u306b\u3088\u308a\u5730\u57df\u5225\u306e\u58f2\u4e0a\u306e\u76f8\u9055\u3092\u628a\u63e1\u3059\u308b\u3053\u304c\u3067\u304d\u307e\u3059\u3002","title":"\u5730\u57df\u5225 \u58f2\u4e0a\u91d1\u984d"},{"location":"data-science/knime/knime-2/#_19","text":"Group column(s)\u306b \u5730\u57df \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 Fig. \u5730\u57df\u5225 \u58f2\u4e0a\u91d1\u984d \u96c6\u8a08 \u8a2d\u5b9a (1) \u96c6\u8a08\u30ab\u30e9\u30e0\u306b item_price (\u5546\u54c1\u4fa1\u683c) \u3001\u96c6\u8a08\u65b9\u6cd5\u306b Sum (\u7dcf\u548c) \u3092\u6307\u5b9a\u3057\u307e\u3059 Fig. \u5730\u57df\u5225 \u58f2\u4e0a\u91d1\u984d \u96c6\u8a08 \u8a2d\u5b9a (2)","title":"\u30c7\u30fc\u30bf\u51e6\u7406 / \u96c6\u8a08"},{"location":"data-science/knime/knime-2/#_20","text":"Category Column (X\u8ef8) \u306b \u5730\u57df \u3001Y\u8ef8\u306b Sum(item_price) \u3092\u6307\u5b9a\u3057\u3001\u4e0b\u56f3\u306e\u30d0\u30fc\u30c1\u30e3\u30fc\u30c8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8 \u30ce\u30fc\u30c9 \u8a2d\u5b9a Fig. \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8","title":"\u53ef\u8996\u5316 / \u30d0\u30fc\u30c1\u30e3\u30fc\u30c8"},{"location":"data-science/knime/knime-2/#_21","text":"Nodes / Manipulation / RowRow / Transform Views / JavaScript / Bar Chart","title":"\u5229\u7528\u30ce\u30fc\u30c9"},{"location":"data-science/knime/knime-2/#_22","text":"\u30c7\u30fc\u30bf\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3001\u7bb1\u3072\u3052\u56f3\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001 \u30c7\u30fc\u30bf\u306e\u5206\u5e03\u3092\u628a\u63e1 \u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u307e\u305f\u3001 \u8cfc\u5165\u5e74\u6708\u5225\u5546\u54c1\u5225 \u58f2\u4e0a\u91d1\u984d \u306e\u96c6\u8a08\u7d50\u679c \u3092\u5404\u7a2e\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u305f\u3053\u3068\u3067\u3001\u8cfc\u5165\u5e74\u6708\u5225\u306e\u58f2\u4e0a\u7dcf\u548c\u306e\u6bd4\u8f03\u3001\u305d\u306e\u4ed6 \u96c6\u8a08\u51e6\u7406\u5f8c\u306e\u53ef\u8996\u5316\u306b\u3088\u308a\u3001 \u5168\u671f\u9593\u306e\u5730\u57df\u5225\u58f2\u4e0a\u91d1\u984d, \u5168\u671f\u9593\u306e\u5546\u54c1\u5225\u58f2\u4e0a\u91d1\u984d \u3001\u3092\u76f4\u611f\u7684\u306b\u628a\u63e1\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u63b2\u8f09\u3057\u305f\u5185\u5bb9\u306f\u4e00\u90e8\u3067\u3042\u308a\u3001 \u8cfc\u5165\u5e74\u6708\u5225\u5730\u57df\u5225 \u3001 \u9867\u5ba2\u5225 \u306a\u3069\u306e\u53ef\u8996\u5316\u3092\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4eca\u56de\u306f\u3001 KNIME \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u8a73\u7d30\u306a\u30c7\u30fc\u30bf\u5206\u6790\u3092\u9032\u3081\u308b\u524d\u306e \u30c7\u30fc\u30bf\u63a2\u7d22\u3001\u53ef\u8996\u5316\u3092\u77ed\u6642\u9593\u3067\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002","title":"\u307e\u3068\u3081"},{"location":"data-science/knime/knime-3/","text":"KNIME \u5165\u9580\u7de8 / \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u4f5c\u6210\u65e5: 2020-04-17 \u66f4\u65b0\u65e5: 2020-04-26 \u4eca\u56de\u306f\u3001\u3059\u3067\u306b\u30c7\u30fc\u30bf\u6574\u5f62\u304c\u7d42\u308f\u3063\u3066\u3044\u308b\u5206\u6790\u7528\u30c7\u30fc\u30bf (\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b8\u30e0\u4f1a\u54e1\u306e\u5229\u7528\u5c65\u6b74) \u3092\u4f7f\u3044 \u4f1a\u54e1\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 (\u30af\u30e9\u30b9\u30bf\u30fc\u5206\u6790) \u3092\u884c\u3044\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u884c\u52d5\u306e\u50be\u5411\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3068\u306f\u3001\u7570\u306a\u308b\u6027\u8cea\u30fb\u7279\u5fb4\u3092\u3082\u3064\u3082\u306e\u304c\u6df7\u5728\u3059\u308b\u96c6\u5408\u304b\u3089\u4f3c\u305f\u6027\u8cea\u30fb\u7279\u5fb4\u3092\u6301\u3064\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u308b\u3053\u3068\u3067\u3059\u3002\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u89e3\u6790\u624b\u6cd5\u3068\u3057\u3066\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u3067\u3082\u983b\u7e41\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u624b\u6cd5\u3067\u3059\u3002 \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u624b\u6cd5\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u3001\u975e\u968e\u5c64\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u5c5e\u3059\u308b k-means \u3092\u4f7f\u3044\u307e\u3059\u3002 \u975e\u968e\u5c64\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u306f\u3001\u4e88\u3081\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u30bf\u30fc\u6570\u3092\u6c7a\u5b9a\u3057\u3001\u6c7a\u3081\u305f\u6570\u306e\u968e\u5c64\u3092\u6301\u305f\u306a\u3044\u30af\u30e9\u30b9\u30bf\u30fc (\u30b0\u30eb\u30fc\u30d7) \u306b\u30b5\u30f3\u30d7\u30eb\u3092\u5206\u5272\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u6570\u304c\u6975\u3081\u3066\u5927\u304d\u3044\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u5206\u6790\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002 \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5168\u4f53 \u6574\u5f62\u5f8c\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u306b\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u5b9f\u884c\u3057\u3001\u6700\u5f8c\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u7d50\u679c\u306e\u53ef\u8996\u5316\u3068\u96c6\u8a08\u3092\u884c\u3044\u307e\u3059\u3002 \u9867\u5ba2+\u5229\u7528\u5c65\u6b74\u30c7\u30fc\u30bf (CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb) \u8aad\u307f\u8fbc\u307f \u30c7\u30fc\u30bf\u63a2\u7d22 (\u78ba\u8a8d) \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u53ef\u8996\u5316 + \u96c6\u8a08 Fig. \u5168\u4f53\u30ef\u30fc\u30af\u30d5\u30ed\u30fc \u5206\u6790\u7528\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f \u9867\u5ba2\u30c7\u30fc\u30bf + \u5229\u7528\u5c65\u6b74 CSV\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f \u8aad\u8fbc\u307f\u5bfe\u8c61\u306eCSV\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u304c UTF-8 \u3067\u3042\u308b\u3053\u3068\u3092\u4e8b\u524d\u306b\u78ba\u8a8d\u3057\u305f\u5f8c\u3001KNIME\u306b \u9867\u5ba2\u30c7\u30fc\u30bf + \u5229\u7528\u5c65\u6b74 (CSV) \u3092\u8aad\u307f\u8fbc\u307f\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u4e3b\u306b \u5217\u30bf\u30a4\u30c8\u30eb\u884c\u306e\u5b58\u5728\u3001\u533a\u5207\u308a\u6587\u5b57 (delimiter) \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002KNIME\u306b\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u304c\u5b8c\u4e86\u3057\u305f\u5f8c\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u6b63\u3057\u304f\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306b\u3042\u308b \u9867\u5ba2\u30c7\u30fc\u30bf + \u5229\u7528\u5c65\u6b74 CSV\u30d5\u30a1\u30a4\u30eb \u3092\u6307\u5b9a\u3057\u3001 Has Row Header (\u884c\u898b\u51fa\u3057\u5b58\u5728) \u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3059 CSV\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u6210\u529f\u5f8c\u3001\u30c7\u30fc\u30bf\u30d7\u30ec\u30d3\u30e5\u30fc\u30a8\u30ea\u30a2\u306b\u30ec\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b Fig. CSV\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f \u8a2d\u5b9a Fig. CSV\u30d5\u30a1\u30a4\u30eb \u30c6\u30fc\u30d6\u30eb\u8868\u793a \u5229\u7528\u30ce\u30fc\u30c9: IO / Read / CSV Reader \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 / \u51e6\u7406 Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 / \u51e6\u7406 / \u30ef\u30fc\u30af\u30d5\u30ed\u30fc \u6e96\u5099 / \u30c7\u30fc\u30bf\u63a2\u7d22 \u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u304c \u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u304b\u628a\u63e1\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Data Explorer \u30ce\u30fc\u30c9\u3092\u4f7f\u3044\u7c21\u5358\u306a\u30c7\u30fc\u30bf\u5206\u6790\u3000- \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 (Exploratory Data Analysis: EDA) \u3092\u884c\u3044\u307e\u3059\u3002\u6b21\u306e\u60c5\u5831\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 1. \u6708\u306e\u5229\u7528\u56de\u6570\u306e\u5206\u5e03 \u5229\u7528\u8005\u306e\u6708\u306e\u5229\u7528\u56de\u6570\u306f\u30013\u56de\u304b\u30895\u56de\u304c\u591a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / mean (\u5229\u7528\u56de\u6570 \u5e73\u5747/\u6708) 2. \u4f1a\u54e1\u671f\u9593\u306e\u5206\u5e03 \u4f1a\u54e1\u671f\u9593\u306f\u30011\u5e74\u672a\u6e80\u306e\u5229\u7528\u8005\u304c\u591a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u4f9d\u3063\u3066\u3001\u4e00\u5e74\u4ee5\u4e0a\u306e\u4f1a\u54e1\u671f\u9593\u306e\u5229\u7528\u8005\u306f\u3001\u7d99\u7d9a\u7684\u306b\u5229\u7528\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / membership_period (\u4f1a\u54e1\u671f\u9593) 3. \u9000\u4f1a\u4f1a\u54e1\u6570 \u9000\u4f1a\u4f1a\u54e1\u6570\u306f\u3001\u7d99\u7d9a\u4f1a\u54e1\u6570\u306e\u7d04\u534a\u6570\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / membership is_deleted (\u9000\u4f1a) 4. \u6708\u984d\u91d1\u984d\u306e\u5206\u5e03 \u6708\u984d\u91d1\u984d\u306f\u4e09\u7a2e\u985e\u3042\u308a [6000\u5186, 7500\u5186, 10500\u5186] \u3001\u305d\u306e\u4e2d\u3067\u308210,500\u5186\u306e\u30b3\u30fc\u30b9\u306e\u4f1a\u54e1\u6570\u304c\u4ed6\u306e\u305d\u308c\u305e\u308c\u306e\u30b3\u30fc\u30b9\u306e\u4e8c\u500d\u8fd1\u304f\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / membership price (\u6708\u984d) 5. \u8cea\u7684\u30c7\u30fc\u30bf\u306e\u8981\u7d04 \u30c7\u30fc\u30bf\u306e\u8981\u7d04 (\u30b5\u30de\u30ea\u30fc) \u3092\u898b\u3066\u3044\u304f\u3068\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306e\u6982\u8981\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 end_date \u306e\u7d50\u679c\u306f\u3001\u9000\u4f1a\u3057\u305f\u4eba\u304c 2842\u4eba\u3044\u3066 \u30e6\u30cb\u30fc\u30af\u306a\u5024\u304c 12\u5b58\u5728\u3057\u307e\u3059\u3002\u300c2842\u4eba\u304c\u9000\u4f1a\u3057\u305f\u65e5\u304c12\u65e5\u3042\u308b\u300d\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u305d\u306e\u4e00\u65b9\u3001 start_date \u306e\u7d50\u679c\u306f\u3001\u300c\u5165\u4f1a\u65e5\u306f 215\u65e5\u3042\u308b\u300d\u305d\u306e\u65e5\u6570\u306f\u3001\u9000\u4f1a\u65e5\u3088\u308a\u3082\u591a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u305d\u306e\u4ed6\u3001\u30af\u30e9\u6570\u6570\u3001\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u3046\u6570\u7b49\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / Nominal \u5229\u7528\u30ce\u30fc\u30c9: Nodes / KNIME Labs / JavaScript Views (Labs) / Data Explorer \u6b63\u898f\u5316 \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u884c\u3046\u524d\u306b \u6570\u5024\u30c7\u30fc\u30bf\u306e\u30b9\u30b1\u30fc\u30eb\u3092 0\u304b\u30891\u306e\u7bc4\u56f2\u306b\u7dda\u5f62\u5909\u63db (Linear transformation) \u3057\u307e\u3059\u3002 \u6b63\u898f\u5316 \u8a2d\u5b9a\u753b\u9762\u3067\u3001\u6b63\u898f\u5316\u5bfe\u8c61\u306e\u30ab\u30e9\u30e0 - mean (\u5e73\u5747 \u5229\u7528\u56de\u6570/\u6708) , membership_pedriod (\u4f1a\u54e1\u671f\u9593) \u3092\u9078\u629e\u3057\u307e\u3059\u3002 Fig. Normalizaer \u6b63\u898f\u5316 / \u8a2d\u5b9a \u6b63\u898f\u5316\u51e6\u7406\u5f8c\u3001 mean (\u5e73\u5747 \u5229\u7528\u56de\u6570/\u6708) , membership_pedriod (\u4f1a\u54e1\u671f\u9593) \u306e\u5404\u5217\u306e\u5024\u304c \u300c0\u301c1 \u306e\u7bc4\u56f2\u300d\u306b\u5909\u63db\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. Normalizaer \u6b63\u898f\u5316 / \u6b63\u898f\u5316 \u5f8c\u30c6\u30fc\u30d6\u30eb \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Manipulation / Column / Transform / Normalizer \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b8\u30e0\u306e\u4f1a\u54e1\u306e\u884c\u52d5\u50be\u5411\u30924\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u5206\u3051\u307e\u3059\u3002\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u8a2d\u5b9a\u753b\u9762\u306e Number of clusters (\u30af\u30e9\u30b9\u30bf\u30fc\u6570) \u306e\u5024\u3092 \u300c4\u300d\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u5fc5\u8981\u306a\u30ab\u30e9\u30e0\u306b mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u3068 membership_period (\u4f1a\u54e1\u671f\u9593) \u306e\u4e8c\u3064\u3092\u9078\u629e\u3057\u307e\u3059\u3002 Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u8a2d\u5b9a \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u5f8c\u306e\u7d50\u679c\u3092 \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc (\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc) \u306e Clusters \u3092\u5b9f\u884c\u3057\u30014\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u5b58\u5728\u3068\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u5024\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u7d50\u679c \u30c6\u30fc\u30d6\u30eb \u5229\u7528\u30ce\u30fc\u30c9: Workflows / KNIME Hub / Users / taka / Public / k-means \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u8272\u6307\u5b9a \u53ef\u8996\u5316\u3057\u305f\u6642\u306b 4\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u5c5e\u3059\u308b\u5024\u3092\u5bb9\u6613\u306b\u5224\u5225\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u8272\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u51e6\u7406\u306b\u4f9d\u308a\u3001\u751f\u6210\u3055\u308c\u305f\u30c1\u30e3\u30fc\u30c8\u306b\u30d7\u30ed\u30c3\u30c8\u3055\u308c\u305f\u5024\u304c\u3069\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u5c5e\u3057\u3066\u3044\u308b\u304b\u308f\u304b\u308a\u307e\u3059\u3002 Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u8272\u6307\u5b9a \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Views / Property / Color Manager \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 / \u96c6\u8a08, \u53ef\u8996\u5316 Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 / \u96c6\u8a08, \u53ef\u8996\u5316 \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 \u6b63\u898f\u5316\u51e6\u7406\u3067 \u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u3068\u7570\u306a\u308b\u5024\u3092\u6301\u3064\u30ab\u30e9\u30e0 ( mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) , membership_period (\u4f1a\u54e1\u671f\u9593) ) \u304c\u5b58\u5728\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u6b63\u898f\u5316\u524d\u5f8c\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3001\u6b63\u898f\u5316\u524d\u306e\u5143\u306e\u30c6\u30fc\u30d6\u30eb\u3068\u6b63\u898f\u5316\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u7d50\u5408\u3057\u307e\u3059\u3002 join mode \u306b inner join (\u5185\u90e8\u7d50\u5408) \u3092\u9078\u629e\u3059\u308b \u7d50\u5408\u3059\u308b\u30ab\u30e9\u30e0\u306b left table \u3001 right table \u5171\u306b Row ID \u3092\u6307\u5b9a\u3059\u308b Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 / \u8a2d\u5b9a (1) right table \u306b\u306f\u3001\u6b21\u306e3\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3059\u308b (\u91cd\u8907\u3059\u308b\u30ab\u30e9\u30e0\u3092\u5bfe\u8c61\u5916\u306b\u3059\u308b) mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) membership_period (\u4f1a\u54e1\u671f\u9593) Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 / \u8a2d\u5b9a (2) \u96c6\u8a08 \u96c6\u8a08\u306e\u76ee\u7684\u306f\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u5225 \u4f1a\u54e1\u306e\u884c\u52d5\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u300c\u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08\u300d\u3068\u300c\u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08\u300d\u3092\u884c\u3044\u307e\u3059\u3002 \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08 \u30b0\u30eb\u30fc\u30d7\u5316\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b\u3001 Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3001 is_deleted (\u9014\u4e2d\u9000\u4f1a\u8005) \u3092\u6307\u5b9a\u3057\u3001 \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005 \u3092\u96c6\u8a08\u3059\u308b \u96c6\u8a08\u5bfe\u8c61\u30ab\u30e9\u30e0\u306f\u3001 customer_id (\u4f1a\u54e1ID) \u3068\u3057\u3001\u96c6\u8a08\u65b9\u6cd5\u306f Count \u3092\u6307\u5b9a\u3059\u308b \u96c6\u8a08\u7d50\u679c\u306e\u7740\u76ee\u70b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a cluster_0 \u9000\u4f1a\u8005\u6570 \u304c\u6700\u3082\u591a\u3044 cluster_1 \u7d99\u7d9a\u4f1a\u54e1\u6570 \u304c\u4e8c\u756a\u76ee\u306b\u591a\u3044 Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08 / \u8a2d\u5b9a (1) Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08 / \u8a2d\u5b9a (2) Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08 / \u7d50\u679c\u30c6\u30fc\u30d6\u30eb \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08 \u30b0\u30eb\u30fc\u30d7\u5316\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b\u3001 Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3001 routine_flg (\u5b9a\u671f\u5229\u7528\u30d5\u30e9\u30b0) \u3092\u6307\u5b9a\u3057\u3001 \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005 \u3092\u96c6\u8a08\u3059\u308b \u96c6\u8a08\u5bfe\u8c61\u30ab\u30e9\u30e0\u306f\u3001 customer_id (\u4f1a\u54e1ID) \u3068\u3057\u3001\u96c6\u8a08\u65b9\u6cd5\u306f Count \u3092\u6307\u5b9a\u3059\u308b \u96c6\u8a08\u7d50\u679c\u306e\u7740\u76ee\u70b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a cluster_2 \u5b9a\u671f\u5229\u7528\u8005\u6570 \u304c\u6700\u3082\u591a\u3044 cluster_1 \u5b9a\u671f\u5229\u7528\u8005\u6570 \u304c\u4e8c\u756a\u76ee\u306b\u591a\u3044 Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08 / \u8a2d\u5b9a (1) Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08 / \u8a2d\u5b9a (2) Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08 / \u7d50\u679c\u30c6\u30fc\u30d6\u30eb \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Manipulation / RowRow / Transform / GroupBy \u53ef\u8996\u5316 \u30c7\u30fc\u30bf\u306e\u4e2d\u306b\u3042\u308b\u30ab\u30c6\u30b4\u30ea\u30fc\u540c\u58eb\u306e\u985e\u4f3c\u6027\u3084\u95a2\u4fc2\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u3001\u30c1\u30e3\u30fc\u30c8\u3092\u3044\u304f\u3064\u304b\u4f5c\u6210\u3057\u30c7\u30fc\u30bf\u306e\u7406\u89e3\u3092\u6df1\u3081\u307e\u3059\u3002\u6b21\u306e\u4e09\u7a2e\u985e\u306e\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Parallel Coordinates Plot (\u5e73\u884c\u5ea7\u6a19) Scatter Plot / 2D/3D Scatterplot (\u6563\u5e03\u56f3) Conditional Box Plot (\u7bb1\u3072\u3052\u56f3) 1. Parallel Coordinates Plot Parallel Coordinates Plot (\u5e73\u884c\u5ea7\u6a19) \u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u5217\u3001 mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u3001 membership_period (\u4f1a\u54e1\u671f\u9593) \u3001 Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3092\u6307\u5b9a\u3059\u308b \u5404\u5217\u306e\u95a2\u4fc2 - mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) => membership_period (\u4f1a\u54e1\u671f\u9593) => Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3092\u78ba\u8a8d\u3059\u308b Fig. \u53ef\u8996\u5316 / Parallel Coordinates Plot / \u8a2d\u5b9a Fig. \u53ef\u8996\u5316 / Parallel Coordinates Plot / \u7d50\u679c \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Views / JavaScript / Parallel Coordinates Plot 2-1. Scatter Plot (1) X\u8ef8\u306b membership_period (\u4f1a\u54e1\u671f\u9593) \u3001Y\u8ef8\u306b mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u3092\u6307\u5b9a\u3059\u308b \u5404\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u8272\u5206\u3051\u3055\u308c\u30d7\u30ed\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u3001\u7dba\u9e97\u306b4\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3001\u5404\u30af\u30e9\u30b9\u30bf\u30fc\u306e membership_period (\u4f1a\u54e1\u671f\u9593) \u3068 mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u306e\u95a2\u4fc2\u3082\u78ba\u8a8d\u3059\u308b Fig. \u53ef\u8996\u5316 / Scatter Plot (1) / \u8a2d\u5b9a Fig. \u53ef\u8996\u5316 / Scatter Plot (1) / \u7d50\u679c \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Views / JavaScript / Scatter Plot 2-2. Scatter Plot (2) \u300c2-1. Scatter Plot (1)\u300d\u3068\u540c\u3058 Fig. \u53ef\u8996\u5316 / Scatter Plot (2) / \u8a2d\u5b9a Fig. \u53ef\u8996\u5316 / Scatter Plot (2) / \u7d50\u679c \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Community Nodes / Erlwood Nodes / Viewers 3. Conditional Box Plot Box Plot (\u7bb1\u3072\u3052\u56f3) \u3092\u4f5c\u6210\u3057\u3001\u5404\u30af\u30e9\u30b9\u30bf\u30fc\u306e membership_period (\u4f1a\u54e1\u671f\u9593) \u3068 mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u306e \u30c7\u30fc\u30bf\u306e\u3070\u3089\u3064\u304d \u3092\u78ba\u8a8d\u3059\u308b Category column \u306b Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3092\u6307\u5b9a\u3001\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b membership_period (\u4f1a\u54e1\u671f\u9593) \u3068 mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u3092\u6307\u5b9a\u3059\u308b Fig. \u53ef\u8996\u5316 / Conditional Box Plot / \u8a2d\u5b9a Fig. \u53ef\u8996\u5316 / Conditional Box Plot / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708 Fig. \u53ef\u8996\u5316 / Conditional Box Plot / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u4f1a\u54e1\u671f\u9593 \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Views / JavaScript / Conditional Box Plot \u5229\u7528\u30ce\u30fc\u30c9\u4e00\u89a7 IO / Read / CSV Reader Nodes / KNIME Labs / JavaScript Views (Labs) / Data Explorer Nodes / Manipulation / Column / Transform Workflows / KNIME Hub / Users / taka / Public / k-means Nodes / Views / Property / Color Manager Nodes / Manipulation / RowRow / Transform / GroupBy Nodes / Views / JavaScript / Parallel Coordinates Plot Nodes / Views / JavaScript / Scatter Plot Nodes / Community Nodes / Erlwood Nodes / Viewers Nodes / Views / JavaScript / Conditional Box Plot","title":"KNIME \u5165\u9580\u7de8 / \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0"},{"location":"data-science/knime/knime-3/#knime","text":"\u4f5c\u6210\u65e5: 2020-04-17 \u66f4\u65b0\u65e5: 2020-04-26 \u4eca\u56de\u306f\u3001\u3059\u3067\u306b\u30c7\u30fc\u30bf\u6574\u5f62\u304c\u7d42\u308f\u3063\u3066\u3044\u308b\u5206\u6790\u7528\u30c7\u30fc\u30bf (\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b8\u30e0\u4f1a\u54e1\u306e\u5229\u7528\u5c65\u6b74) \u3092\u4f7f\u3044 \u4f1a\u54e1\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 (\u30af\u30e9\u30b9\u30bf\u30fc\u5206\u6790) \u3092\u884c\u3044\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u884c\u52d5\u306e\u50be\u5411\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3068\u306f\u3001\u7570\u306a\u308b\u6027\u8cea\u30fb\u7279\u5fb4\u3092\u3082\u3064\u3082\u306e\u304c\u6df7\u5728\u3059\u308b\u96c6\u5408\u304b\u3089\u4f3c\u305f\u6027\u8cea\u30fb\u7279\u5fb4\u3092\u6301\u3064\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u308b\u3053\u3068\u3067\u3059\u3002\u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u89e3\u6790\u624b\u6cd5\u3068\u3057\u3066\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u3067\u3082\u983b\u7e41\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u624b\u6cd5\u3067\u3059\u3002 \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u624b\u6cd5\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u3001\u975e\u968e\u5c64\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u5c5e\u3059\u308b k-means \u3092\u4f7f\u3044\u307e\u3059\u3002 \u975e\u968e\u5c64\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u306f\u3001\u4e88\u3081\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u30bf\u30fc\u6570\u3092\u6c7a\u5b9a\u3057\u3001\u6c7a\u3081\u305f\u6570\u306e\u968e\u5c64\u3092\u6301\u305f\u306a\u3044\u30af\u30e9\u30b9\u30bf\u30fc (\u30b0\u30eb\u30fc\u30d7) \u306b\u30b5\u30f3\u30d7\u30eb\u3092\u5206\u5272\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u6570\u304c\u6975\u3081\u3066\u5927\u304d\u3044\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u5206\u6790\u306b\u9069\u3057\u3066\u3044\u307e\u3059\u3002","title":"KNIME \u5165\u9580\u7de8 / \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0"},{"location":"data-science/knime/knime-3/#_1","text":"\u6574\u5f62\u5f8c\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u306b\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u5b9f\u884c\u3057\u3001\u6700\u5f8c\u306b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u7d50\u679c\u306e\u53ef\u8996\u5316\u3068\u96c6\u8a08\u3092\u884c\u3044\u307e\u3059\u3002 \u9867\u5ba2+\u5229\u7528\u5c65\u6b74\u30c7\u30fc\u30bf (CSV\u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb) \u8aad\u307f\u8fbc\u307f \u30c7\u30fc\u30bf\u63a2\u7d22 (\u78ba\u8a8d) \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u53ef\u8996\u5316 + \u96c6\u8a08 Fig. \u5168\u4f53\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","title":"\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u5168\u4f53"},{"location":"data-science/knime/knime-3/#_2","text":"","title":"\u5206\u6790\u7528\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f"},{"location":"data-science/knime/knime-3/#csv","text":"\u8aad\u8fbc\u307f\u5bfe\u8c61\u306eCSV\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u304c UTF-8 \u3067\u3042\u308b\u3053\u3068\u3092\u4e8b\u524d\u306b\u78ba\u8a8d\u3057\u305f\u5f8c\u3001KNIME\u306b \u9867\u5ba2\u30c7\u30fc\u30bf + \u5229\u7528\u5c65\u6b74 (CSV) \u3092\u8aad\u307f\u8fbc\u307f\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\u4e3b\u306b \u5217\u30bf\u30a4\u30c8\u30eb\u884c\u306e\u5b58\u5728\u3001\u533a\u5207\u308a\u6587\u5b57 (delimiter) \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002KNIME\u306b\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u304c\u5b8c\u4e86\u3057\u305f\u5f8c\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u6b63\u3057\u304f\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306b\u3042\u308b \u9867\u5ba2\u30c7\u30fc\u30bf + \u5229\u7528\u5c65\u6b74 CSV\u30d5\u30a1\u30a4\u30eb \u3092\u6307\u5b9a\u3057\u3001 Has Row Header (\u884c\u898b\u51fa\u3057\u5b58\u5728) \u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3059 CSV\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u6210\u529f\u5f8c\u3001\u30c7\u30fc\u30bf\u30d7\u30ec\u30d3\u30e5\u30fc\u30a8\u30ea\u30a2\u306b\u30ec\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b Fig. CSV\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f \u8a2d\u5b9a Fig. CSV\u30d5\u30a1\u30a4\u30eb \u30c6\u30fc\u30d6\u30eb\u8868\u793a \u5229\u7528\u30ce\u30fc\u30c9: IO / Read / CSV Reader","title":"\u9867\u5ba2\u30c7\u30fc\u30bf + \u5229\u7528\u5c65\u6b74 CSV\u30d5\u30a1\u30a4\u30eb \u8aad\u8fbc\u307f"},{"location":"data-science/knime/knime-3/#_3","text":"Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 / \u51e6\u7406 / \u30ef\u30fc\u30af\u30d5\u30ed\u30fc","title":"\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 / \u51e6\u7406"},{"location":"data-science/knime/knime-3/#_4","text":"\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u304c \u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u304b\u628a\u63e1\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Data Explorer \u30ce\u30fc\u30c9\u3092\u4f7f\u3044\u7c21\u5358\u306a\u30c7\u30fc\u30bf\u5206\u6790\u3000- \u63a2\u7d22\u7684\u30c7\u30fc\u30bf\u5206\u6790 (Exploratory Data Analysis: EDA) \u3092\u884c\u3044\u307e\u3059\u3002\u6b21\u306e\u60c5\u5831\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002","title":"\u6e96\u5099 / \u30c7\u30fc\u30bf\u63a2\u7d22"},{"location":"data-science/knime/knime-3/#1","text":"\u5229\u7528\u8005\u306e\u6708\u306e\u5229\u7528\u56de\u6570\u306f\u30013\u56de\u304b\u30895\u56de\u304c\u591a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / mean (\u5229\u7528\u56de\u6570 \u5e73\u5747/\u6708)","title":"1. \u6708\u306e\u5229\u7528\u56de\u6570\u306e\u5206\u5e03"},{"location":"data-science/knime/knime-3/#2","text":"\u4f1a\u54e1\u671f\u9593\u306f\u30011\u5e74\u672a\u6e80\u306e\u5229\u7528\u8005\u304c\u591a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u4f9d\u3063\u3066\u3001\u4e00\u5e74\u4ee5\u4e0a\u306e\u4f1a\u54e1\u671f\u9593\u306e\u5229\u7528\u8005\u306f\u3001\u7d99\u7d9a\u7684\u306b\u5229\u7528\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / membership_period (\u4f1a\u54e1\u671f\u9593)","title":"2. \u4f1a\u54e1\u671f\u9593\u306e\u5206\u5e03"},{"location":"data-science/knime/knime-3/#3","text":"\u9000\u4f1a\u4f1a\u54e1\u6570\u306f\u3001\u7d99\u7d9a\u4f1a\u54e1\u6570\u306e\u7d04\u534a\u6570\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / membership is_deleted (\u9000\u4f1a)","title":"3. \u9000\u4f1a\u4f1a\u54e1\u6570"},{"location":"data-science/knime/knime-3/#4","text":"\u6708\u984d\u91d1\u984d\u306f\u4e09\u7a2e\u985e\u3042\u308a [6000\u5186, 7500\u5186, 10500\u5186] \u3001\u305d\u306e\u4e2d\u3067\u308210,500\u5186\u306e\u30b3\u30fc\u30b9\u306e\u4f1a\u54e1\u6570\u304c\u4ed6\u306e\u305d\u308c\u305e\u308c\u306e\u30b3\u30fc\u30b9\u306e\u4e8c\u500d\u8fd1\u304f\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / membership price (\u6708\u984d)","title":"4. \u6708\u984d\u91d1\u984d\u306e\u5206\u5e03"},{"location":"data-science/knime/knime-3/#5","text":"\u30c7\u30fc\u30bf\u306e\u8981\u7d04 (\u30b5\u30de\u30ea\u30fc) \u3092\u898b\u3066\u3044\u304f\u3068\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306e\u6982\u8981\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 end_date \u306e\u7d50\u679c\u306f\u3001\u9000\u4f1a\u3057\u305f\u4eba\u304c 2842\u4eba\u3044\u3066 \u30e6\u30cb\u30fc\u30af\u306a\u5024\u304c 12\u5b58\u5728\u3057\u307e\u3059\u3002\u300c2842\u4eba\u304c\u9000\u4f1a\u3057\u305f\u65e5\u304c12\u65e5\u3042\u308b\u300d\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u305d\u306e\u4e00\u65b9\u3001 start_date \u306e\u7d50\u679c\u306f\u3001\u300c\u5165\u4f1a\u65e5\u306f 215\u65e5\u3042\u308b\u300d\u305d\u306e\u65e5\u6570\u306f\u3001\u9000\u4f1a\u65e5\u3088\u308a\u3082\u591a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u305d\u306e\u4ed6\u3001\u30af\u30e9\u6570\u6570\u3001\u30ad\u30e3\u30f3\u30da\u30fc\u30f3\u3046\u6570\u7b49\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Fig. \u30c7\u30fc\u30bf\u63a2\u7d22 / Nominal \u5229\u7528\u30ce\u30fc\u30c9: Nodes / KNIME Labs / JavaScript Views (Labs) / Data Explorer","title":"5. \u8cea\u7684\u30c7\u30fc\u30bf\u306e\u8981\u7d04"},{"location":"data-science/knime/knime-3/#_5","text":"\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u884c\u3046\u524d\u306b \u6570\u5024\u30c7\u30fc\u30bf\u306e\u30b9\u30b1\u30fc\u30eb\u3092 0\u304b\u30891\u306e\u7bc4\u56f2\u306b\u7dda\u5f62\u5909\u63db (Linear transformation) \u3057\u307e\u3059\u3002 \u6b63\u898f\u5316 \u8a2d\u5b9a\u753b\u9762\u3067\u3001\u6b63\u898f\u5316\u5bfe\u8c61\u306e\u30ab\u30e9\u30e0 - mean (\u5e73\u5747 \u5229\u7528\u56de\u6570/\u6708) , membership_pedriod (\u4f1a\u54e1\u671f\u9593) \u3092\u9078\u629e\u3057\u307e\u3059\u3002 Fig. Normalizaer \u6b63\u898f\u5316 / \u8a2d\u5b9a \u6b63\u898f\u5316\u51e6\u7406\u5f8c\u3001 mean (\u5e73\u5747 \u5229\u7528\u56de\u6570/\u6708) , membership_pedriod (\u4f1a\u54e1\u671f\u9593) \u306e\u5404\u5217\u306e\u5024\u304c \u300c0\u301c1 \u306e\u7bc4\u56f2\u300d\u306b\u5909\u63db\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. Normalizaer \u6b63\u898f\u5316 / \u6b63\u898f\u5316 \u5f8c\u30c6\u30fc\u30d6\u30eb \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Manipulation / Column / Transform / Normalizer","title":"\u6b63\u898f\u5316"},{"location":"data-science/knime/knime-3/#_6","text":"\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b8\u30e0\u306e\u4f1a\u54e1\u306e\u884c\u52d5\u50be\u5411\u30924\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u5206\u3051\u307e\u3059\u3002\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u8a2d\u5b9a\u753b\u9762\u306e Number of clusters (\u30af\u30e9\u30b9\u30bf\u30fc\u6570) \u306e\u5024\u3092 \u300c4\u300d\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u5fc5\u8981\u306a\u30ab\u30e9\u30e0\u306b mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u3068 membership_period (\u4f1a\u54e1\u671f\u9593) \u306e\u4e8c\u3064\u3092\u9078\u629e\u3057\u307e\u3059\u3002 Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u8a2d\u5b9a \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u5f8c\u306e\u7d50\u679c\u3092 \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc (\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30e1\u30cb\u30e5\u30fc) \u306e Clusters \u3092\u5b9f\u884c\u3057\u30014\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u5b58\u5728\u3068\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u5024\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u7d50\u679c \u30c6\u30fc\u30d6\u30eb \u5229\u7528\u30ce\u30fc\u30c9: Workflows / KNIME Hub / Users / taka / Public / k-means","title":"\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0"},{"location":"data-science/knime/knime-3/#_7","text":"\u53ef\u8996\u5316\u3057\u305f\u6642\u306b 4\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u5c5e\u3059\u308b\u5024\u3092\u5bb9\u6613\u306b\u5224\u5225\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u8272\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u51e6\u7406\u306b\u4f9d\u308a\u3001\u751f\u6210\u3055\u308c\u305f\u30c1\u30e3\u30fc\u30c8\u306b\u30d7\u30ed\u30c3\u30c8\u3055\u308c\u305f\u5024\u304c\u3069\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u5c5e\u3057\u3066\u3044\u308b\u304b\u308f\u304b\u308a\u307e\u3059\u3002 Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u8272\u6307\u5b9a \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Views / Property / Color Manager","title":"\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 \u8272\u6307\u5b9a"},{"location":"data-science/knime/knime-3/#_8","text":"Fig. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 / \u96c6\u8a08, \u53ef\u8996\u5316","title":"\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0 / \u96c6\u8a08, \u53ef\u8996\u5316"},{"location":"data-science/knime/knime-3/#_9","text":"\u6b63\u898f\u5316\u51e6\u7406\u3067 \u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u3068\u7570\u306a\u308b\u5024\u3092\u6301\u3064\u30ab\u30e9\u30e0 ( mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) , membership_period (\u4f1a\u54e1\u671f\u9593) ) \u304c\u5b58\u5728\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u6b63\u898f\u5316\u524d\u5f8c\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3001\u6b63\u898f\u5316\u524d\u306e\u5143\u306e\u30c6\u30fc\u30d6\u30eb\u3068\u6b63\u898f\u5316\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u7d50\u5408\u3057\u307e\u3059\u3002 join mode \u306b inner join (\u5185\u90e8\u7d50\u5408) \u3092\u9078\u629e\u3059\u308b \u7d50\u5408\u3059\u308b\u30ab\u30e9\u30e0\u306b left table \u3001 right table \u5171\u306b Row ID \u3092\u6307\u5b9a\u3059\u308b Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 / \u8a2d\u5b9a (1) right table \u306b\u306f\u3001\u6b21\u306e3\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3059\u308b (\u91cd\u8907\u3059\u308b\u30ab\u30e9\u30e0\u3092\u5bfe\u8c61\u5916\u306b\u3059\u308b) mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) membership_period (\u4f1a\u54e1\u671f\u9593) Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) Fig. \u30c6\u30fc\u30d6\u30eb\u7d50\u5408 / \u8a2d\u5b9a (2)","title":"\u30c6\u30fc\u30d6\u30eb\u7d50\u5408"},{"location":"data-science/knime/knime-3/#_10","text":"\u96c6\u8a08\u306e\u76ee\u7684\u306f\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u5225 \u4f1a\u54e1\u306e\u884c\u52d5\u306e\u7279\u5fb4\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u300c\u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08\u300d\u3068\u300c\u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08\u300d\u3092\u884c\u3044\u307e\u3059\u3002","title":"\u96c6\u8a08"},{"location":"data-science/knime/knime-3/#_11","text":"\u30b0\u30eb\u30fc\u30d7\u5316\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b\u3001 Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3001 is_deleted (\u9014\u4e2d\u9000\u4f1a\u8005) \u3092\u6307\u5b9a\u3057\u3001 \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005 \u3092\u96c6\u8a08\u3059\u308b \u96c6\u8a08\u5bfe\u8c61\u30ab\u30e9\u30e0\u306f\u3001 customer_id (\u4f1a\u54e1ID) \u3068\u3057\u3001\u96c6\u8a08\u65b9\u6cd5\u306f Count \u3092\u6307\u5b9a\u3059\u308b \u96c6\u8a08\u7d50\u679c\u306e\u7740\u76ee\u70b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a cluster_0 \u9000\u4f1a\u8005\u6570 \u304c\u6700\u3082\u591a\u3044 cluster_1 \u7d99\u7d9a\u4f1a\u54e1\u6570 \u304c\u4e8c\u756a\u76ee\u306b\u591a\u3044 Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08 / \u8a2d\u5b9a (1) Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08 / \u8a2d\u5b9a (2) Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08 / \u7d50\u679c\u30c6\u30fc\u30d6\u30eb","title":"\u30af\u30e9\u30b9\u30bf\u30fc\u5225\u9000\u4f1a\u8005\u96c6\u8a08"},{"location":"data-science/knime/knime-3/#_12","text":"\u30b0\u30eb\u30fc\u30d7\u5316\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b\u3001 Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3001 routine_flg (\u5b9a\u671f\u5229\u7528\u30d5\u30e9\u30b0) \u3092\u6307\u5b9a\u3057\u3001 \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005 \u3092\u96c6\u8a08\u3059\u308b \u96c6\u8a08\u5bfe\u8c61\u30ab\u30e9\u30e0\u306f\u3001 customer_id (\u4f1a\u54e1ID) \u3068\u3057\u3001\u96c6\u8a08\u65b9\u6cd5\u306f Count \u3092\u6307\u5b9a\u3059\u308b \u96c6\u8a08\u7d50\u679c\u306e\u7740\u76ee\u70b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a cluster_2 \u5b9a\u671f\u5229\u7528\u8005\u6570 \u304c\u6700\u3082\u591a\u3044 cluster_1 \u5b9a\u671f\u5229\u7528\u8005\u6570 \u304c\u4e8c\u756a\u76ee\u306b\u591a\u3044 Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08 / \u8a2d\u5b9a (1) Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08 / \u8a2d\u5b9a (2) Fig. \u96c6\u8a08 / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08 / \u7d50\u679c\u30c6\u30fc\u30d6\u30eb \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Manipulation / RowRow / Transform / GroupBy","title":"\u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5b9a\u671f\u5229\u7528\u8005\u96c6\u8a08"},{"location":"data-science/knime/knime-3/#_13","text":"\u30c7\u30fc\u30bf\u306e\u4e2d\u306b\u3042\u308b\u30ab\u30c6\u30b4\u30ea\u30fc\u540c\u58eb\u306e\u985e\u4f3c\u6027\u3084\u95a2\u4fc2\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u3001\u30c1\u30e3\u30fc\u30c8\u3092\u3044\u304f\u3064\u304b\u4f5c\u6210\u3057\u30c7\u30fc\u30bf\u306e\u7406\u89e3\u3092\u6df1\u3081\u307e\u3059\u3002\u6b21\u306e\u4e09\u7a2e\u985e\u306e\u30c1\u30e3\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 Parallel Coordinates Plot (\u5e73\u884c\u5ea7\u6a19) Scatter Plot / 2D/3D Scatterplot (\u6563\u5e03\u56f3) Conditional Box Plot (\u7bb1\u3072\u3052\u56f3)","title":"\u53ef\u8996\u5316"},{"location":"data-science/knime/knime-3/#1-parallel-coordinates-plot","text":"Parallel Coordinates Plot (\u5e73\u884c\u5ea7\u6a19) \u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u5217\u3001 mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u3001 membership_period (\u4f1a\u54e1\u671f\u9593) \u3001 Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3092\u6307\u5b9a\u3059\u308b \u5404\u5217\u306e\u95a2\u4fc2 - mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) => membership_period (\u4f1a\u54e1\u671f\u9593) => Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3092\u78ba\u8a8d\u3059\u308b Fig. \u53ef\u8996\u5316 / Parallel Coordinates Plot / \u8a2d\u5b9a Fig. \u53ef\u8996\u5316 / Parallel Coordinates Plot / \u7d50\u679c \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Views / JavaScript / Parallel Coordinates Plot","title":"1. Parallel Coordinates Plot"},{"location":"data-science/knime/knime-3/#2-1-scatter-plot-1","text":"X\u8ef8\u306b membership_period (\u4f1a\u54e1\u671f\u9593) \u3001Y\u8ef8\u306b mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u3092\u6307\u5b9a\u3059\u308b \u5404\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u8272\u5206\u3051\u3055\u308c\u30d7\u30ed\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u3001\u7dba\u9e97\u306b4\u3064\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3001\u5404\u30af\u30e9\u30b9\u30bf\u30fc\u306e membership_period (\u4f1a\u54e1\u671f\u9593) \u3068 mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u306e\u95a2\u4fc2\u3082\u78ba\u8a8d\u3059\u308b Fig. \u53ef\u8996\u5316 / Scatter Plot (1) / \u8a2d\u5b9a Fig. \u53ef\u8996\u5316 / Scatter Plot (1) / \u7d50\u679c \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Views / JavaScript / Scatter Plot","title":"2-1. Scatter Plot (1)"},{"location":"data-science/knime/knime-3/#2-2-scatter-plot-2","text":"\u300c2-1. Scatter Plot (1)\u300d\u3068\u540c\u3058 Fig. \u53ef\u8996\u5316 / Scatter Plot (2) / \u8a2d\u5b9a Fig. \u53ef\u8996\u5316 / Scatter Plot (2) / \u7d50\u679c \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Community Nodes / Erlwood Nodes / Viewers","title":"2-2. Scatter Plot (2)"},{"location":"data-science/knime/knime-3/#3-conditional-box-plot","text":"Box Plot (\u7bb1\u3072\u3052\u56f3) \u3092\u4f5c\u6210\u3057\u3001\u5404\u30af\u30e9\u30b9\u30bf\u30fc\u306e membership_period (\u4f1a\u54e1\u671f\u9593) \u3068 mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u306e \u30c7\u30fc\u30bf\u306e\u3070\u3089\u3064\u304d \u3092\u78ba\u8a8d\u3059\u308b Category column \u306b Cluster (\u30af\u30e9\u30b9\u30bf\u30fc) \u3092\u6307\u5b9a\u3001\u5bfe\u8c61\u30ab\u30e9\u30e0\u306b membership_period (\u4f1a\u54e1\u671f\u9593) \u3068 mean (\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708) \u3092\u6307\u5b9a\u3059\u308b Fig. \u53ef\u8996\u5316 / Conditional Box Plot / \u8a2d\u5b9a Fig. \u53ef\u8996\u5316 / Conditional Box Plot / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u5e73\u5747\u5229\u7528\u56de\u6570/\u6708 Fig. \u53ef\u8996\u5316 / Conditional Box Plot / \u30af\u30e9\u30b9\u30bf\u30fc\u5225\u4f1a\u54e1\u671f\u9593 \u5229\u7528\u30ce\u30fc\u30c9: Nodes / Views / JavaScript / Conditional Box Plot","title":"3. Conditional Box Plot"},{"location":"data-science/knime/knime-3/#_14","text":"IO / Read / CSV Reader Nodes / KNIME Labs / JavaScript Views (Labs) / Data Explorer Nodes / Manipulation / Column / Transform Workflows / KNIME Hub / Users / taka / Public / k-means Nodes / Views / Property / Color Manager Nodes / Manipulation / RowRow / Transform / GroupBy Nodes / Views / JavaScript / Parallel Coordinates Plot Nodes / Views / JavaScript / Scatter Plot Nodes / Community Nodes / Erlwood Nodes / Viewers Nodes / Views / JavaScript / Conditional Box Plot","title":"\u5229\u7528\u30ce\u30fc\u30c9\u4e00\u89a7"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/","text":"geojson-area Calculate the area inside of any GeoJSON geometry. usage 1 npm install @mapbox/geojson-area example 1 2 3 var geojsonArea = require ( '@mapbox/geojson-area' ); var area = geojsonArea . geometry ( obj ); api geojsonArea.geometry(obj) Given a Geometry object, return contained area as square meters. Invalid input will return null . Adapted from OpenLayers","title":"Index"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/#geojson-area","text":"Calculate the area inside of any GeoJSON geometry.","title":"geojson-area"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/#usage","text":"1 npm install @mapbox/geojson-area","title":"usage"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/#example","text":"1 2 3 var geojsonArea = require ( '@mapbox/geojson-area' ); var area = geojsonArea . geometry ( obj );","title":"example"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/#api","text":"","title":"api"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/#geojsonareageometryobj","text":"Given a Geometry object, return contained area as square meters. Invalid input will return null . Adapted from OpenLayers","title":"geojsonArea.geometry(obj)"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/CHANGELOG/","text":"0.2.2 (2016-12-19) Bug Fixes algorithm: Avoid accidental global i, fixes use strict ( 1646944 )","title":"CHANGELOG"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/CHANGELOG/#022-2016-12-19","text":"","title":"0.2.2 (2016-12-19)"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-area/CHANGELOG/#bug-fixes","text":"algorithm: Avoid accidental global i, fixes use strict ( 1646944 )","title":"Bug Fixes"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/","text":"geojson-rewind The GeoJSON specification is picky about winding order . This helps you generate compliant Polygon and MultiPolygon geometries. Furthermore it lets you use Canvas and other drawing libraries's default behavior to color the interior rings of Polygon and MultiPolygon features. usage as npm module: 1 npm install --save @mapbox/geojson-rewind as console utility 1 2 3 4 # install npm install -g @mapbox/geojson-rewind # use geojson-rewind foo.geojson as browser library copy geojson-rewind.js api rewind(geojson, clockwise) Given a GeoJSON FeatureCollection, Feature, or Geometry, return a version with inner and outer rings of different winding orders. If clockwise is true , the outer ring is clockwise, otherwise it is counterclockwise.","title":"Index"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/#geojson-rewind","text":"The GeoJSON specification is picky about winding order . This helps you generate compliant Polygon and MultiPolygon geometries. Furthermore it lets you use Canvas and other drawing libraries's default behavior to color the interior rings of Polygon and MultiPolygon features.","title":"geojson-rewind"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/#usage","text":"as npm module: 1 npm install --save @mapbox/geojson-rewind as console utility 1 2 3 4 # install npm install -g @mapbox/geojson-rewind # use geojson-rewind foo.geojson as browser library copy geojson-rewind.js","title":"usage"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/#api","text":"rewind(geojson, clockwise) Given a GeoJSON FeatureCollection, Feature, or Geometry, return a version with inner and outer rings of different winding orders. If clockwise is true , the outer ring is clockwise, otherwise it is counterclockwise.","title":"api"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/HELP/","text":"geojson-rewind usage: 1 2 geojson-rewind < foo.geojson > foo.geojson geojson-rewind foo.geojson > bar.geojson options: 1 2 3 4 --counterclockwise if specified , set outer ring to counterclockwise and inner rings to clockwise","title":"HELP"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/HELP/#geojson-rewind","text":"usage: 1 2 geojson-rewind < foo.geojson > foo.geojson geojson-rewind foo.geojson > bar.geojson options: 1 2 3 4 --counterclockwise if specified , set outer ring to counterclockwise and inner rings to clockwise","title":"geojson-rewind"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/node_modules/minimist/readme/","text":"minimist parse argument options This module is the guts of optimist's argument parser without all the fanciful decoration. example 1 2 var argv = require ( 'minimist' )( process . argv . slice ( 2 )); console . log ( argv ); 1 2 $ node example/parse.js -a beep -b boop { _: [] , a: 'beep' , b: 'boop' } 1 2 3 4 5 6 7 8 9 $ node example/parse.js -x 3 -y 4 -n5 -abc --beep = boop foo bar baz { _: [ 'foo' , 'bar' , 'baz' ] , x: 3 , y: 4 , n: 5 , a: true, b: true, c: true, beep: 'boop' } security Previous versions had a prototype pollution bug that could cause privilege escalation in some circumstances when handling untrusted user input. Please use version 1.2.3 or later: https://snyk.io/vuln/SNYK-JS-MINIMIST-559764 methods 1 var parseArgs = require ( 'minimist' ) var argv = parseArgs(args, opts={}) Return an argument object argv populated with the array arguments from args . argv._ contains all the arguments that didn't have an option associated with them. Numeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name. Any arguments after '--' will not be parsed and will end up in argv._ . options can be: opts.string - a string or array of strings argument names to always treat as strings opts.boolean - a boolean, string or array of strings to always treat as booleans. if true will treat all double hyphenated arguments without equal signs as boolean (e.g. affects --foo , not -f or --foo=bar ) opts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases opts.default - an object mapping string argument names to default values opts.stopEarly - when true, populate argv._ with everything after the first non-option opts['--'] - when true, populate argv._ with everything before the -- and argv['--'] with everything after the -- . Here's an example: ``` require('./')('one two three -- four five --six'.split(' '), { '--': true }) { _: [ 'one', 'two', 'three' ], '--': [ 'four', 'five', '--six' ] } ``` Note that with opts['--'] set, parsing for arguments still stops after the -- . opts.unknown - a function which is invoked with a command line parameter not defined in the opts configuration object. If the function returns false , the unknown option is not added to argv . install With npm do: 1 npm install minimist license MIT","title":"minimist"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/node_modules/minimist/readme/#minimist","text":"parse argument options This module is the guts of optimist's argument parser without all the fanciful decoration.","title":"minimist"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/node_modules/minimist/readme/#example","text":"1 2 var argv = require ( 'minimist' )( process . argv . slice ( 2 )); console . log ( argv ); 1 2 $ node example/parse.js -a beep -b boop { _: [] , a: 'beep' , b: 'boop' } 1 2 3 4 5 6 7 8 9 $ node example/parse.js -x 3 -y 4 -n5 -abc --beep = boop foo bar baz { _: [ 'foo' , 'bar' , 'baz' ] , x: 3 , y: 4 , n: 5 , a: true, b: true, c: true, beep: 'boop' }","title":"example"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/node_modules/minimist/readme/#security","text":"Previous versions had a prototype pollution bug that could cause privilege escalation in some circumstances when handling untrusted user input. Please use version 1.2.3 or later: https://snyk.io/vuln/SNYK-JS-MINIMIST-559764","title":"security"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/node_modules/minimist/readme/#methods","text":"1 var parseArgs = require ( 'minimist' )","title":"methods"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/node_modules/minimist/readme/#var-argv-parseargsargs-opts","text":"Return an argument object argv populated with the array arguments from args . argv._ contains all the arguments that didn't have an option associated with them. Numeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name. Any arguments after '--' will not be parsed and will end up in argv._ . options can be: opts.string - a string or array of strings argument names to always treat as strings opts.boolean - a boolean, string or array of strings to always treat as booleans. if true will treat all double hyphenated arguments without equal signs as boolean (e.g. affects --foo , not -f or --foo=bar ) opts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases opts.default - an object mapping string argument names to default values opts.stopEarly - when true, populate argv._ with everything after the first non-option opts['--'] - when true, populate argv._ with everything before the -- and argv['--'] with everything after the -- . Here's an example: ``` require('./')('one two three -- four five --six'.split(' '), { '--': true }) { _: [ 'one', 'two', 'three' ], '--': [ 'four', 'five', '--six' ] } ``` Note that with opts['--'] set, parsing for arguments still stops after the -- . opts.unknown - a function which is invoked with a command line parameter not defined in the opts configuration object. If the function returns false , the unknown option is not added to argv .","title":"var argv = parseArgs(args, opts={})"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/node_modules/minimist/readme/#install","text":"With npm do: 1 npm install minimist","title":"install"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-rewind/node_modules/minimist/readme/#license","text":"MIT","title":"license"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-types/","text":"geojson-types Flow type declarations for GeoJSON . Install 1 npm install @mapbox/geojson-types Use 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // @flow import type { GeoJSONFeatureCollection , GeoJSONFeature , // specific geometries GeoJSONPoint , GeoJSONLineString , GeoJSONPolygon , GeoJSONMultiPoint , GeoJSONMultiLineString , GeoJSONMultiPolygon , // any geometry GeoJSONGeometry , // any feature collection, feature, or geometry GeoJSON , } from '@mapbox/geojson-types' ; function doSomething ( data : GeoJSON ) { // ... }","title":"geojson-types"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-types/#geojson-types","text":"Flow type declarations for GeoJSON .","title":"geojson-types"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-types/#install","text":"1 npm install @mapbox/geojson-types","title":"Install"},{"location":"data-science/knime/images/node_modules/%40mapbox/geojson-types/#use","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // @flow import type { GeoJSONFeatureCollection , GeoJSONFeature , // specific geometries GeoJSONPoint , GeoJSONLineString , GeoJSONPolygon , GeoJSONMultiPoint , GeoJSONMultiLineString , GeoJSONMultiPolygon , // any geometry GeoJSONGeometry , // any feature collection, feature, or geometry GeoJSON , } from '@mapbox/geojson-types' ; function doSomething ( data : GeoJSON ) { // ... }","title":"Use"},{"location":"data-science/knime/images/node_modules/%40mapbox/jsonlint-lines-primitives/","text":"JSON Lint A fork of the lines-primitive branch of tmcw/jsonlint , which is a fork of zaach/jsonlint that adds line number annotations to the parsed JSON. This fork is used by Mapbox GL JS, specifically for providing helpful error messages when validating Mapbox GL style JSON documents.","title":"Index"},{"location":"data-science/knime/images/node_modules/%40mapbox/jsonlint-lines-primitives/#json-lint","text":"A fork of the lines-primitive branch of tmcw/jsonlint , which is a fork of zaach/jsonlint that adds line number annotations to the parsed JSON. This fork is used by Mapbox GL JS, specifically for providing helpful error messages when validating Mapbox GL style JSON documents.","title":"JSON Lint"},{"location":"data-science/knime/images/node_modules/%40mapbox/mapbox-gl-supported/","text":"Mapbox GL JS Supported This library determines if a browser supports Mapbox GL JS . Testing Your Browser You may test your browser here . Using Mapbox GL JS Supported with a <script> tag 1 2 3 4 5 6 7 8 < script src = 'mapbox-gl-supported.js' ></ script > < script > if ( mapboxgl . supported ()) { ... } else { ... } </ script > Using Mapbox GL JS Supported with Browserify 1 npm install --save @mapbox/mapbox-gl-supported 1 var isSupported = require ( '@mapbox/mapbox-gl-supported' )();","title":"Mapbox GL JS Supported"},{"location":"data-science/knime/images/node_modules/%40mapbox/mapbox-gl-supported/#mapbox-gl-js-supported","text":"This library determines if a browser supports Mapbox GL JS .","title":"Mapbox GL JS Supported"},{"location":"data-science/knime/images/node_modules/%40mapbox/mapbox-gl-supported/#testing-your-browser","text":"You may test your browser here .","title":"Testing Your Browser"},{"location":"data-science/knime/images/node_modules/%40mapbox/mapbox-gl-supported/#using-mapbox-gl-js-supported-with-a-script-tag","text":"1 2 3 4 5 6 7 8 < script src = 'mapbox-gl-supported.js' ></ script > < script > if ( mapboxgl . supported ()) { ... } else { ... } </ script >","title":"Using Mapbox GL JS Supported with a &lt;script&gt; tag"},{"location":"data-science/knime/images/node_modules/%40mapbox/mapbox-gl-supported/#using-mapbox-gl-js-supported-with-browserify","text":"1 npm install --save @mapbox/mapbox-gl-supported 1 var isSupported = require ( '@mapbox/mapbox-gl-supported' )();","title":"Using Mapbox GL JS Supported with Browserify"},{"location":"data-science/knime/images/node_modules/%40mapbox/mapbox-gl-supported/CONTRIBUTING/","text":"Deploying a new release npm test npm version {patch|minor|major} git push --follow-tags aws s3 cp --acl public-read index.js s3://mapbox-gl-js/plugins/mapbox-gl-supported/v$(node --print --eval \"require('./package.json').version\")/mapbox-gl-supported.js","title":"Deploying a new release"},{"location":"data-science/knime/images/node_modules/%40mapbox/mapbox-gl-supported/CONTRIBUTING/#deploying-a-new-release","text":"npm test npm version {patch|minor|major} git push --follow-tags aws s3 cp --acl public-read index.js s3://mapbox-gl-js/plugins/mapbox-gl-supported/v$(node --print --eval \"require('./package.json').version\")/mapbox-gl-supported.js","title":"Deploying a new release"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/","text":"point-geometry a point geometry with transforms Point(x, y) A standalone point geometry with useful accessor, comparison, and modification methods. Parameters parameter type description x Number the x-coordinate. this could be longitude or screen pixels, or any other sort of unit. y Number the y-coordinate. this could be latitude or screen pixels, or any other sort of unit. Example 1 var point = new Point ( - 77 , 38 ); clone Clone this point, returning a new point that can be modified without affecting the old one. Returns Point , the clone add(p) Add this point's x & y coordinates to another point, yielding a new point. Parameters parameter type description p Point the other point Returns Point , output point sub(p) Subtract this point's x & y coordinates to from point, yielding a new point. Parameters parameter type description p Point the other point Returns Point , output point multByPoint(p) Multiply this point's x & y coordinates by point, yielding a new point. Parameters parameter type description p Point the other point Returns Point , output point divByPoint(p) Divide this point's x & y coordinates by point, yielding a new point. Parameters parameter type description p Point the other point Returns Point , output point mult(k) Multiply this point's x & y coordinates by a factor, yielding a new point. Parameters parameter type description k Point factor Returns Point , output point div(k) Divide this point's x & y coordinates by a factor, yielding a new point. Parameters parameter type description k Point factor Returns Point , output point rotate(a) Rotate this point around the 0, 0 origin by an angle a, given in radians Parameters parameter type description a Number angle to rotate around, in radians Returns Point , output point rotateAround(a, p) Rotate this point around p point by an angle a, given in radians Parameters parameter type description a Number angle to rotate around, in radians p Point Point to rotate around Returns Point , output point matMult(m) Multiply this point by a 4x1 transformation matrix Parameters parameter type description m Array.\\<Number> transformation matrix Returns Point , output point unit Calculate this point but as a unit vector from 0, 0, meaning that the distance from the resulting point to the 0, 0 coordinate will be equal to 1 and the angle from the resulting point to the 0, 0 coordinate will be the same as before. Returns Point , unit vector point perp Compute a perpendicular point, where the new y coordinate is the old x coordinate and the new x coordinate is the old y coordinate multiplied by -1 Returns Point , perpendicular point round Return a version of this point with the x & y coordinates rounded to integers. Returns Point , rounded point mag Return the magitude of this point: this is the Euclidean distance from the 0, 0 coordinate to this point's x and y coordinates. Returns Number , magnitude equals(other) Judge whether this point is equal to another point, returning true or false. Parameters parameter type description other Point the other point Returns boolean , whether the points are equal dist(p) Calculate the distance from this point to another point Parameters parameter type description p Point the other point Returns Number , distance distSqr(p) Calculate the distance from this point to another point, without the square root step. Useful if you're comparing relative distances. Parameters parameter type description p Point the other point Returns Number , distance angle Get the angle from the 0, 0 coordinate to this point, in radians coordinates. Returns Number , angle angleTo(b) Get the angle from this point to another point, in radians Parameters parameter type description b Point the other point Returns Number , angle angleWith(b) Get the angle between this point and another point, in radians Parameters parameter type description b Point the other point Returns Number , angle angleWithSep(x, y) Find the angle of the two vectors, solving the formula for the cross product a x b = |a||b|sin(\u03b8) for \u03b8. Parameters parameter type description x Number the x-coordinate y Number the y-coordinate Returns Number , the angle in radians convert(a) Construct a point from an array if necessary, otherwise if the input is already a Point, or an unknown type, return it unchanged Parameters parameter type description a Array.\\<Number>\\,Point any kind of input value Example 1 2 3 4 // this var point = Point . convert ([ 0 , 1 ]); // is equivalent to var point = new Point ( 0 , 1 ); Returns Point , constructed point, or passed-through value. Installation Requires nodejs . 1 $ npm install point-geometry Tests 1 $ npm test","title":"point-geometry"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#point-geometry","text":"a point geometry with transforms","title":"point-geometry"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#pointx-y","text":"A standalone point geometry with useful accessor, comparison, and modification methods.","title":"Point(x, y)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters","text":"parameter type description x Number the x-coordinate. this could be longitude or screen pixels, or any other sort of unit. y Number the y-coordinate. this could be latitude or screen pixels, or any other sort of unit.","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#example","text":"1 var point = new Point ( - 77 , 38 );","title":"Example"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#clone","text":"Clone this point, returning a new point that can be modified without affecting the old one. Returns Point , the clone","title":"clone"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#addp","text":"Add this point's x & y coordinates to another point, yielding a new point.","title":"add(p)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_1","text":"parameter type description p Point the other point Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#subp","text":"Subtract this point's x & y coordinates to from point, yielding a new point.","title":"sub(p)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_2","text":"parameter type description p Point the other point Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#multbypointp","text":"Multiply this point's x & y coordinates by point, yielding a new point.","title":"multByPoint(p)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_3","text":"parameter type description p Point the other point Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#divbypointp","text":"Divide this point's x & y coordinates by point, yielding a new point.","title":"divByPoint(p)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_4","text":"parameter type description p Point the other point Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#multk","text":"Multiply this point's x & y coordinates by a factor, yielding a new point.","title":"mult(k)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_5","text":"parameter type description k Point factor Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#divk","text":"Divide this point's x & y coordinates by a factor, yielding a new point.","title":"div(k)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_6","text":"parameter type description k Point factor Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#rotatea","text":"Rotate this point around the 0, 0 origin by an angle a, given in radians","title":"rotate(a)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_7","text":"parameter type description a Number angle to rotate around, in radians Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#rotatearounda-p","text":"Rotate this point around p point by an angle a, given in radians","title":"rotateAround(a, p)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_8","text":"parameter type description a Number angle to rotate around, in radians p Point Point to rotate around Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#matmultm","text":"Multiply this point by a 4x1 transformation matrix","title":"matMult(m)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_9","text":"parameter type description m Array.\\<Number> transformation matrix Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#unit","text":"Calculate this point but as a unit vector from 0, 0, meaning that the distance from the resulting point to the 0, 0 coordinate will be equal to 1 and the angle from the resulting point to the 0, 0 coordinate will be the same as before. Returns Point , unit vector point","title":"unit"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#perp","text":"Compute a perpendicular point, where the new y coordinate is the old x coordinate and the new x coordinate is the old y coordinate multiplied by -1 Returns Point , perpendicular point","title":"perp"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#round","text":"Return a version of this point with the x & y coordinates rounded to integers. Returns Point , rounded point","title":"round"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#mag","text":"Return the magitude of this point: this is the Euclidean distance from the 0, 0 coordinate to this point's x and y coordinates. Returns Number , magnitude","title":"mag"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#equalsother","text":"Judge whether this point is equal to another point, returning true or false.","title":"equals(other)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_10","text":"parameter type description other Point the other point Returns boolean , whether the points are equal","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#distp","text":"Calculate the distance from this point to another point","title":"dist(p)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_11","text":"parameter type description p Point the other point Returns Number , distance","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#distsqrp","text":"Calculate the distance from this point to another point, without the square root step. Useful if you're comparing relative distances.","title":"distSqr(p)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_12","text":"parameter type description p Point the other point Returns Number , distance","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#angle","text":"Get the angle from the 0, 0 coordinate to this point, in radians coordinates. Returns Number , angle","title":"angle"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#angletob","text":"Get the angle from this point to another point, in radians","title":"angleTo(b)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_13","text":"parameter type description b Point the other point Returns Number , angle","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#anglewithb","text":"Get the angle between this point and another point, in radians","title":"angleWith(b)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_14","text":"parameter type description b Point the other point Returns Number , angle","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#anglewithsepx-y","text":"Find the angle of the two vectors, solving the formula for the cross product a x b = |a||b|sin(\u03b8) for \u03b8.","title":"angleWithSep(x, y)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_15","text":"parameter type description x Number the x-coordinate y Number the y-coordinate Returns Number , the angle in radians","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#converta","text":"Construct a point from an array if necessary, otherwise if the input is already a Point, or an unknown type, return it unchanged","title":"convert(a)"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#parameters_16","text":"parameter type description a Array.\\<Number>\\,Point any kind of input value","title":"Parameters"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#example_1","text":"1 2 3 4 // this var point = Point . convert ([ 0 , 1 ]); // is equivalent to var point = new Point ( 0 , 1 ); Returns Point , constructed point, or passed-through value.","title":"Example"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#installation","text":"Requires nodejs . 1 $ npm install point-geometry","title":"Installation"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/#tests","text":"1 $ npm test","title":"Tests"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/HISTORY/","text":"0.1.0 Adds rotateAround and multByPoint and divByPoint methods.","title":"HISTORY"},{"location":"data-science/knime/images/node_modules/%40mapbox/point-geometry/HISTORY/#010","text":"Adds rotateAround and multByPoint and divByPoint methods.","title":"0.1.0"},{"location":"data-science/knime/images/node_modules/%40mapbox/tiny-sdf/","text":"TinySDF TinySDF is a tiny and fast JavaScript library for generating SDF (signed distance field) from system fonts on the browser using Canvas 2D and Felzenszwalb/Huttenlocher distance transform . This is very useful for rendering text with WebGL . This implementation is based directly on the algorithm published in the Felzenszwalb/Huttenlocher paper, and is not a port of the existing C++ implementation provided by the paper's authors. Demo: http://mapbox.github.io/tiny-sdf/ Usage Create a TinySDF for drawing SDFs based on font parameters: 1 2 3 4 5 6 7 8 9 10 11 var fontsize = 24 ; // Font size in pixels var buffer = 3 ; // Whitespace buffer around a glyph in pixels var radius = 8 ; // How many pixels around the glyph shape to use for encoding distance var cutoff = 0.25 // How much of the radius (relative) is used for the inside part the glyph var fontFamily = 'sans-serif' ; // css font-family var fontWeight = 'normal' ; // css font-weight var tinySDFGenerator = new TinySDF ( fontsize , buffer , radius , cutoff , fontFamily , fontWeight ); var oneSDF = tinySDFGenerator . draw ( '\u6cfd' ); // returns a Uint8ClampedArray array of alpha values (0\u2013255) for a size x size square grid","title":"TinySDF"},{"location":"data-science/knime/images/node_modules/%40mapbox/tiny-sdf/#tinysdf","text":"TinySDF is a tiny and fast JavaScript library for generating SDF (signed distance field) from system fonts on the browser using Canvas 2D and Felzenszwalb/Huttenlocher distance transform . This is very useful for rendering text with WebGL . This implementation is based directly on the algorithm published in the Felzenszwalb/Huttenlocher paper, and is not a port of the existing C++ implementation provided by the paper's authors. Demo: http://mapbox.github.io/tiny-sdf/","title":"TinySDF"},{"location":"data-science/knime/images/node_modules/%40mapbox/tiny-sdf/#usage","text":"Create a TinySDF for drawing SDFs based on font parameters: 1 2 3 4 5 6 7 8 9 10 11 var fontsize = 24 ; // Font size in pixels var buffer = 3 ; // Whitespace buffer around a glyph in pixels var radius = 8 ; // How many pixels around the glyph shape to use for encoding distance var cutoff = 0.25 // How much of the radius (relative) is used for the inside part the glyph var fontFamily = 'sans-serif' ; // css font-family var fontWeight = 'normal' ; // css font-weight var tinySDFGenerator = new TinySDF ( fontsize , buffer , radius , cutoff , fontFamily , fontWeight ); var oneSDF = tinySDFGenerator . draw ( '\u6cfd' ); // returns a Uint8ClampedArray array of alpha values (0\u2013255) for a size x size square grid","title":"Usage"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/","text":"unitbezier Unit bezier interpolation function: a port to JavaScript from Webkit: http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h api new UnitBezier(p1x, p1y, p2x, p2y) Initialize a new bezier curve given the points bezier.sampleCurveX(t) bezier.sampleCurveY(t) bezier.sampleCurveDerivativeX(t) bezier.solveCurveX(t) bezier.solve(x, epsilon)","title":"Index"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/#unitbezier","text":"Unit bezier interpolation function: a port to JavaScript from Webkit: http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h","title":"unitbezier"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/#api","text":"","title":"api"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/#new-unitbezierp1x-p1y-p2x-p2y","text":"Initialize a new bezier curve given the points","title":"new UnitBezier(p1x, p1y, p2x, p2y)"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/#beziersamplecurvext","text":"","title":"bezier.sampleCurveX(t)"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/#beziersamplecurveyt","text":"","title":"bezier.sampleCurveY(t)"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/#beziersamplecurvederivativext","text":"","title":"bezier.sampleCurveDerivativeX(t)"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/#beziersolvecurvext","text":"","title":"bezier.solveCurveX(t)"},{"location":"data-science/knime/images/node_modules/%40mapbox/unitbezier/#beziersolvex-epsilon","text":"","title":"bezier.solve(x, epsilon)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/","text":"vector-tile This library reads Mapbox Vector Tiles and allows access to the layers and features. Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 var VectorTile = require ( '@mapbox/vector-tile' ). VectorTile ; var Protobuf = require ( 'pbf' ); var tile = new VectorTile ( new Protobuf ( data )); // Contains a map of all layers tile . layers ; var landuse = tile . layers . landuse ; // Amount of features in this layer landuse . length ; // Returns the first feature landuse . feature ( 0 ); Vector tiles contained in serialtiles-spec are gzip-encoded, so a complete example of parsing them with the native zlib module would be: 1 2 3 4 5 6 7 var VectorTile = require ( 'vector-tile' ). VectorTile ; var Protobuf = require ( 'pbf' ); var zlib = require ( 'zlib' ); zlib . gunzip ( data , function ( err , buffer ) { var tile = new VectorTile ( new Protobuf ( buffer )); }); Depends Node.js v0.10.x or v0.8.x Install To install: 1 npm install @mapbox/vector-tile API Reference VectorTile An object that parses vector tile data and makes it readable. Constructor new VectorTile(protobuf[, end]) \u2014 parses the vector tile data contained in the given Protobuf object, saving resulting layers in the created object as a layers property. Optionally accepts end index. Properties layers (Object) \u2014 an object containing parsed layers in the form of {<name>: <layer>, ...} , where each layer is a VectorTileLayer object. VectorTileLayer An object that contains the data for a single vector tile layer. Properties version ( Number , default: 1 ) name ( String) \u2014 layer name extent ( Number , default: 4096 ) \u2014 tile extent size length ( Number ) \u2014 number of features in the layer Methods feature(i) \u2014 get a feature ( VectorTileFeature ) by the given index from the layer. VectorTileFeature An object that contains the data for a single feature. Properties type ( Number ) \u2014 type of the feature (also see VectorTileFeature.types ) extent ( Number ) \u2014 feature extent size id ( Number ) \u2014 feature identifier, if present properties ( Object ) \u2014 object literal with feature properties Methods loadGeometry() \u2014 parses feature geometry and returns an array of Point arrays (with each point having x and y properties) bbox() \u2014 calculates and returns the bounding box of the feature in the form [x1, y1, x2, y2] toGeoJSON(x, y, z) \u2014 returns a GeoJSON representation of the feature. ( x , y , and z refer to the containing tile's index.)","title":"vector-tile"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#vector-tile","text":"This library reads Mapbox Vector Tiles and allows access to the layers and features.","title":"vector-tile"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#example","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 var VectorTile = require ( '@mapbox/vector-tile' ). VectorTile ; var Protobuf = require ( 'pbf' ); var tile = new VectorTile ( new Protobuf ( data )); // Contains a map of all layers tile . layers ; var landuse = tile . layers . landuse ; // Amount of features in this layer landuse . length ; // Returns the first feature landuse . feature ( 0 ); Vector tiles contained in serialtiles-spec are gzip-encoded, so a complete example of parsing them with the native zlib module would be: 1 2 3 4 5 6 7 var VectorTile = require ( 'vector-tile' ). VectorTile ; var Protobuf = require ( 'pbf' ); var zlib = require ( 'zlib' ); zlib . gunzip ( data , function ( err , buffer ) { var tile = new VectorTile ( new Protobuf ( buffer )); });","title":"Example"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#depends","text":"Node.js v0.10.x or v0.8.x","title":"Depends"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#install","text":"To install: 1 npm install @mapbox/vector-tile","title":"Install"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#api-reference","text":"","title":"API Reference"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#vectortile","text":"An object that parses vector tile data and makes it readable.","title":"VectorTile"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#constructor","text":"new VectorTile(protobuf[, end]) \u2014 parses the vector tile data contained in the given Protobuf object, saving resulting layers in the created object as a layers property. Optionally accepts end index.","title":"Constructor"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#properties","text":"layers (Object) \u2014 an object containing parsed layers in the form of {<name>: <layer>, ...} , where each layer is a VectorTileLayer object.","title":"Properties"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#vectortilelayer","text":"An object that contains the data for a single vector tile layer.","title":"VectorTileLayer"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#properties_1","text":"version ( Number , default: 1 ) name ( String) \u2014 layer name extent ( Number , default: 4096 ) \u2014 tile extent size length ( Number ) \u2014 number of features in the layer","title":"Properties"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#methods","text":"feature(i) \u2014 get a feature ( VectorTileFeature ) by the given index from the layer.","title":"Methods"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#vectortilefeature","text":"An object that contains the data for a single feature.","title":"VectorTileFeature"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#properties_2","text":"type ( Number ) \u2014 type of the feature (also see VectorTileFeature.types ) extent ( Number ) \u2014 feature extent size id ( Number ) \u2014 feature identifier, if present properties ( Object ) \u2014 object literal with feature properties","title":"Properties"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/#methods_1","text":"loadGeometry() \u2014 parses feature geometry and returns an array of Point arrays (with each point having x and y properties) bbox() \u2014 calculates and returns the bounding box of the feature in the form [x1, y1, x2, y2] toGeoJSON(x, y, z) \u2014 returns a GeoJSON representation of the feature. ( x , y , and z refer to the containing tile's index.)","title":"Methods"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/","text":"vector-tile-js changelog 1.3.1 (2017-03-02) Fix bug causing infinite loop when parsing ClosePath command (#61) h/t @sanjin-saric Pin node-mapnik dependency to ~3.6.0 (#62, see also https://github.com/mapnik/node-mapnik/issues/848 ) 1.3.0 (2016-07-18) Added \"id\" property to VectorTileFeature (#43) 1.2.1 (2016-05-18) Fixed geometry structure of MultiPoints, Polygons, and MultiPolygons in toGeoJSON() 1.2.0 (2015-12-10) Added \"id\" property to toGeoJSON() output 1.1.3 (2015-06-15) Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90 1.1.2 (2015-03-05) Fixed decoding of negative values in feature properties 1.1.1 (2015-02-25) Remove sphericalmercator dependency Correctly handle MultiPoint and MultiLineString features in toGeoJSON() 1.1.0 (2015-02-21) Added VectorTileFeature#toGeoJSON() 1.0.0 (2014-12-26) 0.0.1 (2014-04-13) Initial release","title":"CHANGELOG"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#vector-tile-js-changelog","text":"","title":"vector-tile-js changelog"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#131-2017-03-02","text":"Fix bug causing infinite loop when parsing ClosePath command (#61) h/t @sanjin-saric Pin node-mapnik dependency to ~3.6.0 (#62, see also https://github.com/mapnik/node-mapnik/issues/848 )","title":"1.3.1 (2017-03-02)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#130-2016-07-18","text":"Added \"id\" property to VectorTileFeature (#43)","title":"1.3.0 (2016-07-18)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#121-2016-05-18","text":"Fixed geometry structure of MultiPoints, Polygons, and MultiPolygons in toGeoJSON()","title":"1.2.1 (2016-05-18)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#120-2015-12-10","text":"Added \"id\" property to toGeoJSON() output","title":"1.2.0 (2015-12-10)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#113-2015-06-15","text":"Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90","title":"1.1.3 (2015-06-15)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#112-2015-03-05","text":"Fixed decoding of negative values in feature properties","title":"1.1.2 (2015-03-05)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#111-2015-02-25","text":"Remove sphericalmercator dependency Correctly handle MultiPoint and MultiLineString features in toGeoJSON()","title":"1.1.1 (2015-02-25)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#110-2015-02-21","text":"Added VectorTileFeature#toGeoJSON()","title":"1.1.0 (2015-02-21)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#100-2014-12-26","text":"","title":"1.0.0 (2014-12-26)"},{"location":"data-science/knime/images/node_modules/%40mapbox/vector-tile/CHANGELOG/#001-2014-04-13","text":"Initial release","title":"0.0.1 (2014-04-13)"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/","text":"whoots-js Request tiles from WMS servers that support EPSG:3857. This project is a JavaScript port of https://github.com/timwaters/whoots by Tim Waters. What is it? Given a z/x/y tile coordinate like 19/154308/197167 , whoots-js can request imagery from an EPSG:3857 supporting WMS server like this: 1 2 3 4 http://geodata.state.nj.us/imagerywms/Natural2015? bbox=-8242663.382160267,4966572.349857613,-8242586.945131982,4966648.786885899 &format=image/png&service=WMS&version=1.1.1&request=GetMap&srs=EPSG:3857 &width=256&height=256&layers=Natural2015 Usage 1 2 3 4 5 6 var WhooTS = require ( '@mapbox/whoots-js' ); // Get an image url for a given tile coordinate var baseUrl = 'http://geodata.state.nj.us/imagerywms/Natural2015' ; var layer = 'Natural2015' ; var url = WhooTS . getURL ( baseUrl , layer , 154308 , 197167 , 19 ); Server This project includes a sample redirecting wms proxy server in server.js . npm run server will start a local server on port 8080 that redirects tile requests. Valid tile requests look like: 1 2 http://localhost:8080/tms/{z}/{x}/{y}/{layer}/{endpoint} http://localhost:8080/tms/19/154308/197167/Natural2015/http://geodata.state.nj.us/imagerywms/Natural2015 Documentation Complete API documentation is here: http://mapbox.github.io/whoots-js/","title":"Index"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/#whoots-js","text":"Request tiles from WMS servers that support EPSG:3857. This project is a JavaScript port of https://github.com/timwaters/whoots by Tim Waters.","title":"whoots-js"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/#what-is-it","text":"Given a z/x/y tile coordinate like 19/154308/197167 , whoots-js can request imagery from an EPSG:3857 supporting WMS server like this: 1 2 3 4 http://geodata.state.nj.us/imagerywms/Natural2015? bbox=-8242663.382160267,4966572.349857613,-8242586.945131982,4966648.786885899 &format=image/png&service=WMS&version=1.1.1&request=GetMap&srs=EPSG:3857 &width=256&height=256&layers=Natural2015","title":"What is it?"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/#usage","text":"1 2 3 4 5 6 var WhooTS = require ( '@mapbox/whoots-js' ); // Get an image url for a given tile coordinate var baseUrl = 'http://geodata.state.nj.us/imagerywms/Natural2015' ; var layer = 'Natural2015' ; var url = WhooTS . getURL ( baseUrl , layer , 154308 , 197167 , 19 );","title":"Usage"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/#server","text":"This project includes a sample redirecting wms proxy server in server.js . npm run server will start a local server on port 8080 that redirects tile requests. Valid tile requests look like: 1 2 http://localhost:8080/tms/{z}/{x}/{y}/{layer}/{endpoint} http://localhost:8080/tms/19/154308/197167/Natural2015/http://geodata.state.nj.us/imagerywms/Natural2015","title":"Server"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/#documentation","text":"Complete API documentation is here: http://mapbox.github.io/whoots-js/","title":"Documentation"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/","text":"Breaking changes, which may affect downstream projects are marked with a :warning: 3.1.0 2018-Jul-12 Replace legacy Rollup jsnext:main with now standard module ( #74 ) :warning: Drop support for Node 4 3.0.0 2017-Feb-13 :warning: whoots-js is now a scoped package under the @mapbox namespace 2.1.0 Jul 15, 2016 Release as ES6 module alongside UMD build, add jsnext:main to package.json 2.0.0 Jun 1, 2016 :warning: Refactor for a classless API 1.1.0 May 23, 2016 Make getTileBbox and getMercCoords public 1.0.0 May 23, 2016 Initial release","title":"CHANGELOG"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#310","text":"","title":"3.1.0"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#2018-jul-12","text":"Replace legacy Rollup jsnext:main with now standard module ( #74 ) :warning: Drop support for Node 4","title":"2018-Jul-12"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#300","text":"","title":"3.0.0"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#2017-feb-13","text":":warning: whoots-js is now a scoped package under the @mapbox namespace","title":"2017-Feb-13"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#210","text":"","title":"2.1.0"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#jul-15-2016","text":"Release as ES6 module alongside UMD build, add jsnext:main to package.json","title":"Jul 15, 2016"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#200","text":"","title":"2.0.0"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#jun-1-2016","text":":warning: Refactor for a classless API","title":"Jun 1, 2016"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#110","text":"","title":"1.1.0"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#may-23-2016","text":"Make getTileBbox and getMercCoords public","title":"May 23, 2016"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#100","text":"","title":"1.0.0"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/CHANGELOG/#may-23-2016_1","text":"Initial release","title":"May 23, 2016"},{"location":"data-science/knime/images/node_modules/%40mapbox/whoots-js/LICENSE/","text":"ISC License Copyright (c) 2017, Mapbox Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies. THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.","title":"LICENSE"},{"location":"data-science/knime/images/node_modules/ansicolors/","text":"ansicolors Functions that surround a string with ansicolor codes so it prints in color. Installation 1 npm install ansicolors Usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var colors = require ( 'ansicolors' ); // foreground colors var redHerring = colors . red ( 'herring' ); var blueMoon = colors . blue ( 'moon' ); var brighBlueMoon = colors . brightBlue ( 'moon' ); console . log ( redHerring ); // this will print 'herring' in red console . log ( blueMoon ); // this 'moon' in blue console . log ( brightBlueMoon ); // I think you got the idea // background colors console . log ( colors . bgYellow ( 'printed on yellow background' )); console . log ( colors . bgBrightBlue ( 'printed on bright blue background' )); // mixing background and foreground colors // below two lines have same result (order in which bg and fg are combined doesn't matter) console . log ( colors . bgYellow ( colors . blue ( 'printed on yellow background in blue' ))); console . log ( colors . blue ( colors . bgYellow ( 'printed on yellow background in blue' ))); Tests Look at the tests to see more examples and/or run them via: 1 npm explore ansicolors && npm test Alternatives ansicolors tries to meet simple use cases with a very simple API. However, if you need a more powerful ansi formatting tool, I'd suggest to look at the features of the ansi module .","title":"ansicolors [![build status](https://secure.travis-ci.org/thlorenz/ansicolors.png)](http://next.travis-ci.org/thlorenz/ansicolors)"},{"location":"data-science/knime/images/node_modules/ansicolors/#ansicolors","text":"Functions that surround a string with ansicolor codes so it prints in color.","title":"ansicolors"},{"location":"data-science/knime/images/node_modules/ansicolors/#installation","text":"1 npm install ansicolors","title":"Installation"},{"location":"data-science/knime/images/node_modules/ansicolors/#usage","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var colors = require ( 'ansicolors' ); // foreground colors var redHerring = colors . red ( 'herring' ); var blueMoon = colors . blue ( 'moon' ); var brighBlueMoon = colors . brightBlue ( 'moon' ); console . log ( redHerring ); // this will print 'herring' in red console . log ( blueMoon ); // this 'moon' in blue console . log ( brightBlueMoon ); // I think you got the idea // background colors console . log ( colors . bgYellow ( 'printed on yellow background' )); console . log ( colors . bgBrightBlue ( 'printed on bright blue background' )); // mixing background and foreground colors // below two lines have same result (order in which bg and fg are combined doesn't matter) console . log ( colors . bgYellow ( colors . blue ( 'printed on yellow background in blue' ))); console . log ( colors . blue ( colors . bgYellow ( 'printed on yellow background in blue' )));","title":"Usage"},{"location":"data-science/knime/images/node_modules/ansicolors/#tests","text":"Look at the tests to see more examples and/or run them via: 1 npm explore ansicolors && npm test","title":"Tests"},{"location":"data-science/knime/images/node_modules/ansicolors/#alternatives","text":"ansicolors tries to meet simple use cases with a very simple API. However, if you need a more powerful ansi formatting tool, I'd suggest to look at the features of the ansi module .","title":"Alternatives"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/","text":"Buffer From A ponyfill for Buffer.from , uses native implementation if available. Installation 1 npm install --save buffer-from Usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 const bufferFrom = require ( 'buffer-from' ) console . log ( bufferFrom ([ 1 , 2 , 3 , 4 ])) //=> <Buffer 01 02 03 04> const arr = new Uint8Array ([ 1 , 2 , 3 , 4 ]) console . log ( bufferFrom ( arr . buffer , 1 , 2 )) //=> <Buffer 02 03> console . log ( bufferFrom ( 'test' , 'utf8' )) //=> <Buffer 74 65 73 74> const buf = bufferFrom ( 'test' ) console . log ( bufferFrom ( buf )) //=> <Buffer 74 65 73 74> API bufferFrom(array) array <Array> Allocates a new Buffer using an array of octets. bufferFrom(arrayBuffer[, byteOffset[, length]]) arrayBuffer <ArrayBuffer> The .buffer property of a TypedArray or ArrayBuffer byteOffset <Integer> Where to start copying from arrayBuffer . Default: 0 length <Integer> How many bytes to copy from arrayBuffer . Default: arrayBuffer.length - byteOffset When passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray. The optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer . bufferFrom(buffer) buffer <Buffer> An existing Buffer to copy data from Copies the passed buffer data onto a new Buffer instance. bufferFrom(string[, encoding]) string <String> A string to encode. encoding <String> The encoding of string . Default: 'utf8' Creates a new Buffer containing the given JavaScript string string . If provided, the encoding parameter identifies the character encoding of string . See also buffer-alloc A ponyfill for Buffer.alloc buffer-alloc-unsafe A ponyfill for Buffer.allocUnsafe","title":"Buffer From"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#buffer-from","text":"A ponyfill for Buffer.from , uses native implementation if available.","title":"Buffer From"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#installation","text":"1 npm install --save buffer-from","title":"Installation"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#usage","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 const bufferFrom = require ( 'buffer-from' ) console . log ( bufferFrom ([ 1 , 2 , 3 , 4 ])) //=> <Buffer 01 02 03 04> const arr = new Uint8Array ([ 1 , 2 , 3 , 4 ]) console . log ( bufferFrom ( arr . buffer , 1 , 2 )) //=> <Buffer 02 03> console . log ( bufferFrom ( 'test' , 'utf8' )) //=> <Buffer 74 65 73 74> const buf = bufferFrom ( 'test' ) console . log ( bufferFrom ( buf )) //=> <Buffer 74 65 73 74>","title":"Usage"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#api","text":"","title":"API"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#bufferfromarray","text":"array <Array> Allocates a new Buffer using an array of octets.","title":"bufferFrom(array)"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#bufferfromarraybuffer-byteoffset-length","text":"arrayBuffer <ArrayBuffer> The .buffer property of a TypedArray or ArrayBuffer byteOffset <Integer> Where to start copying from arrayBuffer . Default: 0 length <Integer> How many bytes to copy from arrayBuffer . Default: arrayBuffer.length - byteOffset When passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray. The optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer .","title":"bufferFrom(arrayBuffer[, byteOffset[, length]])"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#bufferfrombuffer","text":"buffer <Buffer> An existing Buffer to copy data from Copies the passed buffer data onto a new Buffer instance.","title":"bufferFrom(buffer)"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#bufferfromstring-encoding","text":"string <String> A string to encode. encoding <String> The encoding of string . Default: 'utf8' Creates a new Buffer containing the given JavaScript string string . If provided, the encoding parameter identifies the character encoding of string .","title":"bufferFrom(string[, encoding])"},{"location":"data-science/knime/images/node_modules/buffer-from/readme/#see-also","text":"buffer-alloc A ponyfill for Buffer.alloc buffer-alloc-unsafe A ponyfill for Buffer.allocUnsafe","title":"See also"},{"location":"data-science/knime/images/node_modules/cardinal/","text":"cardinal car\u00b7di\u00b7nal (k\u00e4rdn-l, k\u00e4rdnl) - crested thick-billed North American finch having bright red plumage in the male. Features highlights JavaScript code with ANSI colors to improve terminal output theming support, see custom color themes optionally print line numbers API and command line interface ( cdl ) .cardinalrc config to customize settings supports UNIX pipes Table of Contents generated with DocToc Installation As library As Commandline Tool Commandline Highlight a file As part of a UNIX pipe Theme API highlight(code[, opts]) highlightFileSync(fullPath[, opts]) highlightFile(fullPath[, opts], callback) opts Examples ([ browse ](https://github.com/thlorenz/cardinal/tree/master/examples)) Installation As library 1 npm install cardinal As Commandline Tool 1 [ sudo ] npm install - g cardinal Note: When installed globally, cardinal exposes itself as the cdl command. Commandline Highlight a file 1 cdl < file . js > [ options ] options : - --nonum : turns off line number printing (relevant if it is turned on inside ~/.cardinalrc As part of a UNIX pipe 1 cat file.js | grep console | cdl Note: Not all code lines may be parsable JavaScript. In these cases the line is printed to the terminal without highlighting it. Theme The default theme will be used for highlighting. To use a different theme, include a .cardinalrc file in your HOME directory. This is a JSON file of the following form: 1 2 3 4 { \"theme\" : \"hide-semicolons\" , \"linenos\" : true | false } theme can be the name of any of the built-in themes or the full path to a custom theme anywhere on your computer. linenos toggles line number printing API highlight(code[, opts]) returns the highlighted version of the passed code ({String}) or throws an error if it was not able to parse it opts (see below) highlightFileSync(fullPath[, opts]) returns the highlighted version of the file whose fullPath ({String}) was passed or throws an error if it was not able to parse it opts (see below) highlightFile(fullPath[, opts], callback) calls back with the highlighted version of the file whose fullPath ({String}) was passed or with an error if it was not able to parse it opts (see below) callback ({Function}) has the following signature: function (err, highlighted) { .. } opts opts is an {Object} with the following properties: theme {Object} is used to optionally override the theme used to highlight linenos {Boolean} if true line numbers are included in the highlighted code firstline {Integer} sets line number of the first line when line numbers are printed json {Boolean} if true highlights JSON in addition to JavaScript ( true by default if file extension is .json ) Examples ( browse ) sample .cardinalrc highlighting a code snippet via highlight() file that highlights itself via highlightFile() including line numbers file that highlights itself hiding all semicolons via highlightFileSync()","title":"cardinal [![Build Status](https://secure.travis-ci.org/thlorenz/cardinal.png)](http://travis-ci.org/thlorenz/cardinal)"},{"location":"data-science/knime/images/node_modules/cardinal/#cardinal","text":"car\u00b7di\u00b7nal (k\u00e4rdn-l, k\u00e4rdnl) - crested thick-billed North American finch having bright red plumage in the male.","title":"cardinal"},{"location":"data-science/knime/images/node_modules/cardinal/#features","text":"highlights JavaScript code with ANSI colors to improve terminal output theming support, see custom color themes optionally print line numbers API and command line interface ( cdl ) .cardinalrc config to customize settings supports UNIX pipes Table of Contents generated with DocToc Installation As library As Commandline Tool Commandline Highlight a file As part of a UNIX pipe Theme API highlight(code[, opts]) highlightFileSync(fullPath[, opts]) highlightFile(fullPath[, opts], callback) opts Examples ([ browse ](https://github.com/thlorenz/cardinal/tree/master/examples))","title":"Features"},{"location":"data-science/knime/images/node_modules/cardinal/#installation","text":"","title":"Installation"},{"location":"data-science/knime/images/node_modules/cardinal/#as-library","text":"1 npm install cardinal","title":"As library"},{"location":"data-science/knime/images/node_modules/cardinal/#as-commandline-tool","text":"1 [ sudo ] npm install - g cardinal Note: When installed globally, cardinal exposes itself as the cdl command.","title":"As Commandline Tool"},{"location":"data-science/knime/images/node_modules/cardinal/#commandline","text":"","title":"Commandline"},{"location":"data-science/knime/images/node_modules/cardinal/#highlight-a-file","text":"1 cdl < file . js > [ options ] options : - --nonum : turns off line number printing (relevant if it is turned on inside ~/.cardinalrc","title":"Highlight a file"},{"location":"data-science/knime/images/node_modules/cardinal/#as-part-of-a-unix-pipe","text":"1 cat file.js | grep console | cdl Note: Not all code lines may be parsable JavaScript. In these cases the line is printed to the terminal without highlighting it.","title":"As part of a UNIX pipe"},{"location":"data-science/knime/images/node_modules/cardinal/#theme","text":"The default theme will be used for highlighting. To use a different theme, include a .cardinalrc file in your HOME directory. This is a JSON file of the following form: 1 2 3 4 { \"theme\" : \"hide-semicolons\" , \"linenos\" : true | false } theme can be the name of any of the built-in themes or the full path to a custom theme anywhere on your computer. linenos toggles line number printing","title":"Theme"},{"location":"data-science/knime/images/node_modules/cardinal/#api","text":"","title":"API"},{"location":"data-science/knime/images/node_modules/cardinal/#highlightcode-opts","text":"returns the highlighted version of the passed code ({String}) or throws an error if it was not able to parse it opts (see below)","title":"highlight(code[, opts])"},{"location":"data-science/knime/images/node_modules/cardinal/#highlightfilesyncfullpath-opts","text":"returns the highlighted version of the file whose fullPath ({String}) was passed or throws an error if it was not able to parse it opts (see below)","title":"highlightFileSync(fullPath[, opts])"},{"location":"data-science/knime/images/node_modules/cardinal/#highlightfilefullpath-opts-callback","text":"calls back with the highlighted version of the file whose fullPath ({String}) was passed or with an error if it was not able to parse it opts (see below) callback ({Function}) has the following signature: function (err, highlighted) { .. }","title":"highlightFile(fullPath[, opts], callback)"},{"location":"data-science/knime/images/node_modules/cardinal/#opts","text":"opts is an {Object} with the following properties: theme {Object} is used to optionally override the theme used to highlight linenos {Boolean} if true line numbers are included in the highlighted code firstline {Integer} sets line number of the first line when line numbers are printed json {Boolean} if true highlights JSON in addition to JavaScript ( true by default if file extension is .json )","title":"opts"},{"location":"data-science/knime/images/node_modules/cardinal/#examples-browse","text":"sample .cardinalrc highlighting a code snippet via highlight() file that highlights itself via highlightFile() including line numbers file that highlights itself hiding all semicolons via highlightFileSync()","title":"Examples (browse)"},{"location":"data-science/knime/images/node_modules/cardinal/examples/","text":"Cardinal Examples You can run the examples individually or as a demo: install cardinal: npm install cardinal explore cardinal: npm explore cardinal run the demo: npm run demo","title":"Cardinal Examples"},{"location":"data-science/knime/images/node_modules/cardinal/examples/#cardinal-examples","text":"You can run the examples individually or as a demo: install cardinal: npm install cardinal explore cardinal: npm explore cardinal run the demo: npm run demo","title":"Cardinal Examples"},{"location":"data-science/knime/images/node_modules/cardinal/themes/","text":"cardinal themes These are the built in themes that come with cardinal. You can create more themes by copying and then editing the empty theme which is provided for that purpose. The hide semicolons theme has the added benefit of making all semicolons invisible. This makes code more readable at times. Find out how to change the theme used by cardinal here . sharing themes To add your theme to the cardinal built-in themes, follow the below steps: fork the cardinal repository add your theme to the themes folder and commit your changes create a pull request If you believe that your theme is better than the current default theme, let me know by creating an issue. This will allow others to cast their vote. If enough people agree, your theme will be promoted to be the default. Contributed Themes tomorrow night by firede","title":"cardinal themes"},{"location":"data-science/knime/images/node_modules/cardinal/themes/#cardinal-themes","text":"These are the built in themes that come with cardinal. You can create more themes by copying and then editing the empty theme which is provided for that purpose. The hide semicolons theme has the added benefit of making all semicolons invisible. This makes code more readable at times. Find out how to change the theme used by cardinal here .","title":"cardinal themes"},{"location":"data-science/knime/images/node_modules/cardinal/themes/#sharing-themes","text":"To add your theme to the cardinal built-in themes, follow the below steps: fork the cardinal repository add your theme to the themes folder and commit your changes create a pull request If you believe that your theme is better than the current default theme, let me know by creating an issue. This will allow others to cast their vote. If enough people agree, your theme will be promoted to be the default.","title":"sharing themes"},{"location":"data-science/knime/images/node_modules/cardinal/themes/#contributed-themes","text":"","title":"Contributed Themes"},{"location":"data-science/knime/images/node_modules/cardinal/themes/#tomorrow-night","text":"by firede","title":"tomorrow night"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/","text":"concat-stream Writable stream that concatenates all the data from a stream and calls a callback with the result. Use this when you want to collect all the data from a stream into a single buffer. description Streams emit many buffers. If you want to collect all of the buffers, and when the stream ends concatenate all of the buffers together and receive a single buffer then this is the module for you. Only use this if you know you can fit all of the output of your stream into a single Buffer (e.g. in RAM). There are also objectMode streams that emit things other than Buffers, and you can concatenate these too. See below for details. Related concat-stream is part of the mississippi stream utility collection which includes more useful stream modules similar to this one. examples Buffers 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var fs = require ( 'fs' ) var concat = require ( 'concat-stream' ) var readStream = fs . createReadStream ( 'cat.png' ) var concatStream = concat ( gotPicture ) readStream . on ( 'error' , handleError ) readStream . pipe ( concatStream ) function gotPicture ( imageBuffer ) { // imageBuffer is all of `cat.png` as a node.js Buffer } function handleError ( err ) { // handle your error appropriately here, e.g.: console . error ( err ) // print the error to STDERR process . exit ( 1 ) // exit program with non-zero exit code } Arrays 1 2 3 4 5 var write = concat ( function ( data ) {}) write . write ([ 1 , 2 , 3 ]) write . write ([ 4 , 5 , 6 ]) write . end () // data will be [1,2,3,4,5,6] in the above callback Uint8Arrays 1 2 3 4 5 6 var write = concat ( function ( data ) {}) var a = new Uint8Array ( 3 ) a [ 0 ] = 97 ; a [ 1 ] = 98 ; a [ 2 ] = 99 write . write ( a ) write . write ( '!' ) write . end ( Buffer . from ( '!!1' )) See test/ for more examples methods 1 var concat = require ( 'concat-stream' ) var writable = concat(opts={}, cb) Return a writable stream that will fire cb(data) with all of the data that was written to the stream. Data can be written to writable as strings, Buffers, arrays of byte integers, and Uint8Arrays. By default concat-stream will give you back the same data type as the type of the first buffer written to the stream. Use opts.encoding to set what format data should be returned as, e.g. if you if you don't want to rely on the built-in type checking or for some other reason. string - get a string buffer - get back a Buffer array - get an array of byte integers uint8array , u8 , uint8 - get back a Uint8Array object , get back an array of Objects If you don't specify an encoding, and the types can't be inferred (e.g. you write things that aren't in the list above), it will try to convert concat them into a Buffer . If nothing is written to writable then data will be an empty array [] . error handling concat-stream does not handle errors for you, so you must handle errors on whatever streams you pipe into concat-stream . This is a general rule when programming with node.js streams: always handle errors on each and every stream. Since concat-stream is not itself a stream it does not emit errors. We recommend using end-of-stream or pump for writing error tolerant stream code. license MIT LICENSE","title":"concat-stream"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#concat-stream","text":"Writable stream that concatenates all the data from a stream and calls a callback with the result. Use this when you want to collect all the data from a stream into a single buffer.","title":"concat-stream"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#description","text":"Streams emit many buffers. If you want to collect all of the buffers, and when the stream ends concatenate all of the buffers together and receive a single buffer then this is the module for you. Only use this if you know you can fit all of the output of your stream into a single Buffer (e.g. in RAM). There are also objectMode streams that emit things other than Buffers, and you can concatenate these too. See below for details.","title":"description"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#related","text":"concat-stream is part of the mississippi stream utility collection which includes more useful stream modules similar to this one.","title":"Related"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#examples","text":"","title":"examples"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#buffers","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 var fs = require ( 'fs' ) var concat = require ( 'concat-stream' ) var readStream = fs . createReadStream ( 'cat.png' ) var concatStream = concat ( gotPicture ) readStream . on ( 'error' , handleError ) readStream . pipe ( concatStream ) function gotPicture ( imageBuffer ) { // imageBuffer is all of `cat.png` as a node.js Buffer } function handleError ( err ) { // handle your error appropriately here, e.g.: console . error ( err ) // print the error to STDERR process . exit ( 1 ) // exit program with non-zero exit code }","title":"Buffers"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#arrays","text":"1 2 3 4 5 var write = concat ( function ( data ) {}) write . write ([ 1 , 2 , 3 ]) write . write ([ 4 , 5 , 6 ]) write . end () // data will be [1,2,3,4,5,6] in the above callback","title":"Arrays"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#uint8arrays","text":"1 2 3 4 5 6 var write = concat ( function ( data ) {}) var a = new Uint8Array ( 3 ) a [ 0 ] = 97 ; a [ 1 ] = 98 ; a [ 2 ] = 99 write . write ( a ) write . write ( '!' ) write . end ( Buffer . from ( '!!1' )) See test/ for more examples","title":"Uint8Arrays"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#methods","text":"1 var concat = require ( 'concat-stream' )","title":"methods"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#var-writable-concatopts-cb","text":"Return a writable stream that will fire cb(data) with all of the data that was written to the stream. Data can be written to writable as strings, Buffers, arrays of byte integers, and Uint8Arrays. By default concat-stream will give you back the same data type as the type of the first buffer written to the stream. Use opts.encoding to set what format data should be returned as, e.g. if you if you don't want to rely on the built-in type checking or for some other reason. string - get a string buffer - get back a Buffer array - get an array of byte integers uint8array , u8 , uint8 - get back a Uint8Array object , get back an array of Objects If you don't specify an encoding, and the types can't be inferred (e.g. you write things that aren't in the list above), it will try to convert concat them into a Buffer . If nothing is written to writable then data will be an empty array [] .","title":"var writable = concat(opts={}, cb)"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#error-handling","text":"concat-stream does not handle errors for you, so you must handle errors on whatever streams you pipe into concat-stream . This is a general rule when programming with node.js streams: always handle errors on each and every stream. Since concat-stream is not itself a stream it does not emit errors. We recommend using end-of-stream or pump for writing error tolerant stream code.","title":"error handling"},{"location":"data-science/knime/images/node_modules/concat-stream/readme/#license","text":"MIT LICENSE","title":"license"},{"location":"data-science/knime/images/node_modules/core-util-is/","text":"core-util-is The util.is* functions introduced in Node v0.12.","title":"core-util-is"},{"location":"data-science/knime/images/node_modules/core-util-is/#core-util-is","text":"The util.is* functions introduced in Node v0.12.","title":"core-util-is"},{"location":"data-science/knime/images/node_modules/earcut/","text":"Earcut The fastest and smallest JavaScript polygon triangulation library. 2.5KB gzipped. The algorithm The library implements a modified ear slicing algorithm, optimized by z-order curve hashing and extended to handle holes, twisted polygons, degeneracies and self-intersections in a way that doesn't guarantee correctness of triangulation, but attempts to always produce acceptable results for practical data. It's based on ideas from FIST: Fast Industrial-Strength Triangulation of Polygons by Martin Held and Triangulation by Ear Clipping by David Eberly. Why another triangulation library? The aim of this project is to create a JS triangulation library that is fast enough for real-time triangulation in the browser , sacrificing triangulation quality for raw speed and simplicity, while being robust enough to handle most practical datasets without crashing or producing garbage. Some benchmarks using Node 0.12: (ops/sec) pts earcut libtess poly2tri pnltri polyk OSM building 15 795,935 50,640 61,501 122,966 175,570 dude shape 94 35,658 10,339 8,784 11,172 13,557 holed dude shape 104 28,319 8,883 7,494 2,130 n/a complex OSM water 2523 543 77.54 failure failure n/a huge OSM water 5667 95 29.30 failure failure n/a The original use case it was created for is Mapbox GL , WebGL-based interactive maps. If you want to get correct triangulation even on very bad data with lots of self-intersections and earcut is not precise enough, take a look at libtess.js . Usage 1 var triangles = earcut ([ 10 , 0 , 0 , 50 , 60 , 60 , 70 , 10 ]); // returns [1,0,3, 3,2,1] Signature: earcut(vertices[, holes, dimensions = 2]) . vertices is a flat array of vertex coordinates like [x0,y0, x1,y1, x2,y2, ...] . holes is an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean one hole with vertices 5\u20137 and another with 8\u201311). dimensions is the number of coordinates per vertex in the input array ( 2 by default). Each group of three vertex indices in the resulting array forms a triangle. 1 2 3 4 5 6 7 // triangulating a polygon with a hole earcut ([ 0 , 0 , 100 , 0 , 100 , 100 , 0 , 100 , 20 , 20 , 80 , 20 , 80 , 80 , 20 , 80 ], [ 4 ]); // [3,0,4, 5,4,0, 3,4,7, 5,0,1, 2,3,7, 6,5,1, 2,7,6, 6,1,2] // triangulating a polygon with 3d coords earcut ([ 10 , 0 , 1 , 0 , 50 , 2 , 60 , 60 , 3 , 70 , 10 , 4 ], null , 3 ); // [1,0,3, 3,2,1] If you pass a single vertex as a hole, Earcut treats it as a Steiner point. If your input is a multi-dimensional array (e.g. GeoJSON Polygon ), you can convert it to the format expected by Earcut with earcut.flatten : 1 2 var data = earcut . flatten ( geojson . geometry . coordinates ); var triangles = earcut ( data . vertices , data . holes , data . dimensions ); After getting a triangulation, you can verify its correctness with earcut.deviation : 1 var deviation = earcut . deviation ( vertices , holes , dimensions , triangles ); Returns the relative difference between the total area of triangles and the area of the input polygon. 0 means the triangulation is fully correct. Install NPM and Browserify: 1 npm install earcut Browser builds on CDN: development build minified production build Running tests: 1 npm test Ports to other languages mapbox/earcut.hpp (C++11) Cawfree/earcut-j (Java, outdated) Changelog 2.2.1 (Sep 19, 2019) Fixed another rare case with touching holes. 2.2.0 (Sep 18, 2019) Fixed a handful of rare race conditions. 2.1.5 (Feb 5, 2019) Fixed a race condition with coincident holes that could lead to bad triangulation. 2.1.4 (Dec 4, 2018) Fixed a race condition that could lead to a freeze on degenerate input. 2.1.3 (Jan 4, 2018) Improved performance for bigger inputs (5-12%). 2.1.2 (Oct 23, 2017) Fixed a few race conditions where bad input would cause an error. 2.1.1 (Mar 17, 2016) Fixed a rare race condition where the split routine would choose bad diagonals. Fixed a rare race condition in the \"cure local intersections\" routine. Fixed a rare race condition where a hole that shares a point with the outer ring would be handled incorrectly. Fixed a bug where a closing point wouldn't be filtered as duplicate, sometimes breaking triangulation. 2.1.0 (Mar 11, 2016) Added earcut.deviation function for verifying correctness of triangulation. Added earcut.flatten function for converting GeoJSON-like input into a format Earcut expects. 2.0.9 (Mar 10, 2016) Fixed a rare race condition where a hole would be handled incorrectly. 2.0.8 (Jan 19, 2016) Fixed a rare race condition with a hole touching outer ring. 2.0.7 (Nov 18, 2015) Changed the algorithm to avoid filtering colinear/duplicate vertices unless it can't triangulate the polygon otherwise. Improves performance on simpler shapes and fixes some 3D use cases. 2.0.6 (Oct 26, 2015) Improved robustness and reliability of the triangulation algorithm. Improved performance by up to 15%. Significantly improved source code clarity. 2.0.5 (Oct 12, 2015) Fixed a z-curve hashing bug that could lead to unexpected results in very rare cases involving shapes with lots of points. 2.0.4 (Oct 8, 2015) Fixed one more extremely rare race condition, lol! 2.0.3 (Oct 8, 2015) Fixed yet another rare race condition (multiple holes connected with colinear bridges). Fixed crash on empty input. 2.0.2 (Jul 8, 2015) Fixed one more rare race condition with a holed polygon. 2.0.1 (May 11, 2015) Added Steiner points support. 2.0.0 (Apr 30, 2015) Breaking : changed the API to accept a flat input array of vertices with hole indices and return triangle indices. It makes the indexed output much faster than it was before (up to 30%) and improves memory footprint. 1.4.2 (Mar 18, 2015) Fixed another rare edge case with a tiny hole in a huge polygon. 1.4.1 (Mar 17, 2015) Fixed a rare edge case that led to incomplete triangulation. 1.4.0 (Mar 9, 2015) Fixed indexed output to produce indices not multiplied by dimension and work with any number of dimensions. 1.3.0 (Feb 24, 2015) Added a second argument to earcut that switches output format to flat vertex and index arrays if set to true . 1.2.3 (Feb 10, 2015) Improved performance (especially on recent v8) by avoiding Array push with multiple arguments. 1.2.2 (Jan 27, 2015) Significantly improved performance for polygons with self-intersections (e.g. big OSM water polygons are now handled 2-3x faster) 1.2.1 (Jan 26, 2015) Significantly improved performance on polygons with high number of vertices by using z-order curve hashing for vertex lookup. Slightly improved overall performance with better point filtering. 1.1.0 (Jan 21, 2015) Improved performance on polygons with holes by switching from Held to Eberly hole elimination algorithm More robustness fixes and tests 1.0.1 \u2014 1.0.6 (Jan 20, 2015) Various robustness improvements and fixes. 1.0.0 (Jan 18, 2015) Initial release.","title":"Index"},{"location":"data-science/knime/images/node_modules/earcut/#earcut","text":"The fastest and smallest JavaScript polygon triangulation library. 2.5KB gzipped.","title":"Earcut"},{"location":"data-science/knime/images/node_modules/earcut/#the-algorithm","text":"The library implements a modified ear slicing algorithm, optimized by z-order curve hashing and extended to handle holes, twisted polygons, degeneracies and self-intersections in a way that doesn't guarantee correctness of triangulation, but attempts to always produce acceptable results for practical data. It's based on ideas from FIST: Fast Industrial-Strength Triangulation of Polygons by Martin Held and Triangulation by Ear Clipping by David Eberly.","title":"The algorithm"},{"location":"data-science/knime/images/node_modules/earcut/#why-another-triangulation-library","text":"The aim of this project is to create a JS triangulation library that is fast enough for real-time triangulation in the browser , sacrificing triangulation quality for raw speed and simplicity, while being robust enough to handle most practical datasets without crashing or producing garbage. Some benchmarks using Node 0.12: (ops/sec) pts earcut libtess poly2tri pnltri polyk OSM building 15 795,935 50,640 61,501 122,966 175,570 dude shape 94 35,658 10,339 8,784 11,172 13,557 holed dude shape 104 28,319 8,883 7,494 2,130 n/a complex OSM water 2523 543 77.54 failure failure n/a huge OSM water 5667 95 29.30 failure failure n/a The original use case it was created for is Mapbox GL , WebGL-based interactive maps. If you want to get correct triangulation even on very bad data with lots of self-intersections and earcut is not precise enough, take a look at libtess.js .","title":"Why another triangulation library?"},{"location":"data-science/knime/images/node_modules/earcut/#usage","text":"1 var triangles = earcut ([ 10 , 0 , 0 , 50 , 60 , 60 , 70 , 10 ]); // returns [1,0,3, 3,2,1] Signature: earcut(vertices[, holes, dimensions = 2]) . vertices is a flat array of vertex coordinates like [x0,y0, x1,y1, x2,y2, ...] . holes is an array of hole indices if any (e.g. [5, 8] for a 12-vertex input would mean one hole with vertices 5\u20137 and another with 8\u201311). dimensions is the number of coordinates per vertex in the input array ( 2 by default). Each group of three vertex indices in the resulting array forms a triangle. 1 2 3 4 5 6 7 // triangulating a polygon with a hole earcut ([ 0 , 0 , 100 , 0 , 100 , 100 , 0 , 100 , 20 , 20 , 80 , 20 , 80 , 80 , 20 , 80 ], [ 4 ]); // [3,0,4, 5,4,0, 3,4,7, 5,0,1, 2,3,7, 6,5,1, 2,7,6, 6,1,2] // triangulating a polygon with 3d coords earcut ([ 10 , 0 , 1 , 0 , 50 , 2 , 60 , 60 , 3 , 70 , 10 , 4 ], null , 3 ); // [1,0,3, 3,2,1] If you pass a single vertex as a hole, Earcut treats it as a Steiner point. If your input is a multi-dimensional array (e.g. GeoJSON Polygon ), you can convert it to the format expected by Earcut with earcut.flatten : 1 2 var data = earcut . flatten ( geojson . geometry . coordinates ); var triangles = earcut ( data . vertices , data . holes , data . dimensions ); After getting a triangulation, you can verify its correctness with earcut.deviation : 1 var deviation = earcut . deviation ( vertices , holes , dimensions , triangles ); Returns the relative difference between the total area of triangles and the area of the input polygon. 0 means the triangulation is fully correct.","title":"Usage"},{"location":"data-science/knime/images/node_modules/earcut/#install","text":"NPM and Browserify: 1 npm install earcut Browser builds on CDN: development build minified production build Running tests: 1 npm test","title":"Install"},{"location":"data-science/knime/images/node_modules/earcut/#ports-to-other-languages","text":"mapbox/earcut.hpp (C++11) Cawfree/earcut-j (Java, outdated)","title":"Ports to other languages"},{"location":"data-science/knime/images/node_modules/earcut/#changelog","text":"","title":"Changelog"},{"location":"data-science/knime/images/node_modules/earcut/#221-sep-19-2019","text":"Fixed another rare case with touching holes.","title":"2.2.1 (Sep 19, 2019)"},{"location":"data-science/knime/images/node_modules/earcut/#220-sep-18-2019","text":"Fixed a handful of rare race conditions.","title":"2.2.0 (Sep 18, 2019)"},{"location":"data-science/knime/images/node_modules/earcut/#215-feb-5-2019","text":"Fixed a race condition with coincident holes that could lead to bad triangulation.","title":"2.1.5 (Feb 5, 2019)"},{"location":"data-science/knime/images/node_modules/earcut/#214-dec-4-2018","text":"Fixed a race condition that could lead to a freeze on degenerate input.","title":"2.1.4 (Dec 4, 2018)"},{"location":"data-science/knime/images/node_modules/earcut/#213-jan-4-2018","text":"Improved performance for bigger inputs (5-12%).","title":"2.1.3 (Jan 4, 2018)"},{"location":"data-science/knime/images/node_modules/earcut/#212-oct-23-2017","text":"Fixed a few race conditions where bad input would cause an error.","title":"2.1.2 (Oct 23, 2017)"},{"location":"data-science/knime/images/node_modules/earcut/#211-mar-17-2016","text":"Fixed a rare race condition where the split routine would choose bad diagonals. Fixed a rare race condition in the \"cure local intersections\" routine. Fixed a rare race condition where a hole that shares a point with the outer ring would be handled incorrectly. Fixed a bug where a closing point wouldn't be filtered as duplicate, sometimes breaking triangulation.","title":"2.1.1 (Mar 17, 2016)"},{"location":"data-science/knime/images/node_modules/earcut/#210-mar-11-2016","text":"Added earcut.deviation function for verifying correctness of triangulation. Added earcut.flatten function for converting GeoJSON-like input into a format Earcut expects.","title":"2.1.0 (Mar 11, 2016)"},{"location":"data-science/knime/images/node_modules/earcut/#209-mar-10-2016","text":"Fixed a rare race condition where a hole would be handled incorrectly.","title":"2.0.9 (Mar 10, 2016)"},{"location":"data-science/knime/images/node_modules/earcut/#208-jan-19-2016","text":"Fixed a rare race condition with a hole touching outer ring.","title":"2.0.8 (Jan 19, 2016)"},{"location":"data-science/knime/images/node_modules/earcut/#207-nov-18-2015","text":"Changed the algorithm to avoid filtering colinear/duplicate vertices unless it can't triangulate the polygon otherwise. Improves performance on simpler shapes and fixes some 3D use cases.","title":"2.0.7 (Nov 18, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#206-oct-26-2015","text":"Improved robustness and reliability of the triangulation algorithm. Improved performance by up to 15%. Significantly improved source code clarity.","title":"2.0.6 (Oct 26, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#205-oct-12-2015","text":"Fixed a z-curve hashing bug that could lead to unexpected results in very rare cases involving shapes with lots of points.","title":"2.0.5 (Oct 12, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#204-oct-8-2015","text":"Fixed one more extremely rare race condition, lol!","title":"2.0.4 (Oct 8, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#203-oct-8-2015","text":"Fixed yet another rare race condition (multiple holes connected with colinear bridges). Fixed crash on empty input.","title":"2.0.3 (Oct 8, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#202-jul-8-2015","text":"Fixed one more rare race condition with a holed polygon.","title":"2.0.2 (Jul 8, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#201-may-11-2015","text":"Added Steiner points support.","title":"2.0.1 (May 11, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#200-apr-30-2015","text":"Breaking : changed the API to accept a flat input array of vertices with hole indices and return triangle indices. It makes the indexed output much faster than it was before (up to 30%) and improves memory footprint.","title":"2.0.0 (Apr 30, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#142-mar-18-2015","text":"Fixed another rare edge case with a tiny hole in a huge polygon.","title":"1.4.2 (Mar 18, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#141-mar-17-2015","text":"Fixed a rare edge case that led to incomplete triangulation.","title":"1.4.1 (Mar 17, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#140-mar-9-2015","text":"Fixed indexed output to produce indices not multiplied by dimension and work with any number of dimensions.","title":"1.4.0 (Mar 9, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#130-feb-24-2015","text":"Added a second argument to earcut that switches output format to flat vertex and index arrays if set to true .","title":"1.3.0 (Feb 24, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#123-feb-10-2015","text":"Improved performance (especially on recent v8) by avoiding Array push with multiple arguments.","title":"1.2.3 (Feb 10, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#122-jan-27-2015","text":"Significantly improved performance for polygons with self-intersections (e.g. big OSM water polygons are now handled 2-3x faster)","title":"1.2.2 (Jan 27, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#121-jan-26-2015","text":"Significantly improved performance on polygons with high number of vertices by using z-order curve hashing for vertex lookup. Slightly improved overall performance with better point filtering.","title":"1.2.1 (Jan 26, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#110-jan-21-2015","text":"Improved performance on polygons with holes by switching from Held to Eberly hole elimination algorithm More robustness fixes and tests","title":"1.1.0 (Jan 21, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#101-106-jan-20-2015","text":"Various robustness improvements and fixes.","title":"1.0.1 &mdash; 1.0.6 (Jan 20, 2015)"},{"location":"data-science/knime/images/node_modules/earcut/#100-jan-18-2015","text":"Initial release.","title":"1.0.0 (Jan 18, 2015)"},{"location":"data-science/knime/images/node_modules/esprima/","text":"Esprima ( esprima.org ) is a high performance, standard-compliant ECMAScript parser written in ECMAScript (also popularly known as JavaScript ). Esprima is created and maintained by Ariya Hidayat , with the help of many contributors . Esprima runs on web browsers (IE 6+, Firefox 1+, Safari 3+, Chrome 1+, Konqueror 4.6+, Opera 8+) as well as Node.js . Features Full support for ECMAScript 5.1 (ECMA-262) Sensible syntax tree format compatible with Mozilla Parser AST Heavily tested (> 550 unit tests with solid 100% statement coverage) Optional tracking of syntax node location (index-based and line-column) Experimental support for ES6/Harmony (module, class, destructuring, ...) Esprima is blazing fast (see the benchmark suite ). It is up to 3x faster than UglifyJS v1 and it is still competitive with the new generation of fast parsers. Applications Esprima serves as the basis for many popular JavaScript development tools: Code coverage analysis: node-cover , Istanbul Documentation tool: JFDoc , JSDuck Language extension: LLJS (low-level JS), Sweet.js (macro) ES6/Harmony transpiler: Six , Harmonizr Eclipse Orion smart editing ( outline view , content assist ) Source code modification: Esmorph , Code Painter , Source transformation: node-falafel , Esmangle , escodegen Questions? Documentation Issue tracker : known problems and future plans Mailing list Contribution guide Follow @Esprima on Twitter to get the development updates. Feedback and contribution are welcomed! License Copyright (C) 2012, 2011 Ariya Hidayat and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Index"},{"location":"data-science/knime/images/node_modules/esprima/#features","text":"Full support for ECMAScript 5.1 (ECMA-262) Sensible syntax tree format compatible with Mozilla Parser AST Heavily tested (> 550 unit tests with solid 100% statement coverage) Optional tracking of syntax node location (index-based and line-column) Experimental support for ES6/Harmony (module, class, destructuring, ...) Esprima is blazing fast (see the benchmark suite ). It is up to 3x faster than UglifyJS v1 and it is still competitive with the new generation of fast parsers.","title":"Features"},{"location":"data-science/knime/images/node_modules/esprima/#applications","text":"Esprima serves as the basis for many popular JavaScript development tools: Code coverage analysis: node-cover , Istanbul Documentation tool: JFDoc , JSDuck Language extension: LLJS (low-level JS), Sweet.js (macro) ES6/Harmony transpiler: Six , Harmonizr Eclipse Orion smart editing ( outline view , content assist ) Source code modification: Esmorph , Code Painter , Source transformation: node-falafel , Esmangle , escodegen","title":"Applications"},{"location":"data-science/knime/images/node_modules/esprima/#questions","text":"Documentation Issue tracker : known problems and future plans Mailing list Contribution guide Follow @Esprima on Twitter to get the development updates. Feedback and contribution are welcomed!","title":"Questions?"},{"location":"data-science/knime/images/node_modules/esprima/#license","text":"Copyright (C) 2012, 2011 Ariya Hidayat and other contributors. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"data-science/knime/images/node_modules/geojson-vt/","text":"geojson-vt \u2014 GeoJSON Vector Tiles A highly efficient JavaScript library for slicing GeoJSON data into vector tiles on the fly , primarily designed to enable rendering and interacting with large geospatial datasets on the browser side (without a server). Created to power GeoJSON in Mapbox GL JS , but can be useful in other visualization platforms like Leaflet and d3 , as well as Node.js server applications. Resulting tiles conform to the JSON equivalent of the vector tile specification . To make data rendering and interaction fast, the tiles are simplified, retaining the minimum level of detail appropriate for each zoom level (simplifying shapes, filtering out tiny polygons and polylines). Read more on how the library works on the Mapbox blog . There's a C++11 port: geojson-vt-cpp Demo Here's geojson-vt action in Mapbox GL JS , dynamically loading a 100Mb US zip codes GeoJSON with 5.4 million points: There's a convenient debug page to test out geojson-vt on different data. Just drag any GeoJSON on the page, watching the console. Usage 1 2 3 4 5 6 7 8 // build an initial index of tiles var tileIndex = geojsonvt ( geoJSON ); // request a particular tile var features = tileIndex . getTile ( z , x , y ). features ; // show an array of tile coordinates created so far console . log ( tileIndex . tileCoords ); // [{z: 0, x: 0, y: 0}, ...] Options You can fine-tune the results with an options object, although the defaults are sensible and work well for most use cases. 1 2 3 4 5 6 7 8 9 10 11 12 var tileIndex = geojsonvt ( data , { maxZoom : 14 , // max zoom to preserve detail on; can't be higher than 24 tolerance : 3 , // simplification tolerance (higher means simpler) extent : 4096 , // tile extent (both width and height) buffer : 64 , // tile buffer on each side debug : 0 , // logging level (0 to disable, 1 or 2) lineMetrics : false , // whether to enable line metrics tracking for LineString/MultiLineString features promoteId : null , // name of a feature property to promote to feature.id. Cannot be used with `generateId` generateId : false , // whether to generate feature ids. Cannot be used with `promoteId` indexMaxZoom : 5 , // max zoom in the initial tile index indexMaxPoints : 100000 // max number of points per tile in the index }); By default, tiles at zoom levels above indexMaxZoom are generated on the fly, but you can pre-generate all possible tiles for data by setting indexMaxZoom and maxZoom to the same value, setting indexMaxPoints to 0 , and then accessing the resulting tile coordinates from the tileCoords property of tileIndex . The promoteId and generateId options ignore existing id values on the feature objects. GeoJSON-VT only operates on zoom levels up to 24. Install Install using NPM ( npm install geojson-vt ) or Yarn ( yarn add geojson-vt ), then: 1 2 3 4 5 // import as a ES module import geojsonvt from 'geojson-vt' ; // or require in Node / Browserify const geojsonvt = require ( 'geojson-vt' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/geojson-vt@3.2.0/geojson-vt.js\" ></ script >","title":"Index"},{"location":"data-science/knime/images/node_modules/geojson-vt/#geojson-vt-geojson-vector-tiles","text":"A highly efficient JavaScript library for slicing GeoJSON data into vector tiles on the fly , primarily designed to enable rendering and interacting with large geospatial datasets on the browser side (without a server). Created to power GeoJSON in Mapbox GL JS , but can be useful in other visualization platforms like Leaflet and d3 , as well as Node.js server applications. Resulting tiles conform to the JSON equivalent of the vector tile specification . To make data rendering and interaction fast, the tiles are simplified, retaining the minimum level of detail appropriate for each zoom level (simplifying shapes, filtering out tiny polygons and polylines). Read more on how the library works on the Mapbox blog . There's a C++11 port: geojson-vt-cpp","title":"geojson-vt &mdash; GeoJSON Vector Tiles"},{"location":"data-science/knime/images/node_modules/geojson-vt/#demo","text":"Here's geojson-vt action in Mapbox GL JS , dynamically loading a 100Mb US zip codes GeoJSON with 5.4 million points: There's a convenient debug page to test out geojson-vt on different data. Just drag any GeoJSON on the page, watching the console.","title":"Demo"},{"location":"data-science/knime/images/node_modules/geojson-vt/#usage","text":"1 2 3 4 5 6 7 8 // build an initial index of tiles var tileIndex = geojsonvt ( geoJSON ); // request a particular tile var features = tileIndex . getTile ( z , x , y ). features ; // show an array of tile coordinates created so far console . log ( tileIndex . tileCoords ); // [{z: 0, x: 0, y: 0}, ...]","title":"Usage"},{"location":"data-science/knime/images/node_modules/geojson-vt/#options","text":"You can fine-tune the results with an options object, although the defaults are sensible and work well for most use cases. 1 2 3 4 5 6 7 8 9 10 11 12 var tileIndex = geojsonvt ( data , { maxZoom : 14 , // max zoom to preserve detail on; can't be higher than 24 tolerance : 3 , // simplification tolerance (higher means simpler) extent : 4096 , // tile extent (both width and height) buffer : 64 , // tile buffer on each side debug : 0 , // logging level (0 to disable, 1 or 2) lineMetrics : false , // whether to enable line metrics tracking for LineString/MultiLineString features promoteId : null , // name of a feature property to promote to feature.id. Cannot be used with `generateId` generateId : false , // whether to generate feature ids. Cannot be used with `promoteId` indexMaxZoom : 5 , // max zoom in the initial tile index indexMaxPoints : 100000 // max number of points per tile in the index }); By default, tiles at zoom levels above indexMaxZoom are generated on the fly, but you can pre-generate all possible tiles for data by setting indexMaxZoom and maxZoom to the same value, setting indexMaxPoints to 0 , and then accessing the resulting tile coordinates from the tileCoords property of tileIndex . The promoteId and generateId options ignore existing id values on the feature objects. GeoJSON-VT only operates on zoom levels up to 24.","title":"Options"},{"location":"data-science/knime/images/node_modules/geojson-vt/#install","text":"Install using NPM ( npm install geojson-vt ) or Yarn ( yarn add geojson-vt ), then: 1 2 3 4 5 // import as a ES module import geojsonvt from 'geojson-vt' ; // or require in Node / Browserify const geojsonvt = require ( 'geojson-vt' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/geojson-vt@3.2.0/geojson-vt.js\" ></ script >","title":"Install"},{"location":"data-science/knime/images/node_modules/gl-matrix/","text":"glMatrix Javascript has evolved into a language capable of handling realtime 3D graphics, via WebGL, and computationally intensive tasks such as physics simulations. These types of applications demand high performance vector and matrix math, which is something that Javascript doesn't provide by default. glMatrix to the rescue! glMatrix is designed to perform vector and matrix operations stupidly fast! By hand-tuning each function for maximum performance and encouraging efficient usage patterns through API conventions, glMatrix will help you get the most out of your browsers Javascript engine. Learn More For documentation and news, visit the glMatrix Homepage For a tutorial, see the \"introducing glMatrix\" section of Introduction to Computer Graphics by David J. Eck For a babel plugin to make writing the API nicer, see babel-plugin-transfrom-gl-matrix Regarding the current performance in modern web browsers, calling glMatrix.setMatrixArrayType(Array) to use normal arrays instead of Float32Arrays can greatly increase the performance. Contributing Guidelines See CONTRIBUTING.md Building See BUILDING.md","title":"Index"},{"location":"data-science/knime/images/node_modules/gl-matrix/#glmatrix","text":"Javascript has evolved into a language capable of handling realtime 3D graphics, via WebGL, and computationally intensive tasks such as physics simulations. These types of applications demand high performance vector and matrix math, which is something that Javascript doesn't provide by default. glMatrix to the rescue! glMatrix is designed to perform vector and matrix operations stupidly fast! By hand-tuning each function for maximum performance and encouraging efficient usage patterns through API conventions, glMatrix will help you get the most out of your browsers Javascript engine.","title":"glMatrix"},{"location":"data-science/knime/images/node_modules/gl-matrix/#learn-more","text":"For documentation and news, visit the glMatrix Homepage For a tutorial, see the \"introducing glMatrix\" section of Introduction to Computer Graphics by David J. Eck For a babel plugin to make writing the API nicer, see babel-plugin-transfrom-gl-matrix Regarding the current performance in modern web browsers, calling glMatrix.setMatrixArrayType(Array) to use normal arrays instead of Float32Arrays can greatly increase the performance.","title":"Learn More"},{"location":"data-science/knime/images/node_modules/gl-matrix/#contributing-guidelines","text":"See CONTRIBUTING.md","title":"Contributing Guidelines"},{"location":"data-science/knime/images/node_modules/gl-matrix/#building","text":"See BUILDING.md","title":"Building"},{"location":"data-science/knime/images/node_modules/gl-matrix/LICENSE/","text":"Copyright (c) 2015-2020, Brandon Jones, Colin MacKenzie IV. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"data-science/knime/images/node_modules/grid-index/","text":"grid-index GridIndex is a 2D spatial index that is transferable . Pairs of keys and boxes can be inserted into GridIndex. The grid can then be queried to find all the keys that intersect a given box. The grid can be serialized to an ArrayBuffer so that it can be transferred between WebWorkers. You should probably use rbush instead of GridIndex! It's easier to use and it's as fast or faster in many cases. GridIndex can be faster in a specific set of cases: - the constructed index needs to be transferred between workers - the extent of the features is fixed - features are somewhat evenly sized and distributed - a high number of insertions relative to the number of queries GridIndex is used by mapbox-gl-js for label collision detection and feature picking. Example 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var GridIndex = require ( 'grid-index' ); var grid = new GridIndex ( 100 , 5 , 0 ); var key1 = 1 ; var key2 = 2 ; var key3 = 3 ; grid . insert ( key1 , 30 , 10 , 35 , 15 ); grid . insert ( key2 , 60 , 20 , 65 , 25 ); grid . insert ( key3 , 40 , 10 , 45 , 15 ); var keys = grid . query ( 0 , 0 , 100 , 13 ); // `keys` is now [key1, key3] var arrayBuffer = grid . toArrayBuffer (); // transfer the ArrayBuffer to a different worker var grid2 = new GridIndex ( arrayBuffer ); var keys2 = grid2 . query ( 0 , 0 , 100 , 13 ); // `keys2` is now [key1, key3] API GridIndex(extent, n, padding) Create a new GridIndex. extent : The width and height of the square area that needs to be indexed, for example 4096 . n : The rows and columns the grid will be split into. 4 would divide the grid into 16 cells. padding : The number of extra rows and columns that should be added on each side of the main grid square. GridIndex(arrayBuffer) Unserialize a GridIndex. arrayBuffer : an ArrayBuffer produced by gridIndex.toArrayBuffer() . gridIndex.insert(key, x1, y1, x2, y2) Insert a new key, box pair into the grid. key : An unsigned 32bit integer. x1 : The x coordinate of the left edge of the box. y1 : The y coordinate of the bottom edge of the box. x2 : The x coordinate of the right edge of the box. y2 : The y coordinate of the top edge of the box. gridIndex.query(key, x1, y1, x2, y2, intersectionTest?) Find the keys that intersect with the given box. x1 : The x coordinate of the left edge of the box. y1 : The y coordinate of the bottom edge of the box. x2 : The x coordinate of the right edge of the box. y2 : The y coordinate of the top edge of the box. intersectionTest : An optional function that can be used to filter results by bbox. If provided, this function is called for each possible result with four arguments: x1, y1, x2, y2. Return true to include the result in the returned value. returns an array of keys. gridIndex.toArrayBuffer() Serialize a GridIndex to an ArrayBuffer so that it can be transferred between WebWorkers efficiently. returns an ArrayBuffer that can later be deserialized with new GridIndex(arrayBuffer) .","title":"grid-index"},{"location":"data-science/knime/images/node_modules/grid-index/#grid-index","text":"GridIndex is a 2D spatial index that is transferable . Pairs of keys and boxes can be inserted into GridIndex. The grid can then be queried to find all the keys that intersect a given box. The grid can be serialized to an ArrayBuffer so that it can be transferred between WebWorkers. You should probably use rbush instead of GridIndex! It's easier to use and it's as fast or faster in many cases. GridIndex can be faster in a specific set of cases: - the constructed index needs to be transferred between workers - the extent of the features is fixed - features are somewhat evenly sized and distributed - a high number of insertions relative to the number of queries GridIndex is used by mapbox-gl-js for label collision detection and feature picking.","title":"grid-index"},{"location":"data-science/knime/images/node_modules/grid-index/#example","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 var GridIndex = require ( 'grid-index' ); var grid = new GridIndex ( 100 , 5 , 0 ); var key1 = 1 ; var key2 = 2 ; var key3 = 3 ; grid . insert ( key1 , 30 , 10 , 35 , 15 ); grid . insert ( key2 , 60 , 20 , 65 , 25 ); grid . insert ( key3 , 40 , 10 , 45 , 15 ); var keys = grid . query ( 0 , 0 , 100 , 13 ); // `keys` is now [key1, key3] var arrayBuffer = grid . toArrayBuffer (); // transfer the ArrayBuffer to a different worker var grid2 = new GridIndex ( arrayBuffer ); var keys2 = grid2 . query ( 0 , 0 , 100 , 13 ); // `keys2` is now [key1, key3]","title":"Example"},{"location":"data-science/knime/images/node_modules/grid-index/#api","text":"","title":"API"},{"location":"data-science/knime/images/node_modules/grid-index/#gridindexextent-n-padding","text":"Create a new GridIndex. extent : The width and height of the square area that needs to be indexed, for example 4096 . n : The rows and columns the grid will be split into. 4 would divide the grid into 16 cells. padding : The number of extra rows and columns that should be added on each side of the main grid square.","title":"GridIndex(extent, n, padding)"},{"location":"data-science/knime/images/node_modules/grid-index/#gridindexarraybuffer","text":"Unserialize a GridIndex. arrayBuffer : an ArrayBuffer produced by gridIndex.toArrayBuffer() .","title":"GridIndex(arrayBuffer)"},{"location":"data-science/knime/images/node_modules/grid-index/#gridindexinsertkey-x1-y1-x2-y2","text":"Insert a new key, box pair into the grid. key : An unsigned 32bit integer. x1 : The x coordinate of the left edge of the box. y1 : The y coordinate of the bottom edge of the box. x2 : The x coordinate of the right edge of the box. y2 : The y coordinate of the top edge of the box.","title":"gridIndex.insert(key, x1, y1, x2, y2)"},{"location":"data-science/knime/images/node_modules/grid-index/#gridindexquerykey-x1-y1-x2-y2-intersectiontest","text":"Find the keys that intersect with the given box. x1 : The x coordinate of the left edge of the box. y1 : The y coordinate of the bottom edge of the box. x2 : The x coordinate of the right edge of the box. y2 : The y coordinate of the top edge of the box. intersectionTest : An optional function that can be used to filter results by bbox. If provided, this function is called for each possible result with four arguments: x1, y1, x2, y2. Return true to include the result in the returned value. returns an array of keys.","title":"gridIndex.query(key, x1, y1, x2, y2, intersectionTest?)"},{"location":"data-science/knime/images/node_modules/grid-index/#gridindextoarraybuffer","text":"Serialize a GridIndex to an ArrayBuffer so that it can be transferred between WebWorkers efficiently. returns an ArrayBuffer that can later be deserialized with new GridIndex(arrayBuffer) .","title":"gridIndex.toArrayBuffer()"},{"location":"data-science/knime/images/node_modules/ieee754/","text":"ieee754 Read/write IEEE754 floating point numbers from/to a Buffer or array-like object. install 1 npm install ieee754 Get supported ieee754 with the Tidelift Subscription methods var ieee754 = require('ieee754') The ieee754 object has the following functions: 1 2 ieee754.read = function (buffer, offset, isLE, mLen, nBytes) ieee754.write = function (buffer, value, offset, isLE, mLen, nBytes) The arguments mean the following: buffer = the buffer offset = offset into the buffer value = value to set (only for write ) isLe = is little endian? mLen = mantissa length nBytes = number of bytes what is ieee754? The IEEE Standard for Floating-Point Arithmetic (IEEE 754) is a technical standard for floating-point computation. Read more . license BSD 3 Clause. Copyright (c) 2008, Fair Oaks Labs, Inc.","title":"ieee754 [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]"},{"location":"data-science/knime/images/node_modules/ieee754/#ieee754","text":"","title":"ieee754"},{"location":"data-science/knime/images/node_modules/ieee754/#readwrite-ieee754-floating-point-numbers-fromto-a-buffer-or-array-like-object","text":"","title":"Read/write IEEE754 floating point numbers from/to a Buffer or array-like object."},{"location":"data-science/knime/images/node_modules/ieee754/#install","text":"1 npm install ieee754 Get supported ieee754 with the Tidelift Subscription","title":"install"},{"location":"data-science/knime/images/node_modules/ieee754/#methods","text":"var ieee754 = require('ieee754') The ieee754 object has the following functions: 1 2 ieee754.read = function (buffer, offset, isLE, mLen, nBytes) ieee754.write = function (buffer, value, offset, isLE, mLen, nBytes) The arguments mean the following: buffer = the buffer offset = offset into the buffer value = value to set (only for write ) isLe = is little endian? mLen = mantissa length nBytes = number of bytes","title":"methods"},{"location":"data-science/knime/images/node_modules/ieee754/#what-is-ieee754","text":"The IEEE Standard for Floating-Point Arithmetic (IEEE 754) is a technical standard for floating-point computation. Read more .","title":"what is ieee754?"},{"location":"data-science/knime/images/node_modules/ieee754/#license","text":"BSD 3 Clause. Copyright (c) 2008, Fair Oaks Labs, Inc.","title":"license"},{"location":"data-science/knime/images/node_modules/inherits/","text":"Browser-friendly inheritance fully compatible with standard node.js inherits . This package exports standard inherits from node.js util module in node environment, but also provides alternative browser-friendly implementation through browser field . Alternative implementation is a literal copy of standard one located in standalone module to avoid requiring of util . It also has a shim for old browsers with no Object.create support. While keeping you sure you are using standard inherits implementation in node.js environment, it allows bundlers such as browserify to not include full util package to your client code if all you need is just inherits function. It worth, because browser shim for util package is large and inherits is often the single function you need from it. It's recommended to use this package instead of require('util').inherits for any code that has chances to be used not only in node.js but in browser too. usage 1 2 var inherits = require ( 'inherits' ); // then use exactly as the standard one note on version ~1.0 Version ~1.0 had completely different motivation and is not compatible neither with 2.0 nor with standard node.js inherits . If you are using version ~1.0 and planning to switch to ~2.0, be careful: new version uses super_ instead of super for referencing superclass new version overwrites current prototype while old one preserves any existing fields on it","title":"Index"},{"location":"data-science/knime/images/node_modules/inherits/#usage","text":"1 2 var inherits = require ( 'inherits' ); // then use exactly as the standard one","title":"usage"},{"location":"data-science/knime/images/node_modules/inherits/#note-on-version-10","text":"Version ~1.0 had completely different motivation and is not compatible neither with 2.0 nor with standard node.js inherits . If you are using version ~1.0 and planning to switch to ~2.0, be careful: new version uses super_ instead of super for referencing superclass new version overwrites current prototype while old one preserves any existing fields on it","title":"note on version ~1.0"},{"location":"data-science/knime/images/node_modules/isarray/","text":"isarray Array#isArray for older browsers. Usage 1 2 3 4 var isArray = require ( 'isarray' ); console . log ( isArray ([])); // => true console . log ( isArray ({})); // => false Installation With npm do 1 $ npm install isarray Then bundle for the browser with browserify . With component do 1 $ component install juliangruber/isarray License (MIT) Copyright (c) 2013 Julian Gruber < julian@juliangruber.com > Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"isarray"},{"location":"data-science/knime/images/node_modules/isarray/#isarray","text":"Array#isArray for older browsers.","title":"isarray"},{"location":"data-science/knime/images/node_modules/isarray/#usage","text":"1 2 3 4 var isArray = require ( 'isarray' ); console . log ( isArray ([])); // => true console . log ( isArray ({})); // => false","title":"Usage"},{"location":"data-science/knime/images/node_modules/isarray/#installation","text":"With npm do 1 $ npm install isarray Then bundle for the browser with browserify . With component do 1 $ component install juliangruber/isarray","title":"Installation"},{"location":"data-science/knime/images/node_modules/isarray/#license","text":"(MIT) Copyright (c) 2013 Julian Gruber < julian@juliangruber.com > Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"data-science/knime/images/node_modules/kdbush/","text":"KDBush A very fast static spatial index for 2D points based on a flat KD-tree. Compared to RBush : points only \u2014 no rectangles static \u2014 you can't add/remove items indexing is 5-8 times faster 1 2 3 const index = new KDBush ( points ); // make an index const ids1 = index . range ( 10 , 10 , 20 , 20 ); // bbox search - minX, minY, maxX, maxY const ids2 = index . within ( 10 , 10 , 5 ); // radius search - x, y, radius Install Install using NPM ( npm install kdbush ) or Yarn ( yarn add kdbush ), then: 1 2 3 4 5 // import as a ES module import KDBush from 'kdbush' ; // or require in Node / Browserify const KDBush = require ( 'kdbush' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/kdbush@2.0.0/kdbush.min.js\" ></ script > API new KDBush(points[, getX, getY, nodeSize, arrayType]) Creates an index from the given points. points : Input array of points. getX , getY : Functions to get x and y from an input point. By default, it assumes [x, y] format. nodeSize : Size of the KD-tree node, 64 by default. Higher means faster indexing but slower search, and vise versa. arrayType : Array type to use for storing coordinate values. Float64Array by default, but if your coordinates are integer values, Int32Array makes things a bit faster. 1 const index = kdbush ( points , p => p . x , p => p . y , 64 , Int32Array ); index.range(minX, minY, maxX, maxY) Finds all items within the given bounding box and returns an array of indices that refer to the items in the original points input array. 1 const results = index . range ( 10 , 10 , 20 , 20 ). map ( id => points [ id ]); index.within(x, y, radius) Finds all items within a given radius from the query point and returns an array of indices. 1 const results = index . within ( 10 , 10 , 5 ). map ( id => points [ id ]);","title":"Index"},{"location":"data-science/knime/images/node_modules/kdbush/#kdbush","text":"A very fast static spatial index for 2D points based on a flat KD-tree. Compared to RBush : points only \u2014 no rectangles static \u2014 you can't add/remove items indexing is 5-8 times faster 1 2 3 const index = new KDBush ( points ); // make an index const ids1 = index . range ( 10 , 10 , 20 , 20 ); // bbox search - minX, minY, maxX, maxY const ids2 = index . within ( 10 , 10 , 5 ); // radius search - x, y, radius","title":"KDBush"},{"location":"data-science/knime/images/node_modules/kdbush/#install","text":"Install using NPM ( npm install kdbush ) or Yarn ( yarn add kdbush ), then: 1 2 3 4 5 // import as a ES module import KDBush from 'kdbush' ; // or require in Node / Browserify const KDBush = require ( 'kdbush' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/kdbush@2.0.0/kdbush.min.js\" ></ script >","title":"Install"},{"location":"data-science/knime/images/node_modules/kdbush/#api","text":"","title":"API"},{"location":"data-science/knime/images/node_modules/kdbush/#new-kdbushpoints-getx-gety-nodesize-arraytype","text":"Creates an index from the given points. points : Input array of points. getX , getY : Functions to get x and y from an input point. By default, it assumes [x, y] format. nodeSize : Size of the KD-tree node, 64 by default. Higher means faster indexing but slower search, and vise versa. arrayType : Array type to use for storing coordinate values. Float64Array by default, but if your coordinates are integer values, Int32Array makes things a bit faster. 1 const index = kdbush ( points , p => p . x , p => p . y , 64 , Int32Array );","title":"new KDBush(points[, getX, getY, nodeSize, arrayType])"},{"location":"data-science/knime/images/node_modules/kdbush/#indexrangeminx-miny-maxx-maxy","text":"Finds all items within the given bounding box and returns an array of indices that refer to the items in the original points input array. 1 const results = index . range ( 10 , 10 , 20 , 20 ). map ( id => points [ id ]);","title":"index.range(minX, minY, maxX, maxY)"},{"location":"data-science/knime/images/node_modules/kdbush/#indexwithinx-y-radius","text":"Finds all items within a given radius from the query point and returns an array of indices. 1 const results = index . within ( 10 , 10 , 5 ). map ( id => points [ id ]);","title":"index.within(x, y, radius)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/","text":"Mapbox GL JS is a JavaScript library for interactive, customizable vector maps on the web. It takes map styles that conform to the Mapbox Style Specification , applies them to vector tiles that conform to the Mapbox Vector Tile Specification , and renders them using WebGL. Mapbox GL JS is part of the cross-platform Mapbox GL ecosystem , which also includes compatible native SDKs for applications on Android , iOS , macOS , Qt , and React Native . Mapbox provides building blocks to add location features like maps, search, and navigation into any experience you create. To get started with GL JS or any of our other building blocks, sign up for a Mapbox account . In addition to GL JS, this repository contains code, issues, and test fixtures that are common to both GL JS and the native SDKs. For code and issues specific to the native SDKs, see the mapbox/mapbox-gl-native repository. Getting started with Mapbox GL JS Tutorials API documentation Examples Style documentation Open source styles Contributor documentation License Mapbox GL JS is licensed under the 3-Clause BSD license . The licenses of its dependencies are tracked via FOSSA :","title":"Index"},{"location":"data-science/knime/images/node_modules/mapbox-gl/#license","text":"Mapbox GL JS is licensed under the 3-Clause BSD license . The licenses of its dependencies are tracked via FOSSA :","title":"License"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/","text":"1.9.1 \ud83d\udc1e Bug fixes Fix a bug #9477 in Map#fitBounds(..) wherein the padding passed to options would get applied twice. Fix rendering bug #9479 caused when data-driven *-pattern properties reference images added with Map#addImage(..) . Fix a bug #9468 in which an exception would get thrown when updating symbol layer paint property using setPaintProperty . 1.9.0 With this release, we're adding a new changelog policy to our contribution guidelines. This release also fixes several long-standing bugs and unintentional rendering behavior with line-pattern . The fixes come with a visual change to how patterns added with line-pattern scale. Previously, patterns that became larger than the line would be clipped, sometimes distorting the pattern, particularly on mobile and retina devices. Now the pattern will be scaled to fit under all circumstances. #9266 showcases examples of the visual differences. For more information and to provide feedback on this change, see #9394 . \u2728 Features Add within expression for testing whether an evaluated feature lies within a given GeoJSON object ( #9352 ). We are aware of an edge case in which points with wrapped coordinates (e.g. longitude -185) are not evaluated properly. See ( #9442 ) for more information. An example of the within expression: \"icon-opacity\": [\"case\", [\"==\", [\"within\", \"some-polygon\"], true], 1, [\"==\", [\"within\", \"some-polygon\"], false], 0] Map API functions such as easeTo and flyTo now support padding: PaddingOptions which lets developers shift a map's center of perspective when building floating sidebars ( #8638 ) \ud83c\udf4f Improvements Results from queryRenderedFeatures now have evaluated property values rather than raw expressions ( #9198 ) Improve scaling of patterns used in line-pattern on all device resolutions and pixel ratios ( #9266 ) Slightly improve GPU memory footprint ( #9377 ) LngLatBounds.extend is more flexible because it now accepts objects with lat and lon properties as well as arrays of coordinates ( #9293 ) Reduce bundle size and improve visual quality of showTileBoundaries debug text ( #9267 ) \ud83d\udc1e Bug fixes Correctly adjust patterns added with addImage(id, image, pixelRatio) by the asset pixel ratio, not the device pixel ratio ( #9372 ) Allow needle argument to in expression to be false ( #9295 ) Fix exception thrown when trying to set feature-state for a layer that has been removed, fixes #8634 ( #9305 ) Fix a bug where maps were not displaying inside elements with dir=rtl ( #9332 ) Fix a rendering error for very old versions of Chrome (ca. 2016) where text would appear much bigger than intended ( #9349 ) Prevent exception resulting from line-dash-array of empty length ( #9385 ) Fix a bug where icon-image expression that evaluates to an empty string ( '' ) produced a warning ( #9380 ) Fix a bug where certain popup methods threw errors when accessing the container element before it was created, fixes #9429 ( #9433 ) 1.8.0 \u2728 Features and improvements Reduce size of line atlas by removing unused channels ( #9232 ) Prevent empty buffers from being created for debug data when unused ( #9237 ) Add space between distance and unit in scale control ( #9276 ) (h/t gely ) and ( #9284 ) (h/t pakastin ) Add a showAccuracyCircle option to GeolocateControl that shows the accuracy of the user's location as a transparent circle. Mapbox GL JS will show this circle by default. ( #9253 ) (h/t Meekohi ) Implemented a new tile coverage algorithm to enable level-of-detail support in a future release ( #8975 ) \ud83d\udc1e Bug fixes line-dasharray is now ignored correctly when line-pattern is set ( #9189 ) Fix line distances breaking gradient across tile boundaries ( #9220 ) Fix a bug where lines with duplicate endpoints could disappear at zoom 18+ ( #9218 ) Fix a bug where Ctrl-click to drag rotate the map was disabled if the Alt, Cmd or Windows key is also pressed ( #9203 ) Pass errors to getClusterExpansionZoom , getClusterChildren , and getClusterLeaves callbacks ( #9251 ) Fix a rendering performance regression ( #9261 ) Fix visual artifact for line-dasharray ( #9246 ) Fixed a bug in the GeolocateControl which resulted in an error when trackUserLocation was false and the control was removed before the Geolocation API had returned a location ( #9291 ) Fix promoteId for line layers ( #9210 ) Improve accuracy of distance calculations ( #9202 ) (h/t Meekohi ) 1.7.0 \u2728 Features Add promoteId option to use a feature property as ID for feature state ( #8987 ) Add a new constructor option to mapboxgl.Popup , closeOnMove , that closes the popup when the map's position changes ( #9163 ) Allow creating a map without a style (an empty one will be created automatically) ( h/t @stepankuzmin ) ( #8924 ) map.once() now allows specifying a layer id as a third parameter making it consistent with map.on() ( #8875 ) \ud83c\udf4f Improvements Improve performance of raster layers on large screens ( #9050 ) Improve performance for hillshade and raster layers by implementing a progressive enhancement that utilizes ImageBitmap and OffscreenCanvas ( #8845 ) Improve performance for raster tile rendering by using the stencil buffer ( #9012 ) Update symbol-avoid-edges documentation to acknowledge the existence of global collision detection ( #9157 ) Remove reference to in function which has been replaced by the in expression ( #9102 ) \ud83d\udc1e Bug Fixes Change the type of tile id key to string to prevent hash collisions ( #8979 ) Prevent changing bearing via URL hash when rotation is disabled ( #9156 ) Fix URL hash with no bearing causing map to fail to load ( #9170 ) Fix bug in GeolocateControl where multiple instances of the control on one page may result in the user location not being updated ( #9092 ) Fix query fill-extrusions made from polygons with coincident points and polygons with less than four points ( #9138 ) Fix bug where symbol-sort-key was not used for collisions that crossed tile boundaries ( #9054 ) Fix bug in DragRotateHandler._onMouseUp getting stuck in drag/rotate ( #9137 ) Fix \"Click on Compass\" on some mobile devices (add clickTolerance to DragRotateHandler ) ( #9015 ) (h/t Yanonix ) 1.6.1 \ud83d\udc1e Bug Fixes Fix style validation error messages not being displayed ( #9073 ) Fix deferred loading of rtl-text-plugin not working for labels created from GeoJSON sources ( #9091 ) Fix RTL text not being rendered with the rtl-text-plugin on pages that don't allow script-src: blob: in their CSP.( #9122 ) 1.6.0 \u2728 Features Add ability to insert images into text labels using an image expression within a format expression: \"text-field\": [\"format\", \"Some text\", [\"image\", \"my-image\"], \"some more text\"] ( #8904 ) Add support for stretchable images (aka nine-part or nine-patch images). Stretchable images can be used with icon-text-fit to draw resized images with unstretched corners and borders. ( #8997 ) Add in expression. It can check if a value is in an array ( [\"in\", value, array] ) or a substring is in a string ( [\"in\", substring, string] ) ( #8876 ) Add minPitch and maxPitch map options ( #8834 ) Add rotation , rotationAlignment and pitchAlignment options to markers ( #8836 ) (h/t dburnsii ) Add methods to Popup to manipulate container class names ( #8759 ) (h/t Ashot-KR ) Add configurable inertia settings for panning (h/t @aMoniker) ( #8887 ) Add ability to localize UI controls ( #8095 ) (h/t dmytro-gokun ) Add LatLngBounds.contains() method ( #7512 , fixed by #8200 ) Add option to load rtl-text-plugin lazily ( #8865 ) Add essential parameter to AnimationOptions that can override prefers-reduced-motion: reduce ( #8743 , fixed by #8883 ) \ud83c\udf4f Improvements Allow rendering full world smaller than 512px. To restore the previous limit call map.setMinZoom(0) ( #9028 ) Add an es modules build for mapbox-gl-style-spec in dist/ ( #8247 ) (h/t ahocevar ) Add 'image/webp, / ' accept header to fetch/ajax image requests when webp supported ( #8262 ) Improve documentation for setStyle, getStyle, and isStyleLoaded ( #8807 ) \ud83d\udc1e Bug Fixes Fix map rendering after addImage and removeImage are used to change a used image ( #9016 ) Fix visibility of controls in High Contrast mode in IE ( #8874 ) Fix customizable url hash string in IE 11 ( #8990 ) (h/t pakastin ) Allow expression stops up to zoom 24 instead of 22 ( #8908 ) (h/t nicholas-l ) Fix alignment of lines in really overscaled tiles ( #9024 ) Fix Failed to execute 'shaderSource' on 'WebGLRenderingContext' errors ( #9017 ) Make expression validation fail on NaN ( #8615 ) Fix setLayerZoomRange bug that caused tiles to be re-requested ( #7865 , fixed by #8854 ) Fix map.showTileBoundaries rendering ( #7314 ) Fix using generateId in conjunction with cluster in a GeoJSONSource ( #8223 , fixed by #8945 ) Fix opening popup on a marker from keyboard ( #6835 ) Fix error thrown when request aborted ( #7614 , fixed by #9021 ) Fix attribution control when repeatedly removing and adding it ( #9052 ) 1.5.1 This patch introduces two workarounds that address longstanding issues related to unbounded memory growth in Safari, including #8771 and #4695 . We\u2019ve identified two memory leaks in Safari: one in the CacheStorage API, addressed by #8956 , and one in transferring data between web workers through Transferables , addressed by #9003 . \ud83c\udf4f Improvements Implement workaround for memory leak in Safari when using the CacheStorage API. ( #8856 ) Implement workaround for memory leak in Safari when using Transferable objects to transfer ArrayBuffers to WebWorkers. If GL-JS detetcts that it is running in Safari, the use of Transferables to transfer data to WebWorkers is disabled. ( #9003 ) Improve animation performance when using map.setData . ( #8913 ) (h/t msbarry ) 1.5.0 \u2728 Features Add disabled icon to GeolocateControl if user denies geolocation permission. #8871 ) Add outofmaxbounds event to GeolocateControl, which is emitted when the user is outside of map.maxBounds ( #8756 ) (h/t MoradiDavijani ) Add mapboxgl.getRTLTextPluginStatus() to query the current status of the rtl-text-plugin to make it easier to allow clearing the plugin when necessary. (ref. #7869 ) ( #8864 ) Allow hash Map option to be set as a string, which sets the map hash in the url to a custom query parameter. ( #8603 ) (h/t SebCorbin ) \ud83c\udf4f Improvements Fade symbols faster when zooming out quickly, reducing overlap. ( #8628 ) Reduce memory usage for vector tiles that contain long strings in feature properties. ( #8863 ) \ud83d\udc1e Bug Fixes Fix text-variable-anchor not trying multiple placements during collision with icons when icon-text-fit is enabled. ( #8803 ) Fix icon-text-fit not properly respecting vertical labels. ( #8835 ) Fix opacity interpolation for composition expressions. ( #8818 ) Fix rotate and pitch events being fired at the same time. ( #8872 ) Fix memory leaks that occured during tile loading and map removal.( #8813 and #8850 ) Fix web-worker transfer of ArrayBuffers in environments where instanceof ArrayBuffer fails.(e.g cypress ) ( #8868 ) 1.4.1 \ud83d\udc1e Bug Fixes Fix the way that coalesce handles the image operator so available images are rendered properly ( #8839 ) Do not emit the styleimagemissing event for an empty string value ( #8840 ) Fix serialization of ResolvedImage type so *-pattern properties work properly ( #8833 ) 1.4.0 \u2728 Features Add image expression operator to determine image availability ( #8684 ) Enable text-offset with variable label placement ( #8642 ) \ud83c\udf4f Improvements Faster loading and better look of raster terrain ( #8694 ) Improved code documentation around resizing and {get/set}RenderedWorldCopies and more ( #8748 , #8754 ) Improve single vs. multi-touch zoom & pan interaction (#7196) ( #8100 ) \ud83d\udc1e Bug fixes Fix rendering of collisionBox when text-translate or icon-translate is enabled ( #8659 ) Fix TypeError when reloading a source and immediately removing the map ( #8711 ) Adding tooltip to the geolocation control button ( #8735 ) (h/t BAByrne ) Add originalEvent property to NavigationControl events ( #8693 ) (h/t stepankuzmin ) Don't cancel follow mode in the GeolocateControl when resizing the map or rotating the screen ( #8736 ) Fix error when calling Popup#trackPointer before setting its content or location ( #8757 ) (h/t zxwandrew ) Respect newline characters when text-max-width is set to zero ( #8706 ) Update earcut to v2.2.0 to fix polygon tesselation errors ( #8772 ) Fix icon-fit with variable label placement ( #8755 ) Icons stretched with icon-text-fit are now sized correctly ( #8741 ) Collision detection for icons with icon-text-fit now works correctly ( #8741 ) 1.3.2 Fix a SecurityError in Firefox >= 69 when accessing the cache #8780 1.3.1 \ud83d\udc1e Bug Fixes Fix a race condition that produced an error when a map was removed while reloading a source. #8711 Fix a race condition were render event was sometimes not fired after load event in IE11. #8708 1.3.0 \ud83c\udf4f Features Introduce text-writing-mode symbol layer property to allow placing point labels vertically. #8399 Extend variable text placement to work when text/icon-allow-overlap is set to true . #8620 Allow text-color to be used in formatted expressions to be able to draw different parts of a label in different colors. #8068 \u2728 Improvements Improve tile loading logic to cancel requests more aggressively, improving performance when zooming or panning quickly. #8633 Display outline on control buttons when focused (e.g. with a tab key) for better accessibility. #8520 Improve the shape of line round joins. #8275 Improve performance of processing line layers. #8303 Improve legibility of info displayed with map.showTileBoundaries = true . #8380 (h/t @andrewharvey ) Add MercatorCoordinate.meterInMercatorCoordinateUnits method to make it easier to convert from meter units to coordinate values used in custom layers. #8524 (h/t @andrewharvey ) Improve conversion of legacy filters with duplicate values. #8542 Move out documentation & examples website source to a separate mapbox-gl-js-docs repo. #8582 \ud83d\udc1e Bug Fixes Fix a bug where local CJK fonts would switch to server-generated ones in overzoomed tiles. #8657 Fix precision issues in deck.gl -powered custom layers. #8502 Fix a bug where fill and line layers wouldn't render correctly over fill extrusions when coming from the same source. #8661 Fix map loading for documents loaded from Blob URLs. #8612 Fix classification of relative file:// URLs when in documents loaded from a file URL. #8612 Remove esm from package dependencies (so that it's not installed on npm install mapbox-gl ). #8586 (h/t @DatGreekChick ) 1.2.1 \ud83d\udc1e Bug fixes Fix bug in NavigationControl compass button that prevented it from rotating with the map ( #8605 ) 1.2.0 Features and improvements Add *-sort-key layout property for circle, fill, and line layers, to dictate which features appear above others within a single layer( #8467 ) Add ability to instantiate maps with specific access tokens ( #8364 ) Accommodate prefers-reduced-motion settings in browser ( #8494 ) Add Map visualizePitch option that tilts the compass as the map pitches ( #8208 , fixed by #8296 ) (h/t pakastin ) Make source options take precedence over TileJSON ( #8232 ) (h/t jingsam ) Make requirements for text offset properties more precise ( #8418 ) Expose convertFilter API in the style specification ( #8493 Bug fixes Fix changes to text-variable-anchor , such that previous anchor positions would take precedence only if they are present in the updated array (considered a bug fix, but is technically a breaking change from previous behavior) ( #8473 ) Fix rendering of opaque pass layers over heatmap and fill-extrusion layers ( #8440 ) Fix rendering of extraneous vertical line in vector tiles ( #8477 , fixed by #8479 ) Turn off 'move' event listeners when removing a marker ( #8465 ) Fix class toggling on navigation control for IE ( #8495 ) (h/t cs09g ) Fix background rotation hovering on geolocate control ( #8367 ) (h/t GuillaumeGomez ) Fix error in click events on markers where startPos is not defined ( #8462 ) (h/t @msbarry ) Fix malformed urls when using custom baseAPIURL of a certain form ( #8466 ) 1.1.1 \ud83d\udc1e Bug fixes Fix unbounded memory growth caused by failure to cancel requests to the cache ( #8472 ) Fix unbounded memory growth caused by failure to cancel requests in IE ( #8481 ) Fix performance of getting tiles from the cache ( #8489 ) 1.1.0 \u2728 Minor features and improvements Improve line rendering performance by using a more compact line attributes layout ( #8306 ) Improve data-driven symbol layers rendering performance ( #8295 ) Add the ability to disable validation during queryRenderedFeatures and querySourceFeatures calls, as a performance optimization ( #8211 ) (h/t gorshkov-leonid ) Improve setFilter performance by caching keys in groupByLayout routine ( #8122 ) (h/t vallendm ) Improve rendering of symbol layers with symbol-z-order: viewport-y , when icons are allowed to overlap but not text ( #8180 ) Prefer breaking lines at a zero width space to allow better break point suggestions for Japanese labels ( #8255 ) Add a WebGLRenderingContext argument to onRemove function of CustomLayerInterface , to allow direct cleanup of related context ( #8156 ) (h/t ogiermaitre ) Allow zoom speed customization by adding setZoomRate and setWheelZoomRate methods to ScrollZoomHandler ( #7863 ) (h/t sf31 ) Add trackPointer method to Popup API that continuously repositions the popup to the mouse cursor when the cursor is within the map ( #7786 ) Add getElement method to Popup to retrieve the popup's HTML element ( #8123 ) (h/t bravecow ) Add fill-pattern example to the documentation ( #8022 ) (h/t flawyte ) Update script detection for Unicode 12.1 ( #8158 ) Add nofollow to Mapbox logo & \"Improve this map\" links ( #8106 ) (h/t viniciuskneves ) Include source name in invalid GeoJSON error ( #8113 ) (h/t Zirak ) \ud83d\udc1e Bug fixes Fix updateImage not working as expected in Chrome ( #8199 ) Fix issues with double-tap zoom on touch devices ( #8086 ) Fix duplication of movestart events when zooming ( #8259 ) (h/t bambielli-flex ) Fix validation of \"format\" expression failing when options are provided ( #8339 ) Fix setPaintProperty not working on line-pattern property ( #8289 ) Fix the GL context being left in unpredictable states when using custom layers ( #8132 ) Fix unnecessary updates to attribution control string ( #8082 ) (h/t poletani ) Fix bugs in findStopLessThanOrEqualTo algorithm ( #8134 ) (h/t Mike96Angelo ) Fix map not displaying properly when inside an element with text-align: center ( #8227 ) (h/t mc100s ) Clarify in documentation that Popup#maxWidth accepts all max-width CSS values ( #8312 ) (h/t viniciuskneves ) Fix location dot shadow not displaying ( #8119 ) (h/t bravecow ) Fix docs dev dependencies being mistakenly installed as package dependencies ( #8121 ) (h/t bravecow ) Various typo fixes ( #8230 , h/t erictheise ) ( #8236 , h/t fredj ) Fix geolocate button CSS ( #8367 , h/t GuillaumeGomez ) Fix caching for Mapbox tiles ( #8389 ) 1.0.0 \u26a0\ufe0f Breaking changes This release replaces the existing \u201cmap views\u201d pricing model in favor of a \u201cmap load\u201d model. Learn more in a recent blog post about these changes . By upgrading to this release, you are opting in to the new map loads pricing. Why is this change being made? This change allows us to implement a more standardized and predictable method of billing GL JS map usage. You\u2019ll be charged whenever your website or web application loads, not by when users pan and zoom around the map, incentivizing developers to create highly interactive map experiences. The new pricing structure also creates a significantly larger free tier to help developers get started building their applications with Mapbox tools while pay-as-you-go pricing and automatic volume discounts help your application scale with Mapbox. Session billing also aligns invoices with metrics web developers already track and makes it easier to compare usage with other mapping providers. What is changing? - Add SKU token to Mapbox API requests #8276 When (and only when) loading tiles from a Mapbox API with a Mapbox access token set ( mapboxgl.accessToken ), a query parameter named sku will be added to all requests for vector, raster and raster-dem tiles. Every map instance uses a unique sku value, which is refreshed every 12 hours. The token itself is comprised of a token version (always \u201c1\u201d), a sku ID (always \u201c01\u201d) and a random 10-digit base-62 number. The purpose of the token is to allow for metering of map sessions on the server-side. A session lasts from a new map instantiation until the map is destroyed or 12 hours passes, whichever comes first. For further information on the pricing changes, you can read our blog post and check out our new pricing page , which has a price calculator. As always, you can also contact our team at https://support.mapbox.com . 0.54.1 Bug fixes Fix unbounded memory growth caused by failure to cancel requests in IE ( #8481 ) 0.54.0 Breaking changes Turned localIdeographFontFamily map option on by default. This may change how CJK labels are rendered, but dramatically improves performance of CJK maps (because the browser no longer needs to download heavy amounts of font data from the server). Add localIdeographFontFamily: false to turn this off. #8008 Added Popup maxWidth option, set to \"240px\" by default. #7906 Major features Added support for updating and animating style images. #7999 Added support for generating style images dynamically (e.g. for drawing icons based on feature properties). #7987 Added antialiasing support for custom layers. #7821 Added a new mapbox-gl-csp.js bundle for strict CSP environments where worker-src: blob is disallowed. #8044 Minor features and improvements Improved performance of fill extrusions. #7821 Improved performance of symbol layers. #7967 Slightly improved rendering performance in general. #7969 Slightly improved performance of HTML markers. #8018 Improved diffing of styles with \"visibility\": \"visible\" . #8005 Improved zoom buttons to grey out when reaching min/max zoom. #8023 Added a title to fullscreen control button. #8012 Added rel=\"noopener\" attributes to links that lead to external websites (such as Mapbox logo and OpenStreetMap edit link) for improved security. #7914 Added tile size info when map.showTileBoundaries is turned on. #7963 Significantly improved load times of the benchmark suite. #8066 Improved behavior of canvasSource.pause to be more reliable and able to render a single frame. #8130 Bug fixes Fixed a bug in Mac Safari 12+ where controls would disappear until you interact with the map. 8193 Fixed a memory leak when calling source.setData(url) many times. #8035 Fixed a bug where marker lost focus when dragging. #7799 Fixed a bug where map.getCenter() returned a reference to an internal LngLat object instead of cloning it, leading to potential mutability bugs. #7922 Fixed a bug where default HTML marker positioning was slightly off. #8074 Fixed a bug where adding a fill extrusion layer for non-polygon layers would lead to visual artifacts. #7685 Fixed intermittent Flow failures on CI. #8061 Fixed a bug where calling Map#removeFeatureState does not remove the state from some tile zooms #8087 Fixed a bug where removeFeatureState didn't work on features with id equal to 0 . #8150 (h/t jutaz ) 0.53.1 Bug fixes Turn off telemetry for Mapbox Atlas ( #7945 ) Fix order of 3D features in query results (fix #7883) ( #7953 ) Fix RemovePaintState benchmarks ( #7930 ) 0.53.0 Features and improvements Enable fill-extrusion querying with ray picking ( #7499 ) Add clusterProperties option for aggregated cluster properties ( #2412 , fixed by #7584 ) Allow initial map bounds to be adjusted with fitBounds options. ( #7681 ) (h/t elyobo ) Remove popups on Map#remove ( #7749 ) (h/t andycalder ) Add Map#removeFeatureState ( #7761 ) Add number-format expression ( #7626 ) Add symbol-sort-key style property ( #7678 ) Bug fixes Upgrades Earcut to fix a rare bug in rendering polygons that contain a coincident chain of holes ( #7806 , fixed by #7878 ) Allow file:// protocol in XHR requests for Cordova/Ionic/etc ( #7818 ) Correctly handle WebP images in Edge 18 ( #7687 ) Fix bug which mistakenly requested WebP images in browsers that do not support WebP (#7817) ( #7819 ) Fix images not being aborted when dequeued ( #7655 ) Fix DEM layer memory leak ( #7690 , fixed by #7691 ) Set correct color state before rendering custom layer ( #7711 ) Set LngLat.toBounds() default radius to 0 ( #7722 , fixed by #7723 ) (h/t cherniavskii ) Fix race condition in feature-state dependent layers ( #7523 , fixed by #7790 ) Prevent map.repaint from mistakenly enabling continuous repaints ( #7667 ) Prevent map shaking while zooming in on raster tiles ( #7426 ) Fix query point translation for multi-point geometry ( #6833 , fixed by #7581 ) 0.52.0 Breaking changes Canonicalize tile urls to mapbox:// urls so they can be transformed with config.API_URL ( #7594 ) Features and improvements Add getter and setter for config.API_URL ( #7594 ) Allow user to define element other than map container for full screen control ( #7548 ) Add validation option to style setters ( #7604 ) Add 'idle' event: fires when no further rendering is expected without further interaction. ( #7625 ) Bug fixes Fire error when map.getLayoutProperty references missing layer ( #7537 , fixed by #7539 ) Fix shaky sprites when zooming with scrolling ( #7558 ) Fix layout problems in attribution control ( #7608 ) (h/t lucaswoj ) Fixes resetting map's pitch to 0 if initial bounds is set ( #7617 ) (h/t stepankuzmin ) Fix occasional failure to load images after multiple image request abortions #7641 Update repo url to correct one ( #7486 ) (h/t nicholas-l ) Fix bug where symbols where sometimes not rendered immediately ( #7610 ) Fix bug where cameraForBounds returns incorrect CameraOptions with asymmetrical padding/offset ( #7517 , fixed by #7518 ) (h/t mike-marcacci ) Use diff+patch approach to map.setStyle when the parameter is a URL ( #4025 , fixed by #7562 ) Begin touch zoom immediately when rotation disabled ( #7582 ) (h/t msbarry ) Fix symbol rendering under opaque fill layers ( #7612 ) Fix shaking by aligning raster sources to pixel grid only when map is idle ( 7426 ) Fix raster layers in Edge 18 by disabling it's incomplete WebP support ( 7687 ) Fix memory leak in hillshade layer ( 7691 ) Fix disappearing custom layers ( 7711 ) 0.51.0 November 7, 2018 \u2728 Features and improvements Add initial bounds as map constructor option ( #5518 ) (h/t stepankuzmin ) Improve performance on machines with > 8 cores ( #7407 , fixed by #7430 ) Add MercatorCoordinate type ( #7488 ) Allow browser-native contextmenu to be enabled ( #2301 , fixed by #7369 ) Add an unminified production build to the NPM package ( #7403 ) Add support for LngLat conversion from {lat, lon} ( #7507 ) (h/t bfrengley ) Add tooltips for navigation controls ( #7373 ) Show attribution only for used sources ( #7384 ) Add telemetry event to log map loads ( #7431 ) Tighten style validation Disallow expressions as stop values ( #7396 ) Disallow feature-state expressions in filters ( #7366 ) \ud83d\udc1b Bug fixes Fix for GeoJSON geometries not working when coincident with tile boundaries( #7436 , fixed by #7448 ) Fix depth buffer-related rendering issues on some Android devices. ( #7471 ) Fix positioning of compact attribution strings ( #7444 , #7445 , and #7391 ) Fix an issue with removing markers in mouse event callbacks ( #7442 ) (h/t vbud ) Remove controls before destroying a map ( #7479 ) Fix display of Scale control values < 1 ( #7469 ) (h/t MichaelHedman ) Fix an error when using location hash within iframes in IE11 ( #7411 ) Fix depth mode usage in custom layers ( #7432 ) (h/t markusjohnsson ) Fix an issue with shaky sprite images during scroll zooms ( #7558 ) 0.50.0 October 10, 2018 \u2728 Features and improvements \ud83c\udf89 Add Custom Layers that can be rendered into with user-provided WebGL code ( #7039 ) Add WebGL face culling for increased performance ( #7178 ) Improve speed of expression evaluation ( #7334 ) Automatically coerce to string for concat expression and text-field property ( #6190 , fixed by #7280 ) Add fill-extrusion-vertical-gradient property for controlling shading of fill extrusions ( #5768 , fixed by #6841 ) Add update functionality for images provided via ImageSource ( #4050 , fixed by #7342 ) (h/t dcervelli ) \ud83d\udc1b Bug fixes Expressions Fix expressions that use log2 and log10 in IE11 ( #7318 , fixed by #7320 ) Fix let expression stripping expected type during parsing ( #7300 , fixed by #7301 ) Fix superfluous wrapping of literals in literal expression ( #7336 , fixed by #7337 ) Allow calling to-color on values that are already of type Color ( #7260 ) Fix to-array for empty arrays (( #7261 )) Fix identity functions for text-field when using formatted text ( #7351 ) Fix coercion of null to 0 in to-number expression ( #7083 , fixed by #7274 ) Canvas source Fix missing repeats of CanvasSource when it crosses the antimeridian ( #7273 ) Fix CanvasSource not respecting alpha values set on canvas element ( #7302 , fixed by #7309 ) Rendering Fix rendering of fill extrusions with really high heights ( #7292 ) Fix an error where the map state wouldn't return to loaded after certain runtime styling changes when there were errored tiles in the viewport ( #7355 ) Fix errors when rendering symbol layers without symbols ( #7241 , fixed by #7253 ) Don't fade in symbols with *-allow-overlap: true when panning into the viewport ( #7172 , fixed by #7244 ) Library Fix disambiguation for mouseover event ( #7295 , fixed by #7299 ) Fix silent failure of getImage if an SVG is requested ( #7312 , fixed by #7313 ) Fix empty control group box shadow ( #7303 , fixed by #7304 ) (h/t Duder-onomy ) Fixed an issue where a wrong timestamp was sent for Mapbox turnstile events ( #7381 ) Fixed a bug that lead to attribution not showing up correctly in Internet Explorer ( #3945 , fixed by #7391 ) 0.49.0 September 6, 2018 \u26a0\ufe0f Breaking changes Use client{Height/Width} instead of offset{Height/Width} for map canvas sizing ( #6848 , fixed by #7128 ) \ud83d\udc1b Bug fixes Fix Top Issues list for mapbox-gl-js ( #7108 , fixed by #7112 ) Fix bug in which symbols with icon-allow-overlap: true, text-allow-overlap: true, text-optional: false would show icons when they shouldn't ( #7041 ) Fix bug where the map would not stop at the exact zoom level requested by Map#FlyTo (#7222) ( #7223 ) (h/t benoitbzl ) Keep map centered on the center point of a multi-touch gesture when zooming (#6722) ( #7191 ) (h/t pakastin ) Update the style-spec's old gl-style-migrate script to include conversion of legacy functions and filters to their expression equivalents ( #6927 , fixed by #7095 ) Fix icon-size for small data-driven values ( #7125 ) Fix bug in the way AJAX requests load local files on iOS web view ( #6610 ) (h/t oscarfonts ) Fix bug in which canvas sources would not render in world wrapped tiles at the edge of the viewport ([#7271] https://github.com/mapbox/mapbox-gl-js/issues/7271 ), fixed by #7273 ) \u2728 Features and improvements Performance updates: Improve time to first render by updating how feature ID maps are transferred to the main thread ( #7110 , fixed by #7132 ) Reduce size of JSON transmitted from worker thread to main thread ( #7124 ) Improve image/glyph atlas packing algorithm ( #7171 ) Use murmur hash on symbol instance keys to reduce worker transfer costs ( #7127 ) Add GL state management for uniforms ( #6018 ) Add symbol-z-order symbol layout property to style spec ( #7219 ) Implement data-driven styling support for *-pattern properties ( #6289 ) Add Map#fitScreenCoordinates which fits viewport to two points, similar to Map#fitBounds but uses screen coordinates and supports non-zero map bearings ( #6894 ) Re-implement LAB/HSL color space interpolation for expressions ( #5326 , fixed by #7123 ) Enable benchmark testing for Mapbox styles ( #7047 ) Allow Map#setFeatureState and Map#getFeatureState to accept numeric IDs ( #7106 ) (h/t bfrengley ) 0.48.0 August 16, 2018 \u26a0\ufe0f Breaking changes Treat tiles that error with status 404 as empty renderable tiles to prevent rendering duplicate features in some sparse tilesets ( #6803 ) \ud83d\udc1b Bug fixes Fix issue where text-max-angle property was being calculated incorrectly internally, causing potential rendering errors when \"symbol-placement\": line Require feature.id when using Map#setFeatureState ( #6974 ) Fix issue with removing the GeolocateControl when user location is being used ( #6977 ) (h/t sergei-zelinsky ) Fix memory leak caused by a failure to remove all controls added to the map ( #7042 ) Fix bug where the build would fail when using mapbox-gl webpack 2 and UglifyJSPlugin ( #4359 , fixed by #6956 ) Fix bug where fitBounds called with coordinates outside the bounds of Web Mercator resulted in uncaught error ( #6906 , fixed by #6918 ) Fix bug wherein Map#querySourceFeatures was returning bad results on zooms > maxZoom ( #7061 ) Relax typing for equality and order expressions ( #6459 , fixed by #6961 ) Fix bug where queryPadding for all layers in a source was set by the first layer, causing incorrect querying on other layers and, in some cases, incorrect firing of events associated with individual layers ( #6909 ) \u2728 Features and improvements Performance Improvements: Stop unnecessary serialization of symbol source features. ( #7013 ) Optimize calculation for getting visible tile coordinates ( #6998 ) Improve performance of creating {Glyph/Image}Atlas es ( #7091 ) Optimize and simplify tile retention logic ( #6995 ) Add a user turnstile event for users accessing Mapbox APIs ( #6980 ) Add support for autogenerating feature ids for GeoJSON sources so they can be used more easily with the Map#setFeatureState API ( #7043 )) ( #7091 ) Add ability to style symbol layers labels with multiple fonts and text sizes via \"format\" expression ( #6994 ) Add customAttribution option to AttributionControl ( #7033 ) (h/t mklopets ) Publish Flow type definitions alongside compiled bundle ( #7079 ) Introduce symbol cross fading when crossing integer zoom levels to prevent labels from disappearing before newly loaded tiles' labels can be rendered ( #6951 ) Improvements in label collision detection ( #6925 )) 0.47.0 \u2728 Features and improvements Add configurable drag pan threshold ( #6809 ) (h/t msbarry ) Add raster-resampling raster paint property ( #6411 ) (h/t andrewharvey ) Add symbol-placement: line-center ( #6821 ) Add methods for inspecting GeoJSON clusters ( #3318 , fixed by #6829 ) Add warning to geolocate control when unsupported ( #6923 ) (h/t aendrew ) Upgrade geojson-vt to 3.1.4 ( #6942 ) Include link to license in compiled bundle ( #6975 ) \ud83d\udc1b Bug fixes Use updateData instead of re-creating buffers for repopulated paint arrays ( #6853 ) Fix ScrollZoom handler setting tr.zoom = NaN ( #6924 ) Failed to invert matrix error ( #6486 , fixed by #6924 ) Fixing matrix errors ( #6782 , fixed by #6924 ) Fix heatmap tile clipping when layers are ordered above it ( #6806 , fixed by #6807 ) Fix video source in safari (macOS and iOS) ( #6443 , fixed by #6811 ) Do not reload errored tiles ( #6813 ) Fix send / remove timing bug in Dispatcher ( #6756 , fixed by #6826 ) Fix flyTo not zooming to exact given zoom ( #6828 ) Don't stop animation on map resize ( #6636 ) Fix map.getBounds() with rotated map ( #6875 ) (h/t zoltan-mihalyi ) Support collators in feature filter expressions. ( #6929 ) Fix Webpack production mode compatibility ( #6981 ) 0.46.0 \u26a0\ufe0f Breaking changes Align implicit type casting behavior of match expressions with with case/== ( #6684 ) \u2728 Features and improvements :tada: Add Map#setFeatureState and feature-state expression to support interactive styling ( #6263 ) Create draggable Marker with setDraggable ( #6687 ) Add Map#listImages for listing all currently active sprites/images ( #6381 ) Add \"crossSourceCollisions\" option to disable cross-source collision detection ( #6566 ) Handle text/icon-rotate for symbols with symbol-placement: point ( #6075 ) Automatically compact Mapbox wordmark on narrow maps. ( #4282 ) (h/t andrewharvey ) Only show compacted AttributionControl on interactive displays ( #6506 ) (h/t andrewharvey ) Use postcss to inline svg files into css, reduce size of mapbox-gl.css ( #6513 ) (h/t andrewharvey ) Add support for GeoJSON attribution ( #6364 ) (h/t andrewharvey ) Add instructions for running individual unit and render tests ( #6686 ) Make Map constructor fail if WebGL init fails. ( #6744 ) (h/t uforic ) Add browser fallback code for collectResourceTiming: true in web workers ( #6721 ) Remove ignored usage of gl.lineWidth ( #5541 ) Split new bounds calculation out of fitBounds into new method ( #6683 ) Allow integration tests to be organized in an arbitrarily deep directory structure ( #3920 ) Make \"Missing Mapbox GL JS CSS\" a console warning ( #5786 ) Add rel=\"noopener\" to Mapbox attribution link. ( #6729 ) (h/t gorbypark ) Update to deep equality check in example code ( #6599 ) (h/t jonsadka ) Upgrades! Upgrade ESM dependency to ^3.0.39 ( #6750 ) Ditch gl-matrix fork in favor of the original package ( #6751 ) Update to latest sinon ( #6771 ) Upgrade to Flow 0.69 ( #6594 ) Update to mapbox-gl-supported 1.4.0 ( #6773 ) \ud83d\udc1b Bug fixes collectResourceTiming: true generates error on iOS9 Safari, IE 11 ( #6690 ) Fix PopupOptions flow type declarations ( #6670 ) (h/t TimPetricola ) Add className option to Popup constructor ( #6502 ) (h/t Ashot-KR ) GeoJSON MultiLineStrings with lineMetrics=true only rendered first line ( #6649 ) Provide target property for mouseenter/over/leave/out events ( #6623 ) Don't break on sources whose name contains \".\" ( #6660 ) Rotate and pitch with navigationControl broke in v0.45 ( #6650 ) Zero-width lines remained visible ( #6769 ) Heatmaps inappropriately clipped at tile boundaries ( #6806 ) Use named exports for style-spec entrypoint module ( #6601 Don't fire click event if default is prevented on mousedown for a drag event ( #6697 , fixes #6642 ) Double clicking to zoom in breaks map dragging/panning in Edge ( #6740 ) (h/t GUI ) *-transition properties cannot be set with setPaintProperty() ( #6706 ) Marker with a element does not open the url when clicked ( #6730 ) setRTLTextPlugin fails with relative URLs ( #6719 ) Collision detection incorrect for symbol layers that share the same layout properties ( #6548 ) Fix a possible crash when calling queryRenderedFeatures after querySourceFeatures ( #6559 ) Fix a collision detection issue that could cause labels to temporarily be placed too densely during rapid panning ( #5654 ) 0.45.0 \u26a0\ufe0f Breaking changes Evented#fire and Evented#listens are now marked as private. Though Evented is still exported, and fire and listens are still functional, we encourage you to seek alternatives; a future version may remove their API accessibility or change its behavior. If you are writing a class that needs event emitting functionality, consider using EventEmitter or similar libraries instead. The \"to-string\" expression operator now converts null to an empty string rather than to \"null\" . #6534 \u2728 Features and improvements :rainbow: Add line-gradient property #6303 Add abs , round , floor , and ceil expression operators #6496 Add collator expression for controlling case and diacritic sensitivity in string comparisons #6270 Rename caseSensitive and diacriticSensitive expressions to case-sensitive and diacritic-sensitive for consistency #6598 Prevent collator expressions for evaluating as constant to account for potential environment-specific differences in expression evaluation #6596 Add CSS linting to test suite (h/t @jasonbarry) #6071 Add support for configurable maxzoom in raster-dem tilesets #6103 Add Map#isZooming and Map#isRotating methods #6128 , #6183 Add support for Mapzen Terrarium tiles in raster-dem sources #6110 Add preventDefault method on mousedown , touchstart , and dblclick events #6218 Add originalEvent property on zoomend and moveend for user-initiated scroll events (h/t @stepankuzmin) #6175 Accept arguments of type value in \"length\" expressions #6244 Introduce MapWheelEvent #6237 Add setter for ScaleControl units (h/t @ryanhamley) #6138 , #6274 Add open event for Popup #6311 Explicit \"object\" type assertions are no longer required when using expressions #6235 Add anchor option to Marker #6350 HTMLElement is now passed to Marker as part of the options object, but the old function signature is still supported for backwards compatibility #6356 Add support for custom colors when using the default Marker SVG element (h/t @andrewharvey) #6416 Allow CanvasSource initialization from HTMLElement #6424 Add is-supported-script expression 6260 \ud83d\udc1b Bug fixes Align raster-dem tiles to pixel grid to eliminate blurry rendering on some devices #6059 Fix label collision circle debug drawing on overzoomed tiles #6073 Improve error reporting for some failed requests #6126 , #6032 Fix several Map#queryRenderedFeatures bugs: account for {text, icon}-offset when querying #6135 correctly query features that extend across tile boundaries #5756 fix querying of circle layer features with -pitch-scaling: 'viewport' or -pitch-alignment: 'map' #6036 eliminate flicker effects when using query results to set a hover effect by switching from tile-based to viewport-based symbol querying #6497 Preserve browser history state when updating the Map hash #6140 Fix undefined behavior when Map#addLayer is invoked with an id of a preexisting layer #6147 Fix bug where icon-image would not be rendered if text-field is an empty string #6164 Ensure all camera methods fire rotatestart and rotateend events #6187 Always hide duplicate labels #6166 Fix DragHandler bugs where a left-button mouse click would end a right-button drag rotate and a drag gesture would not end if the control key is down on mouseup #6193 Add support for calling {DragPanHandler, DragRotateHandler}#disable while a gesture is in progress #6232 Fix GeolocateControl user location dot sizing when Map 's <div> inherits box-sizing: border-box; (h/t @andrewharvey) #6227 Fix bug causing an off-by-one error in array expression error messages (h/t @drewbo) #6269 Improve error message when an invalid access token triggers a 401 error #6283 Fix bug where lines with line-width larger than the sprite height of the line-pattern property would render other sprite images #6246 Fix broken touch events for DragPanHandler on mobile using Edge (note that zoom/rotate/pitch handlers still do not support Edge touch events #1928 ) #6325 Fix race condition in VectorTileWorkerSource#reloadTile causing a rendering timeout #6308 Fix bug causing redundant gl.stencilFunc calls due to incorrect state checking (h/t @yangdonglai) #6330 Fix bug where mousedown or touchstart would cancel camera animations in non-interactive maps #6338 Fix bug causing a full-screen flicker when the map is pitched and a symbol layer uses non-zero text-translate #6365 Fix bug in to-rgba expression causing division by zero 6388 Fix bug in cross-fading for *-pattern properties with non-integer zoom stops #6430 Fix bug where calling Map#remove on a map with constructor option hash: true throws an error (h/t @allthesignals) #6490 Fix bug causing flickering when panning across the anti-meridian #6438 Fix error when using tiles of non-power-of-two size #6444 Fix bug causing Map#moveLayer(layerId, beforeId) to remove the layer when layerId === beforeId #6542 Fix Rollup build for style-spec module 6575 Fix bug causing Map#querySourceFeatures to throw an Uncaught TypeError ( https://github.com/mapbox/mapbox-gl-js/pull/6555 ) Fix issue where label collision detection was inaccurate for some symbol layers that shared layout properties with another layer #6558 Restore target property for mouse{enter,over,leave,out} events #6623 0.44.2 \ud83d\udc1b Bug fixes Workaround a breaking change in Safari causing page to scroll/zoom in response to user actions intended to pan/zoom the map #6095 . (N.B., not to be confused with the workaround from April 2017 dealing with the same breaking change in Chrome #4259 . See also https://github.com/WICG/interventions/issues/18 , https://bugs.webkit.org/show_bug.cgi?id=182521 , https://bugs.chromium.org/p/chromium/issues/detail?id=639227 .) 0.44.1 \ud83d\udc1b Bug fixes Fix bug causing features from symbol layers to be omitted from map.queryRenderedFeatures() #6074 Fix error triggered by simultaneous scroll-zooming and drag-panning. #6106 Fix bug wherein drag-panning failed to resume after a brief pause #6063 0.44.0 \u2728 Features and improvements The CSP policy of a page using mapbox-gl-js no longer needs to include script-src 'unsafe-eval' #559 Add LngLatBounds#isEmpty() method #5917 Updated to flow 0.62.0 #5923 Make compass and zoom controls optional ( #5348 ) (h/t @matijs) Add collectResourceTiming option to the enable collection of Resource Timing data for requests that are made from Web Workers. ( #5948 ) Improve user location dot appearance across browsers ( #5498 ) (h/t @jasonbarry) \ud83d\udc1b Bug fixes Fix error triggered by == and != expressions #5947 Image sources honor renderWorldCopies #5932 Fix transitions to default fill-outline-color #5953 Fix transitions for light properties #5982 Fix minor symbol collisions on pitched maps #5913 Fix memory leaks after Map#remove() #5943 , #5951 Fix bug wherein GeoJSONSource#setData() caused labels to fade out and back in ( #6002 ) Fix bug that could cause incorrect collisions for labels placed very near to each other at low zoom levels ( #5993 ) Fix bug causing move events to be fired out of sync with actual map movements ( #6005 ) Fix bug wherein Map did not fire mouseover events ( #6000 ] (h/t @jay-manday) Fix bug causing blurry rendering of raster tiles ( #4552 ) Fix potential memory leak caused by removing layers ( #5995 ) Fix bug causing attribution icon to appear incorrectly in compact maps not using Mapbox data ( #6042 ) Fix positioning of default marker element ( #6012 ) (h/t @andrewharvey) 0.43.0 (December 21, 2017) \u26a0\ufe0f Breaking changes It is now an error to attempt to remove a source that is in use #5562 It is now an error if the layer specified by the before parameter to moveLayer does not exist #5679 \"colorSpace\": \"hcl\" now uses shortest-path interpolation for hue #5811 \u2728 Features and improvements Introduce client-side hillshading with raster-dem source type and hillshade layer type #5286 GeoJSON sources take 2x less memory and generate tiles 20%\u2013100% faster #5799 Enable data-driven values for text-font #5698 Enable data-driven values for heatmap-radius #5898 Add getter and setter for offset on marker #5759 Add Map#hasImage #5775 Improve typing for == and != expressions #5840 Made coalesce expressions more useful #5755 Enable implicit type assertions for array types #5738 Improve hash control precision #5767 supported() now returns false on old IE 11 versions that don't support Web Worker blob URLs #5801 Remove flow globals TileJSON and Transferable #5668 Improve performance of image, video, and canvas sources #5845 \ud83d\udc1b Bug fixes Fix popups and markers lag during pan animation #4670 Fix fading of symbol layers caused by setData #5716 Fix behavior of to-rgba and rgba expressions #5778 , #5866 Fix cross-fading of *-pattern and line-dasharray #5791 Fix colorSpace function property #5843 Fix style diffing when changing GeoJSON source properties #5731 Fix missing labels when zooming out from overzoomed tile #5827 Fix missing labels when zooming out and quickly using setData #5837 Handle NaN as input to step and interpolate expressions #5757 Clone property values on input and output #5806 Bump geojson-rewind dependency #5769 Allow setting Marker's popup before LngLat #5893 0.42.2 (November 21, 2017) \ud83d\udc1b Bug fixes Add box-sizing to the \"mapboxgl-ctrl-scale\"-class #5715 Fix rendering in Safari #5712 Fix \"Cannot read property 'hasTransition' of undefined\" error #5714 Fix misplaced raster tiles #5713 Fix raster tile fading #5722 Ensure that an unset filter is undefined rather than null #5727 Restore pitch-with-rotate to nav control #5725 Validate container option in map constructor #5695 Fix queryRenderedFeatures behavior for features displayed in multiple layers #5172 0.42.1 (November 17, 2017) \ud83d\udc1b Bug fixes Workaround for map flashing bug on Chrome 62+ with Intel Iris Graphics 6100 cards #5704 Rerender map when map.showCollisionBoxes is set to false #5673 Fix transitions from property default values #5682 Fix runtime updating of heatmap-color #5682 Fix mobile Safari history.replaceState error #5613 \u2728 Features and improvements Provide default element for Marker class #5661 0.42.0 (November 10, 2017) \u26a0\ufe0f Breaking changes Require that heatmap-color use expressions instead of stop functions #5624 Remove support for validating and migrating v6 styles Remove support for validating v7 styles #5604 Remove support for including {tokens} in expressions for text-field and icon-image #5599 Split curve expression into step and interpolate expressions #5542 Disallow interpolation in expressions for line-dasharray #5519 \u2728 Features and improvements Improve label collision detection #5150 Labels from different sources will now collide with each other Collisions caused by rotation and pitch are now smoothly transitioned with a fade Improved algorithm for fewer erroneous collisions, denser label placement, and greater label stability during rotation Add sqrt expression #5493 \ud83d\udc1b Bug fixes and error reporting improvements Fix viewport calculations for fitBounds when both zooming and padding change #4846 Fix WebGL \"range out of bounds for buffer\" error caused by sorted symbol layers #5620 Fix symbol fading across tile reloads #5491 Change tile rendering order to better match GL Native #5601 Ensure no errors are triggered when calling queryRenderedFeatures on a heatmap layer #5594 Fix bug causing queryRenderedSymbols to return results from different sources #5554 Fix CJK rendering issues #5544 , #5546 Account for circle-stroke-width in queryRenderedFeatures #5514 Fix rendering of fill layers atop raster layers #5513 Fix rendering of circle layers with a circle-stroke-opacity of 0 #5496 Fix memory leak caused by actor callbacks #5443 Fix source cache size for raster sources with tile sizes other than 512px #4313 Validate that zoom expressions only appear at the top level of an expression #5609 Validate that step and interpolate expressions don't have any duplicate stops #5605 Fix rendering for icon-text-fit with a data-driven text-size #5632 Improve validation to catch uses of deprecated function syntax #5667 Permit altitude coordinates in position field in GeoJSON #5608 0.41.0 (October 11, 2017) :warning: Breaking changes Removed support for paint classes #3643 . Instead, use runtime styling APIs or Map#setStyle . Reverted the canvas source contextType option added in 0.40.0 #5449 :bug: Bug fixes Clip raster tiles to avoid tile overlap #5105 Guard for offset edgecase in flyTo #5331 Ensure the map is updated after the sprite loads #5367 Limit animation duration on flyTo with maxDuration option #5349 Make double-tapping on make zoom in by a factor of 2 on iOS #5274 Fix rendering error with translucent raster tiles #5380 Error if invalid 'before' argument is passed to Map#addLayer #5401 Revert CanvasSource intermediary image buffer fix #5449 :sparkles: Features and improvements Use setData operation when diffing geojson sources #5332 Return early from draw calls on layers where opacity=0 #5429 A heatmap layer type is now available. This layer type allows you to visualize and explore massive datasets of points, reflecting the shape and density of data well while also looking beautiful. See the blog post for further details. The value of a style property or filter can now be an expression . Expressions are a way of doing data-driven and zoom-driven styling that provides more flexibility and control, and unifies property and filter syntax. Previously, data-driven and zoom-driven styling relied on stop functions: you specify a feature property and a set of input-output pairs that essentially define a \u201cscale\u201d for how the style should be calculated based on the feature property. For example, the following would set circle colors on a green-to-red scale based on the value of feature.properties.population : \"circle-color\": { \"property\": \"population\", \"stops\": [ [0, \"green\"], [1000000, \"red\"] ] } This approach is powerful, but we\u2019ve seen a number of use cases that stop functions don't satisfy. Expressions provide the flexibility to address use cases like these: Multiple feature properties Using more than one feature property to calculate a given style property. E.g., styling land polygon colors based on both feature.properties.land_use_category and feature.properties.elevation . Arithmetic For some use cases it\u2019s necessary to do some arithmetic on the input data. One example is sizing circles to represent quantitative data. Since a circle\u2019s visual size on the screen is really its area (and A=\u03c0r^2), the right way to scale circle-radius is square_root(feature.properties.input_data_value) . Another example is unit conversions: feature data may include properties that are in some particular unit. Displaying such data in units appropriate to, say, a user\u2019s preference or location, requires being able to do simple arithmetic (multiplication, division) on whatever value is in the data. Conditional logic This is a big one: basic if-then logic, for example to decide exactly what text to display for a label based on which properties are available in the feature or even the length of the name. A key example of this is properly supporting bilingual labels, where we have to decide whether to show local + English, local-only, or English-only, based on the data that\u2019s available for each feature. String manipulation More dynamic control over label text with things like uppercase/lowercase/title case transforms, localized number formatting, etc. Without this functionality, crafting and iterating on label content entails a large data-prep burden. Filters Style layer filters had similar limitations. Moreover, they use a different syntax, even though their job is very similar to that of data-driven styling functions: filters say, \u201chere\u2019s how to look at a feature and decide whether to draw it,\u201d and data-driven style functions say, \u201chere\u2019s how to look at a feature and decide how to size/color/place it.\u201d Expressions provide a unified syntax for defining parts of a style that need to be calculated dynamically from feature data. For information on the syntax and behavior of expressions, please see the documentation . :wrench: Development workflow improvements Made the performance benchmarking runner more informative and statistically robust 0.40.1 (September 18, 2017) :bug: Bug fixes Fix bug causing flicker when zooming in on overzoomed tiles #5295 Remove erroneous call to Tile#redoPlacement for zoom-only or low pitch camera changes #5284 Fix bug where CanvasSource coordinates were flipped and improve performance for non-animated CanvasSource s #5303 Fix bug causing map not to render on some cases on Internet Explorer 11 #5321 Remove upper limit on fill-extrusion-height property #5320 0.40.0 (September 13, 2017) :warning: Breaking changes Map#addImage now requires the image as an HTMLImageElement , ImageData , or object with width , height , and data properties with the same format as ImageData . It no longer accepts a raw ArrayBufferView in the second argument and width and height options in the third argument. canvas sources now require a contextType option specifying the drawing context associated with the source canvas. #5155 :sparkles: Features and improvements Correct rendering for multiple fill-extrusion layers on the same map #5101 Add an icon-anchor property to symbol layers #5183 Add a per-map transformRequest option, allowing users to provide a callback that transforms resource request URLs #5021 Add data-driven styling support for text-max-width #5067 text-letter-spacing #5071 line-join #5020 Add support for SDF icons in Map#addImage() #5181 Added nautical miles unit to ScaleControl #5238 (h/t @fmairesse) Eliminate the map-wide limit on the number of glyphs and sprites that may be used in a style #141 . (Fixed by #5190 , see also mapbox-gl-native#9213 Numerous performance optimizations (including #5108 h/t @pirxpilot) :bug: Bug fixes Add missing documentation for mouseenter, mouseover, mouseleave events #4772 Add missing documentation for Marker#getElement() method #5242 Fix bug wherein removing canvas source with animate=true leaves map in render loop #5097 Fix fullscreen detection on Firefox #5272 Fix z-fighting on overlapping fills within the same layer #3320 Fix handling of fractional values for layer.minzoom #2929 Clarify coordinate ordering in documentation for center option #5042 (h/t @karthikb351) Fix output of stop functions where two stops have the same input value #5020 (h/t @edpop ) Fix bug wherein using Map#addLayer() with an inline source would mutate its input #4040 Fix invalid css keyframes selector #5075 (h/t @aar0nr) Fix GPU-specific bug wherein canvas sources caused an error #4262 Fix a race condition in symbol layer handling that caused sporadic uncaught errors #5185 Fix bug causing line labels to render incorrectly on overzoomed tiles #5120 Fix bug wherein NavigationControl triggered mouse events unexpectedly #5148 Fix bug wherein clicking on the NavigationControl compass caused an error in IE 11 #4784 Remove dependency on GPL-3-licensed fast-stable-stringify module #5152 Fix bug wherein layer-specific an event listener produced an error after its target layer was removed from the map #5145 Fix Marker#togglePopup() failing to return the marker instance #5116 Fix bug wherein a marker's position failed to adapt to the marker element's size changing #5133 Fix rendering bug affecting Broadcom GPUs #5073 :wrench: Development workflow improvements Add (and now require) Flow type annotations throughout the majority of the codebase. Migrate to CircleCI 2.0 #4939 0.39.1 (July 24, 2017) :bug: Bug fixes Fix packaging issue in 0.39.0 #5025 Correctly evaluate enum-based identity functions #5023 0.39.0 (July 21, 2017) :warning: Breaking changes GeolocateControl breaking changes #4479 The option watchPosition has been replaced with trackUserLocation The camera operation has changed from jumpTo (not animated) to fitBounds (animated). An effect of this is the map pitch is no longer reset, although the bearing is still reset to 0. The accuracy of the geolocation provided by the device is used to set the view (previously it was fixed at zoom level 17). The maxZoom can be controlled via the new fitBoundsOptions option (defaults to 15). Anchor Marker s at their center by default #5019 @andrewharvey Increase significantRotateThreshold for the TouchZoomRotateHandler #4971, @dagjomar :sparkles: Features and improvements Improve performance of updating GeoJSON sources #4069, @ezheidtmann Improve rendering speed of extrusion layers #4818 Improve line label legibility in pitched views #4781 Improve line label legibility on curved lines #4853 Add user location tracking capability to GeolocateControl #4479, @andrewharvey New option showUserLocation to draw a \"dot\" as a Marker on the map at the user's location An active lock and background state are introduced with trackUserLocation . When in active lock the camera will update to follow the user location, however if the camera is changed by the API or UI then the control will enter the background state where it won't update the camera to follow the user location. New option fitBoundsOptions to control the camera operation New trackuserlocationstart and trackuserlocationend events New LngLat.toBounds method to extend a point location by a given radius to a LngLatBounds object Include main CSS file in package.json #4809, @tomscholz Add property function (data-driven styling) support for line-width #4773 Add property function (data-driven styling) support for text-anchor #4997 Add property function (data-driven styling) support for text-justify #5000 Add maxTileCacheSize option #4778, @jczaplew Add new icon-pitch-alignment and circle-pitch-alignment properties #4869 #4871 Add Map#getMaxBounds method #4890, @andrewharvey @lamuertepeluda Add option ( localIdeographFontFamily ) to use TinySDF to avoid loading expensive CJK glyphs #4895 If config.API_URL includes a path prepend it to the request URL #4995 Bump supercluster version to expose cluster_id property on clustered sources #5002 :bug: Bug fixes Do not display FullscreenControl on unsupported devices #4838, @stepankuzmin Fix yarn build on Windows machines #4887 Prevent potential memory leaks by dispatching loadData to the same worker every time #4877 Fix bug preventing the rtlTextPlugin from loading before the initial style load #4870 Fix bug causing runtime-stying to not take effect in some situations #4893 Prevent requests of vertical glyphs for labels that can't be verticalized #4720 Fix character detection for Zanabazar Square #4940 Fix LogoControl logic to update correctly, and hide the <div> instead of removing it from the DOM when it is not needed #4842 Fix GeoJSONSource#serialize to include all options Fix error handling in GlyphSource#getSimpleGlyphs #4992 Fix bug causing setStyle to reload raster tiles #4852 Fix bug causing symbol layers not to render on devices with non-integer device pixel ratios #4989 Fix bug where Map#queryRenderedFeatures would error when returning no results #4993 Fix bug where Map#areTilesLoaded would always be false on sourcedata events for reloading tiles #4987 Fix bug causing categorical property functions to error on non-ascending order stops #4996 :hammer_and_wrench: Development workflow changes Use flow to type much of the code base #4629 #4903 #4909 #4910 #4911 #4913 #4915 #4918 #4932 #4933 #4948 #4949 #4955 #4966 #4967 #4973 :muscle: @jfirebaugh @vicapow Use style specification to generate flow type #4958 Explicitly list which files to publish in package.json #4819 @tomscholz Move render test ignores to a separate file #4977 Add code of conduct #5015 :sparkling_heart: 0.38.0 (June 9, 2017) New features :sparkles: Attenuate label size scaling with distance, improving readability of pitched maps #4547 Bug fixes :beetle: Skip rendering for patterned layers when pattern is missing #4687 Fix bug with map failing to rerender after webglcontextlost event #4725 @cdawi Clamp zoom level in flyTo to within the map's specified min- and maxzoom to prevent undefined behavior #4726 @ IvanSanchez Fix wordmark rendering in IE #4741 Fix slight pixelwise symbol rendering bugs caused by incorrect sprite calculations #4737 Prevent exceptions thrown by certain flyTo calls #4761 Fix \"Improve this map\" link #4685 Tweak queryRenderedSymbols logic to better account for pitch scaling #4792 Fix for symbol layers sometimes failing to render, most frequently in Safari #4795 Apply text-keep-upright after text-offset to keep labels upright when intended #4779 [Potentially breaking :warning: but considered a bugfix] Prevent exceptions thrown by empty GeoJSON tiles 4803 Accessibility improvements :sound: Add aria-label to popup close button #4799 @andrewharvey Development workflow + testing improvements :wrench: Fix equality assertion bug in tests #4731 @IvanSanchez Benchmark results page improvements #4746 Require node version >=6.4.0, enabling the use of more ES6 features #4752 Document missing pitchWithRotate option #4800 @simast Move Github-specific Markdown files into subdirectory #4806 @tomscholz 0.37.0 (May 2nd, 2017) :warning: Breaking changes Removed LngLat#wrapToBestWorld New features :rocket: Improve popup/marker positioning #4577 Add Map#isStyleLoaded and Map#areTilesLoaded events #4321 Support offline sprites using file: protocol #4649 @oscarfonts Bug fixes :bug: Fix fullscreen control in Firefox #4666 Fix rendering artifacts that caused tile boundaries to be visible in some cases #4636 Fix default calculation for categorical zoom-and-property functions #4657 Fix scaling of images on retina screens #4645 Rendering error when a transparent image is added via Map#addImage #4644 Fix an issue with rendering lines with duplicate points #4634 Fix error when switching from data-driven styles to a constant paint value #4611 Add check to make sure invalid bounds on tilejson don't error out #4641 Development workflow improvements :computer: Add flowtype interfaces and definitions @vicapow Add stylelinting to ensure mapboxgl- prefix on all classes #4584 @asantos3026 0.36.0 (April 19, 2017) New features :sparkles: Replace LogoControl logo with the new Mapbox logo #4598 Bug fixes :bug: Fix bug with the BoxZoomHandler that made it glitchy if it is enabled after the DragPanHandler #4528 Fix undefined behavior in fill_outline shaders #4600 Fix Camera#easeTo interpolation on pitched maps #4540 Choose property function interpolation method by the property 's type #4614 Development workflow improvements :nerd_face: Fix crash on missing style.json in integration tests gl-style-composite is now executable in line with the other tools @andrewharvey #4595 gl-style-composite utility now throws an error if a name conflict would occur between layers @andrewharvey #4595 0.35.1 (April 12, 2017) Bug fixes :bug: Add .json extension to style-spec require statements for webpack compatibility #4563 @orangemug Fix documentation type for Map#fitBounde #4569 @andrewharvey Fix bug causing {Image,Video,Canvas}Source to throw exception if latitude is outside of +/-85.05113 #4574 Fix bug causing overzoomed raster tiles to disappear from map #4567 Fix bug causing queryRenderedFeatures to crash on polygon features that have an id field. #4581 0.35.0 (April 7, 2017) New features :rocket: Use anisotropic filtering to improve rendering of raster tiles on pitched maps #1064 Add pitchstart and pitchend events #2449 Add an optional layers parameter to Map#on #1002 Add data-driven styling support for text-offset #4495 Add data-driven styling support for text-rotate #3516 Add data-driven styling support for icon-image #4304 Add data-driven styling support for {text,icon}-size #4455 Bug fixes :bug: Suppress error messages in JS console due to missing tiles #1800 Fix bug wherein GeoJSONSource#setData() could cause unnecessary DOM updates #4447 Fix bug wherein Map#flyTo did not respect the renderWorldCopies setting #4449 Fix regression in browserify support # 4453 Fix bug causing poor touch event behavior on mobile devices #4259 Fix bug wherein duplicate stops in property functions could cause an infinite loop #4498 Respect image height/width in addImage api #4531 Fix bug preventing correct behavior of shift+zoom #3334 Fix bug preventing image source from rendering when coordinate area is too large #4550 Show image source on horizontally wrapped worlds #4555 Fix bug in the handling of refreshedExpiredTiles option #4549 Support the TileJSON bounds property #1775 Development workflow improvements :computer: Upgrade flow to 0.42.0 (#4500) 0.34.0 (March 17, 2017) New features :rocket: Add Map#addImage and Map#removeImage API to allow adding icon images at runtime #4404 Simplify non-browserify bundler usage by making the distribution build the main entrypoint #4423 Bug fixes :bug: Fix issue where coincident start/end points of LineStrings were incorrectly rendered as joined #4413 Fix bug causing queryRenderedFeatures to fail in cases where both multiple sources and data-driven paint properties were present #4417 Fix bug where tile request errors caused map.loaded() to incorrectly return false #4425 Testing improvements :white_check_mark: Improve test coverage across several core modules #4432 #4431 #4422 #4244 :bowing_man: 0.33.1 (March 10, 2017) Bug fixes :bug: Prevent Mapbox logo from being added to the map more than once #4386 Add type='button' to FullscreenControl to prevent button from acting as a form submit #4397 Fix issue where map would continue to rotate if Ctrl key is released before the click during a DragRotate event #4389 Remove double options.easing description from the Map#fitBounds documentation #4402 0.33.0 (March 8, 2017) :warning: Breaking changes Automatically add Mapbox wordmark when required by Mapbox TOS #3933 Increase default maxZoom from 20 to 22 #4333 Deprecate tiledata and tiledataloading events in favor of sourcedata and sourcedataloading . #4347 mapboxgl.util is no longer exported #1408 \"type\": \"categorical\" is now required for all categorical functions. Previously, some forms of \"implicitly\" categorical functions worked, and others did not. #3717 :white_check_mark: New features Add property functions support for most symbol paint properties #4074, #4186, #4226 Add ability to specify default property value for undefined or invalid property values used in property functions. #4175 Improve Map#fitBounds to accept different values for top, bottom, left, and right padding #3890 Add a FullscreenControl for displaying a fullscreen map #3977 :beetle: Bug fixes Fix validation error on categorical zoom-and-property functions #4220 Fix bug causing expired resources to be re-requested causing an infinite loop #4255 Fix problem where MapDataEvent#isSourceLoaded always returned false #4254 Resolve an issue where tiles in the source cache were prematurely deleted, resulting in tiles flickering when zooming in and out and #4311 Make sure MapEventData is passed through on calls Map#flyTo #4342 Fix incorrect returned values for Map#isMoving #4350 Fix categorical functions not allowing boolean stop domain values #4195 Fix piecewise-constant functions to allow non-integer zoom levels. #4196 Fix issues with $id in filters #4236 #4237 Fix a race condition with polygon centroid algorithm causing tiles not to load in some cases. #4273 Throw a meaningful error when giving non-array layers parameter to queryRenderedFeatures #4331 Throw a meaningful error when supplying invalid minZoom and maxZoom values #4324 Fix a memory leak when using the RTL Text plugin #4248 Dev workflow changes Merged the Mapbox GL style specification repo to this one (now under src/style-spec and test/unit/style-spec ). 0.32.1 (Jan 26, 2017) Bug Fixes Fix bug causing mapbox-gl-rtl-text plugin to not work #4055 0.32.0 (Jan 26, 2017) Deprecation Notices Style classes are deprecated and will be removed in an upcoming release of Mapbox GL JS. New Features Add Map#isSourceLoaded method #4033 Automatically reload tiles based on their Expires and Cache-Control HTTP headers #3944 Add around=center option to scrollZoom and touchZoomRotate interaction handlers #3876 Add support for mapbox-gl-rtl-text plugin to support right-to-left scripts #3758 Add canvas source type #3765 Add Map#isMoving method #2792 Bug Fixes Fix bug causing garbled text on zoom #3962 Fix bug causing crash in Firefox and Mobile Safari when rendering a large map #4037 Fix bug causing raster tiles to flicker during zoom #2467 Fix bug causing exception when unsetting and resetting fill-outline-color #3657 Fix memory leak when removing raster sources #3951 Fix bug causing exception when when zooming in / out on empty GeoJSON tile #3985 Fix line join artifacts at very sharp angles #4008 0.31.0 (Jan 10 2017) New Features Add renderWorldCopies option to the Map constructor to give users control over whether multiple worlds are rendered in a map #3885 Bug Fixes Fix performance regression triggered when Map pitch or bearing is changed #3938 Fix null pointer exception caused by trying to clear an undefined source #3903 Miscellaneous Incorporate integration tests formerly at mapbox-gl-test-suite into this repository #3834 0.30.0 (Jan 5 2017) New Features Fire an error when map canvas is larger than allowed by gl.MAX_RENDERBUFFER_SIZE #2893 Improve error messages when referencing a nonexistent layer id #2597 Fire an error when layer uses a geojson source and specifies a source-layer #3896 Add inline source declaration syntax #3857 Improve line breaking behavior #3887 Performance Improvements Improve Map#setStyle performance in some cases #3853 Bug Fixes Fix unexpected popup positioning when some offsets are unspecified #3367 Fix incorrect interpolation in functions #3838 Fix incorrect opacity when multiple backgrounds are rendered #3819 Fix exception thrown when instantiating geolocation control in Safari #3844 Fix exception thrown when setting showTileBoundaries with no sources #3849 Fix incorrect rendering of transparent parts of raster layers in some cases #3723 Fix non-terminating render loop when zooming in in some cases #3399 0.29.0 (December 20 2016) New Features Add support for property functions for many style properties on line layers #3033 Make Map#setStyle smoothly transition to the new style #3621 Add styledata , sourcedata , styledataloading , and sourcedataloading events Add isSourceLoaded and source properties to MapDataEvent #3590 Remove \"max zoom\" cap of 20 #3683 Add circle-stroke-* style properties #3672 Add a more helpful error message when the specified container element doesn't exist #3719 Add watchPosition option to GeolocateControl #3739 Add positionOptions option to GeolocateControl #3739 Add aria-label to map canvas #3782 Adjust multipoint symbol rendering behavior #3763 Add support for property functions for icon-offset #3791 Improved antialiasing on pitched lines #3790 Allow attribution control to collapse to an \u24d8 button on smaller screens #3783 Improve line breaking algorithm #3743 Performance Improvements Fix memory leak when calling Map#removeSource #3602 Reduce bundle size by adding custom build of gl-matrix #3734 Improve performance of projection code #3721 Improve performance of style function evaluation #3816 Bug fixes Fix exception thrown when using line-color property functions #3639 Fix exception thrown when removing a layer and then adding another layer with the same id but different type #3655 Fix exception thrown when passing a single point to Map#fitBounds #3655 Fix exception thrown occasionally during rapid map mutations #3681 Fix rendering defects on pitch=0 on some systems #3740 Fix unnecessary CPU usage when displaying a raster layer #3764 Fix bug causing sprite after Map#setStyle #3829 Fix bug preventing Map from emitting a contextmenu event on Windows browsers #3822 0.28.0 (November 17 2016) New features and improvements Performance improvements for Map#addLayer and Map#removeLayer #3584 Add method for changing layer order at runtime - Map#moveLayer #3584 Update vertical punctuation logic to Unicode 9.0 standard #3608 Bug fixes Fix data-driven fill-opacity rendering when using a fill-pattern #3598 Fix line rendering artifacts #3627 Fix incorrect rendering of opaque fills on top of transparent fills #2628 Prevent AssertionErrors from pitching raster layers by only calling Worker#redoPlacement on vector and GeoJSON sources #3624 Restore IE11 compatability #3635 Fix symbol placement for cached tiles #3637 0.27.0 (November 11 2016) \u26a0\ufe0f Breaking changes \u26a0\ufe0f Replace fill-extrude-height and fill-extrude-base properties of fill render type with a separate fill-extrusion type (with corresponding fill-extrusion-height and fill-extrusion-base properties), solving problems with render parity and runtime switching between flat and extruded fills. https://github.com/mapbox/mapbox-gl-style-spec/issues/554 Change the units for extrusion height properties ( fill-extrusion-height , fill-extrusion-base ) from \"magic numbers\" to meters. #3509 Remove mapboxgl.Control class and change the way custom controls should be implemented. #3497 Remove mapboxgl.util functions: inherit , extendAll , debounce , coalesce , startsWith , supportsGeolocation . #3441 #3571 mapboxgl.util is deprecated and will be removed in the next release. #1408 New features and improvements Tons of performance improvements that combined make rendering up to 3 times faster , especially for complex styles. #3485 #3489 #3490 #3491 #3498 #3499 #3501 #3510 #3514 #3515 #3486 #3527 #3574 \u26a1\ufe0f\u26a1\ufe0f\u26a1\ufe0f \ud83c\ude2f Added vertical text writing mode for languages that support it. #3438 \ud83c\ude2f Improved line breaking of Chinese and Japanese text in point-placed labels. #3420 Reduce the default number of worker threads ( mapboxgl.workerCount ) for better performance. #3565 Automatically use categorical style function type when input values are strings. #3384 Improve control buttons accessibility. #3492 Remove geolocation button if geolocation is disabled (e.g. the page is not served through https ). #3571 Added Map#getMaxZoom and Map#getMinZoom methods #3592 Bugfixes Fix several line dash rendering bugs. #3451 Fix intermittent map flicker when using image sources. #3522 Fix incorrect rendering of semitransparent background layers. #3521 Fix broken raster-fade-duration property. #3532 Fix handling of extrusion heights with negative values (by clamping to 0 ). #3463 Fix GeoJSON sources not placing labels/icons correctly after map rotation. #3366 Fix icon/label placement not respecting order for layers with numeric names. #3404 Fix queryRenderedFeatures working incorrectly on colliding labels. #3459 Fix a bug where changing extrusion properties at runtime sometimes threw an error. #3487 #3468 Fix a bug where map.loaded() always returned true when using raster tile sources. #3302 Fix a bug where moving the map out of bounds sometimes threw failed to invert matrix error. #3518 Fixed queryRenderedFeatures throwing an error if no parameters provided. #3542 Fixed a bug where using multiple \\n in a text field resulted in an error. #3570 Misc \ud83d\udc1e Fix npm install mapbox-gl pulling in all devDependencies , leading to an extremely slow install. #3377 Switch the codebase to ES6. #3388 #3408 #3415 #3421 A lot of internal refactoring to make the codebase simpler and more maintainable. Various documentation fixes. #3440 0.26.0 (October 13 2016) New Features & Improvements Add fill-extrude-height and fill-extrude-base style properties (3d buildings) :cityscape: #3223 Add customizable colorSpace interpolation to functions #3245 Add identity function type #3274 Add depth testing for symbols with 'pitch-alignment': 'map' #3243 Add dataloading events for styles and sources #3306 Add Control suffix to all controls :warning: BREAKING CHANGE :warning: #3355 Calculate style layer ref s automatically and get rid of user-specified ref s :warning: BREAKING CHANGE :warning: #3486 Performance Improvements Ensure removing style or source releases all tile resources #3359 Bugfixes Fix bug causing an error when Marker#setLngLat is called #3294 Fix bug causing incorrect coordinates in touchend on Android Chrome #3319 Fix bug causing incorrect popup positioning at top of screen #3333 Restore tile property to data events fired when a tile is removed #3328 Fix bug causing \"Improve this map\" link to not preload map location #3356 0.25.1 (September 30 2016) Bugfixes Fix bug causing attribution to not be shown #3278 Fix bug causing exceptions when symbol text has a trailing newline #3281 0.25.0 (September 29 2016) Breaking Changes Evented#off now require two arguments; omitting the second argument in order to unbind all listeners for an event type is no longer supported, as it could cause unintended unbinding of internal listeners. New Features & Improvements Consolidate undocumented data lifecycle events into data and dataloading events (#3255) Add auto value for style spec properties (#3203) Bugfixes Fix bug causing \"Map#queryRenderedFeatures\" to return no features after map rotation or filter change (#3233) Change webpack build process (#3235) :warning: BREAKING CHANGE :warning: Improved error messages for LngLat#convert (#3232) Fix bug where the tiles field is omitted from the RasterTileSource#serialize method (#3259) Comply with HTML spec by replacing the div within the Navigation control <button> with a span element (#3268) Fix bug causing Marker instances to be translated to non-whole pixel coordinates that caused blurriness (#3270) Performance Improvements Avoid unnecessary style validation (#3224) Share a single blob URL between all workers (#3239) 0.24.0 (September 19 2016) New Features & Improvements Allow querystrings in mapbox:// URLs #3113 Allow \"drag rotate\" interaction to control pitch #3105 Improve performance by decreasing Worker script Blob size #3158 Improve vector tile performance #3067 Decrease size of distributed library by removing package.json #3174 Add support for new lines in text-field #3179 Make keyboard navigation smoother #3190 Make mouse wheel zooming smoother #3189 Add better error message when calling Map#queryRenderedFeatures on nonexistent layer #3196 Add support for imperial units on Scale control #3160 Add map's pitch to URL hash #3218 Bugfixes Fix exception thrown when using box zoom handler #3078 Ensure style filters cannot be mutated by reference #3093 Fix exceptions thrown when opening marker-bound popup by click #3104 Fix bug causing fills with transparent colors and patterns to not render #3107 Fix order of latitudes in Map#getBounds #3081 Fix incorrect evaluation of zoom-and-property functions #2827 #3155 Fix incorrect evaluation of property functions #2828 #3155 Fix bug causing garbled text rendering when multiple maps are rendered on the page #3086 Fix rendering defects caused by Map#setFilter and map rotation on iOS 10 #3207 Fix bug causing image and video sources to disappear when zooming in #3010 0.23.0 (August 25 2016) New Features & Improvements Add support for line-color property functions #2938 Add Scale control #2940 #3042 Improve polygon label placement by rendering labels at the pole of inaccessability #3038 Add Popup offset option #1962 Add Marker#bindPopup method #3056 Performance Improvements Improve performance of pages with multiple maps using a shared WebWorker pool #2952 Bugfixes Make LatLngBounds obey its documented argument order ( southwest , northeast ), allowing bounds across the dateline #2414 :warning: BREAKING CHANGE :warning: Fix bug causing fill-opacity property functions to not render as expected #3061 0.22.1 (August 18 2016) New Features & Improvements Reduce library size by using minified version of style specification #2998 Add a warning when rendering artifacts occur due to too many symbols or glyphs being rendered in a tile #2966 Bugfixes Fix bug causing exception to be thrown by Map#querySourceFeatures #3022 Fix bug causing Map#loaded to return true while there are outstanding tile updates #2847 0.22.0 (August 11 2016) Breaking Changes The GeoJSONSource , VideoSource , ImageSource constructors are now private. Please use map.addSource({...}) to create sources and map.getSource(...).setData(...) to update GeoJSON sources. #2667 Map#onError has been removed. You may catch errors by listening for the error event. If no listeners are bound to error , error messages will be printed to the console. #2852 New Features & Improvements Increase max glyph atlas size to accomodate alphabets with large numbers of characters #2930 Add support for filtering features on GeoJSON / vector tile $id #2888 Update geolocate icon #2973 Add a close event to Popup s #2953 Add a offset option to Marker #2885 Print error events without any listeners to the console #2852 Refactored Source interface to prepare for custom source types #2667 Bugfixes Fix opacity property-functions for fill layers #2971 Fix DataCloneError in Firefox and IE11 #2559 Fix bug preventing camera animations from being triggered in moveend listeners #2944 Fix bug preventing fill-outline-color from being unset #2964 Fix webpack support #2887 Prevent buttons in controls from acting like form submit buttons #2935 Fix bug preventing map interactions near two controls in the same corner #2932 Fix crash resulting for large style batch queue #2926 0.21.0 (July 13 2016) Breaking Changes GeoJSON polygon inner rings are now rewound for compliance with the v2 vector tile . This may affect some uses of line-offset , reversing the direction of the offset. #2889 New Features & Improvements Add text-pitch-alignment style property #2668 Allow query parameters on mapbox:// URLs #2702 Add icon-text-fit and icon-text-fit-padding style properties #2720 Enable property functions for icon-rotate #2738 Enable property functions for fill-opacity #2733 Fire Map#mouseout events #2777 Allow query parameters on all sprite URLs #2772 Increase sprite atlas size to 1024px square, allowing more and larger sprites #2802 Add Marker class #2725 #2810 Add {quadkey} URL parameter #2805 Add circle-pitch-scale style property #2821 Bugfixes Fix rendering of layers with large numbers of features #2794 Fix exceptions thrown during drag-rotate interactions #2840 Fix error when adding and removing a layer within the same update cycle #2845 Fix false \"Geometry exceeds allowed extent\" warnings #2568 Fix Map#loaded returning true while there are outstanding tile updates #2847 Fix style validation error thrown while removing a filter #2847 Fix event data object not being passed for double click events #2814 Fix multipolygons disappearing from map at certain zoom levels #2704 Fix exceptions caused by queryRenderedFeatures in Safari and Firefox #2822 Fix mapboxgl#supported() returning true in old versions of IE11 mapbox/mapbox-gl-supported#1 0.20.1 (June 21 2016) Bugfixes Fixed exception thrown when changing *-translate properties via setPaintProperty (#2762) 0.20.0 (June 10 2016) New Features & Improvements Add limited WMS support #2612 Add workerCount constructor option #2666 Improve performance of locationPoint and pointLocation #2690 Remove \"Not using VertexArrayObject extension\" warning messages #2707 Add version property to mapboxgl #2660 Support property functions in circle-opacity and circle-blur #2693 Bugfixes Fix exception thrown by \"drag rotate\" handler #2680 Return an empty array instead of an empty object from queryRenderedFeatures #2694 Fix bug causing map to not render in IE 0.19.1 (June 2 2016) Bugfixes Fix rendering of polygons with more than 35k vertices #2657 0.19.0 (May 31 2016) New Features & Improvements Allow use of special characters in property field names #2547 Improve rendering speeds on fill layers #1606 Add data driven styling support for fill-color and fill-outline-color #2629 Add has and !has filter operators mapbox/feature-filter#15 Improve keyboard handlers with held-down keys #2530 Support 'tms' tile scheme #2565 Add trackResize option to Map #2591 Bugfixes Scale circles when map is displayed at a pitch #2541 Fix background pattern rendering bug #2557 Fix bug that prevented removal of a fill-pattern from a fill layer #2534 Fix line-pattern and fill-pattern rendering #2596 Fix some platform specific rendering bugs #2553 Return empty object from queryRenderedFeatures before the map is loaded #2621 Fix \"there is no texture bound to the unit 1\" warnings #2509 Allow transitioned values to be unset #2561 0.18.0 (April 13 2016) New Features & Improvements Implement zoom-and-property functions for circle-color and circle-size #2454 Dedupe attributions that are substrings of others #2453 Misc performance improvements #2483 #2488 Bugfixes Fix errors when unsetting and resetting a style property #2464 Fix errors when updating paint properties while using classes #2496 Fix errors caused by race condition in unserializeBuckets #2497 Fix overzoomed tiles in wrapped worlds #2482 Fix errors caused by mutating a filter object after calling Map#setFilter #2495 0.17.0 (April 13 2016) Breaking Changes Remove map.batch in favor of automatically batching style mutations (i.e. calls to Map#setLayoutProperty , Map#setPaintProperty , Map#setFilter , Map#setClasses , etc.) and applying them once per frame, significantly improving performance when updating the style frequently #2355 #2380 Remove util.throttle #2345 New Features & Improvements Improve performance of all style mutation methods by only recalculating affected properties #2339 Improve fading of labels and icons #2376 Improve rendering performance by reducing work done on the main thread #2394 Validate filters passed to Map#queryRenderedFeatures and Map#querySourceFeatures #2349 Display a warning if a vector tile's geometry extent is larger than supported #2383 Implement property functions (i.e. data-driven styling) for circle-color and circle-size #1932 Add Popup#setDOMContent method #2436 Bugfixes Fix a performance regression caused by using 1 WebWorker instead of # cpus - 1 WebWorker s, slowing down tile loading times #2408 Fix a bug in which Map#queryRenderedFeatures would sometimes return features that had been removed #2353 Fix clusterMaxZoom option on GeoJSONSource not working as expected #2374 Fix anti-aliased rendering for pattern fills #2372 Fix exception caused by calling Map#queryRenderedFeatures or Map#querySourceFeatures with no arguments Fix exception caused by calling Map#setLayoutProperty for text-field or icon-image #2407 0.16.0 (March 24 2016) Breaking Changes Replace Map#featuresAt and Map#featuresIn with Map#queryRenderedFeatures and map.querySourceFeatures (#2224) Replace featuresAt and featuresIn with queryRenderedFeatures Make queryRenderedFeatures synchronous, remove the callback and use the return value. Rename layer parameter to layers and make it an array of layer names. Remove the radius parameter. radius was used with featuresAt to account for style properties like line-width and circle-radius . queryRenderedFeatures accounts for these style properties. If you need to query a larger area, use a bounding box query instead of a point query. Remove the includeGeometry parameter because queryRenderedFeatures always includes geometries. Map#debug is renamed to Map#showTileBoundaries (#2284) Map#collisionDebug is renamed to Map#showCollisionBoxes (#2284) New Features & Improvements Improve overall rendering performance. (#2221) Improve performance of GeoJSONSource#setData . (#2222) Add Map#setMaxBounds method (#2234) Add isActive and isEnabled methods to interaction handlers (#2238) Add Map#setZoomBounds method (#2243) Add touch events (#2195) Add map.queryRenderedFeatures to query the styled and rendered representations of features (#2224) Add map.querySourceFeatures to get features directly from vector tiles, independent of the style (#2224) Add mapboxgl.Geolocate control (#1939) Make background patterns render seamlessly across tile boundaries (#2305) Bugfixes Fix calls to setFilter , setLayoutProperty , and setLayerZoomRange on ref children (#2228) Fix undefined bucket errors after setFilter calls (#2244) Fix bugs causing hidden symbols to be rendered (#2246, #2276) Fix raster flickering (#2236) Fix queryRenderedFeatures precision at high zoom levels (#2292) Fix holes in GeoJSON data caused by unexpected winding order (#2285) Fix bug causing deleted features to be returned by queryRenderedFeatures (#2306) Fix bug causing unexpected fill patterns to be rendered (#2307) Fix popup location with preceding sibling elements (#2311) Fix polygon anti-aliasing (#2319) Fix slivers between non-adjacent polygons (#2319) Fix keyboard shortcuts causing page to scroll (#2312) 0.15.0 (March 1 2016) New Features & Improvements Add ImageSource#setCoordinates and VideoSource#setCoordinates (#2184) Bugfixes Fix flickering on raster layers (#2211) Fix browser hang when zooming quickly on raster layers (#2211) 0.14.3 (Feb 25 2016) New Features & Improvements Improve responsiveness of zooming out by using cached parent tiles (#2168) Improve contextual clues on style API validation (#2170) Improve performance of methods including setData (#2174) Bugfixes Fix incorrectly sized line dashes (#2099) Fix bug in which in feature filter drops features (#2166) Fix bug preventing Map#load from firing when tile \"Not Found\" errors occured (#2176) Fix rendering artifacts on mobile GPUs (#2117) 0.14.2 (Feb 19 2016) Bugfixes Look for loaded parent tiles in cache Set tile cache size based on viewport size (#2137) Fix tile render order for layer-by-layer Remove source update throttling (#2139) Make panning while zooming more linear (#2070) Round points created during bucket creation (#2067) Correct bounds for a rotated or tilted map (#1842) Fix overscaled featuresAt (#2103) Allow using tileSize: 512 as a switch to trade retina support for 512px raster tiles Fix the serialization of paint classes (#2107) Fixed bug where unsetting style properties could mutate the value of other style properties (#2105) Less slanted dashed lines near sharp corners (#967) Fire map#load if no initial style is set (#2042) 0.14.1 (Feb 10 2016) Bugfixes Fix incorrectly rotated symbols along lines near tile boundries (#2062) Fix broken rendering when a fill layer follows certain symbol layers (#2092) 0.14.0 (Feb 8 2016) Breaking Changes Switch GeoJSONSource clustering options from being measured in extent-units to pixels (#2026) New Features & Improvements Improved error message for invalid colors (#2006) Added support for tiles with variable extents (#2010) Improved filter performance and maximum size (#2024) Changed circle rendering such that all geometry nodes are drawn, not just the geometry's outer ring (#2027) Added Map#getStyle method (#1982) Bugfixes Fixed bug causing WebGL contexts to be \"used up\" by calling mapboxgl.supported() (#2018) Fixed non-deterministic symbol z-order sorting (#2023) Fixed garbled labels while zooming (#2012) Fixed icon jumping when touching trackpad with two fingers (#1990) Fixed overzoomed collision debug labels (#2033) Fixed dashes sliding along their line during zooming (#2039) Fixed overscaled minzoom setting for GeoJSON sources (#1651) Fixed overly-strict function validation for duplicate stops (#2075) Fixed crash due to performance.now not being present on some browsers (#2056) Fixed the unsetting of paint properties (#2037) Fixed bug causing multiple interaction handler event listeners to be attached (#2069) Fixed bug causing only a single debug box to be drawn (#2034) 0.13.1 (Jan 27 2016) Bugfixes Fixed broken npm package due to outdated bundled modules 0.13.0 (Jan 27 2016) Bugfixes Fixed easeTo pan, zoom, and rotate when initial rotation != 0 (#1950) Fixed rendering of tiles with an extent != 4096 (#1952) Fixed missing icon collision boxes (#1978) Fixed null Tile#buffers errors (#1987) New Features & Improvements Added symbol-avoid-edges style property (#1951) Improved symbol-max-angle check algorithm (#1959) Added marker clustering! (#1931) Added zoomstart, zoom, and zoomend events (#1958) Disabled drag on mousedown when using boxzoom (#1907) 0.12.4 (Jan 19 2016) Bugfixes Fix elementGroups null value errors (#1933) Fix some glyph atlas overflow cases (#1923) 0.12.3 (Jan 14 2016) API Improvements Support inline attribution options in map options (#1865) Improve flyTo options (#1854, #1429) Bugfixes Fix flickering with overscaled tiles (#1921) Remove Node.remove calls for IE browser compatibility (#1900) Match patterns at tile boundaries (#1908) Fix Tile#positionAt, fix query tests (#1899) Fix flickering on streets (#1875) Fix text-max-angle property (#1870) Fix overscaled line patterns (#1856) Fix patterns and icons for mismatched pixelRatios (#1851) Fix missing labels when text size 0 at max zoom (#1809) Use linear interp when pixel ratios don't match (#1601) Fix blank areas, flickering in raster layers (#1876, #675) Fix labels slipping/cropping at tile bounds (#757) UX Improvements Improve touch handler perceived performance (#1844) 0.12.2 (Dec 22 2015) API Improvements Support LngLat.convert([w, s, e, n]) (#1812) Invalid GeoJSON is now handled better Bugfixes Fixed Popup#addTo when the popup is already open (#1811) Fixed warping when rotating / zooming really fast Map#flyTo now flies across the antimeridan if shorter (#1853) 0.12.1 (Dec 8 2015) Breaking changes Reversed the direction of line-offset (#1808) Renamed Pinch interaction handler to TouchZoomRotate (#1777) Made Map#update and Map#render private methods (#1798) Made Map#remove remove created DOM elements (#1789) API Improvements Added an method to disable touch rotation (#1777) Added a position option for Attribution (#1689) Bugfixes Ensure tile loading errors are properly reported (#1799) Ensure re-adding a previously removed pop-up works (#1477) UX Improvements Don't round zoom level during double-click interaction (#1640) 0.12.0 (Dec 2 2015) API Improvements Added line-offset style property (#1778) 0.11.5 (Dec 1 2015) Bugfixes Fixed unstable symbol layer render order when adding / removing layers (#1558) Fire map loaded event even if raster tiles have errors Fix panning animation during easeTo with zoom change Fix pitching animation during flyTo Fix pitching animation during easeTo Prevent rotation from firing mouseend events (#1104) API Improvements Fire mousedown and mouseup events (#1411) Fire movestart and moveend when panning (#1658) Added drag events (#1442) Request webp images for mapbox:// raster tiles in chrome (#1725) UX Improvements Added inertia to map rotation (#620) 0.11.4 (Nov 16 2015) Bugfixes Fix alpha blending of alpha layers (#1684) 0.11.3 (Nov 10 2015) Bugfixes Fix GeoJSON rendering and performance (#1685) UX Improvements Use SVG assets for UI controls (#1657) Zoom out with shift + dblclick (#1666) 0.11.2 (Oct 29 2015) Misc performance improvements Bugfixes Fix sprites on systems with non-integer devicePixelRatio s (#1029 #1475 #1476) Fix layer minZoom being ignored if not less than source maxZoom Fix symbol placement at the start of a line (#1461) Fix raster-opacity on non-tile sources (#1270) Ignore boxzoom on shift-click (#1655) UX Improvements Enable line breaks on common punctuation (#1115) API Improvements Add toString and toArray methods to LngLat, LngLatBounds (#1571) Add Transform#resize method Add Map#getLayer method (#1183) Add Transform#unmodified property (#1452) Propagate WebGL context events (#1612) 0.11.1 (Sep 30 2015) Bugfixes Add statistics and checkboxes to debug page Fix Map#featuresAt for non-4096 vector sources (#1529) Don't fire mousemove on drag-pan Fix maxBounds constrains (#1539) Fix maxBounds infinite loop (#1538) Fix memory leak in worker Assert valid TileCoord , fix wrap calculation in TileCoord#cover (#1483) Abort raster tile load if not in viewport (#1490) API Improvements Add Map event listeners for mouseup , contextmenu (right click) (#1532) 0.11.0 (Sep 11 2015) API Improvements Add Map#featuresIn : a bounding-box feature query Emit stylesheet validation errors (#1436) UX Improvements Handle v8 style center , zoom , bearing , pitch (#1452) Improve circle type styling (#1446) Improve dashed and patterned line antialiasing Bugfixes Load images in a way that respects Cache-Control headers Filter for rtree matches to those crossing bbox Log errors by default (#1463) Fixed modification of text-size via setLayoutProperty (#1451) Throw on lat > 90 || < -90. (#1443) Fix circle clipping bug (#1457) 0.10.0 (Aug 21 2015) Breaking changes Switched to [longitude, latitude] coordinate order, matching GeoJSON. We anticipate that mapbox-gl-js will be widely used with GeoJSON, and in the long term having a coordinate order that is consistent with GeoJSON will lead to less confusion and impedance mismatch than will a [latitude, longitude] order. The following APIs were renamed: 1 2 3 4 5 * `LatLng` was renamed to `LngLat` * `LatLngBounds` was renamed to `LngLatBounds` * `Popup#setLatLng` was renamed to `Popup#setLngLat` * `Popup#getLatLng` was renamed to `Popup#getLngLat` * The `latLng` property of Map events was renamed `lngLat` The following APIs now expect array coordinates in [longitude, latitude] order: 1 2 3 4 5 6 7 8 * `LngLat.convert` * `LngLatBounds.convert` * `Popup#setLngLat` * The `center` and `maxBounds` options of the `Map` constructor * The arguments to `Map#setCenter` , `Map#fitBounds` , `Map#panTo` , and `Map#project` * The `center` option of `Map#jumpTo` , `Map#easeTo` , and `Map#flyTo` * The `around` option of `Map#zoomTo` , `Map#rotateTo` , and `Map#easeTo` * The `coordinates` properties of video and image sources Updated to mapbox-gl-style-spec v8.0.0 ( Changelog ). Styles are now expected to be version 8. You can use the gl-style-migrate utility to update existing styles. The format for mapbox:// style and glyphs URLs has changed. For style URLs, you should now use the format mapbox://styles/:username/:style . The :style portion of the URL no longer contains a username. For font URLs, you should now use the format mapbox://fonts/:username/{fontstack}/{range}.pbf . Mapbox default styles are now hosted via the Styles API rather than www.mapbox.com . You can make use of the Styles API with a mapbox:// style URL pointing to a v8 style, e.g. mapbox://styles/mapbox/streets-v8 . The v8 satellite style ( mapbox://styles/mapbox/satellite-v8 ) is now a plain satellite style, and not longer supports labels or contour lines via classes. For a labeled satellite style, use mapbox://styles/mapbox/satellite-hybrid . Removed mbgl.config.HTTP_URL and mbgl.config.FORCE_HTTPS ; https is always used when connecting to the Mapbox API. Renamed mbgl.config.HTTPS_URL to mbgl.config.API_URL . Bugfixes Don't draw halo when halo-width is 0 (#1381) Reverted shader changes that degraded performance on IE API Improvements You can now unset layout and paint properties via the setLayoutProperty and setPaintProperty APIs by passing undefined as a property value. The layer option of featuresAt now supports an array of layers. 0.9.0 (Jul 29 2015) glyphs URL now normalizes without the /v4/ prefix for mapbox:// urls. Legacy behavior for mapbox://fontstacks is still maintained (#1385) Expose geojson-vt options for GeoJSON sources (#1271) bearing snaps to \"North\" within a tolerance of 7 degrees (#1059) Now you can directly mutate the minzoom and maxzoom layer properties with map.setLayerZoomRange(layerId, minzoom, maxzoom) Exposed mapboxgl.Control , a base class used by all UI controls Refactored handlers to be individually included in Map options, or enable/disable them individually at runtime, e.g. map.scrollZoom.disable() . New feature: Batch operations can now be done at once, improving performance for calling multiple style functions: (#1352) js style.batch(function(s) { s.addLayer({ id: 'first', type: 'symbol', source: 'streets' }); s.addLayer({ id: 'second', type: 'symbol', source: 'streets' }); s.addLayer({ id: 'third', type: 'symbol', source: 'terrain' }); s.setPaintProperty('first', 'text-color', 'black'); s.setPaintProperty('first', 'text-halo-color', 'white'); }); * Improved documentation * featuresAt performance improvements by exposing includeGeometry option * Better label placement along lines (#1283) * Improvements to round linejoins on semi-transparent lines (mapbox/mapbox-gl-native#1771) * Round zoom levels for raster tile loading (2a2aec) * Source#reload cannot be called if source is not loaded (#1198) * Events bubble to the canvas container for custom overlays (#1301) * Move handlers are now bound on mousedown and touchstart events * map.featuresAt() now works across the dateline 0.8.1 (Jun 16 2015) No code changes; released only to correct a build issue in 0.8.0. 0.8.0 (Jun 15 2015) Breaking changes map.setView(latlng, zoom, bearing) has been removed. Use map.jumpTo(options) instead: js map.setView([40, -74.50], 9) // 0.7.0 or earlier map.jumpTo({center: [40, -74.50], zoom: 9}); // now * map.easeTo and map.flyTo now accept a single options object rather than positional parameters: js map.easeTo([40, -74.50], 9, null, {duration: 400}); // 0.7.0 or earlier map.easeTo({center: [40, -74.50], zoom: 9, duration: 400}); // now * mapboxgl.Source is no longer exported. Use map.addSource() instead. See the GeoJSON line or GeoJSON markers examples. * mapboxgl.util.supported() moved to mapboxgl.supported() . UX improvements Add perspective rendering (#1049) Better and faster labelling (#1079) Add touch interactions support on mobile devices (#949) Viewport-relative popup arrows (#1065) Normalize mousewheel zooming speed (#1060) Add proper handling of GeoJSON features that cross the date line (#1275) Sort overlapping symbols in the y direction (#470) Control buttons are now on a 30 pixel grid (#1143) Improve GeoJSON processing performance API Improvements Switch to JSDoc for documentation Bundling with browserify is now supported Validate incoming map styles (#1054) Add Map setPitch getPitch Add Map dblclick event. (#1168) Add Map getSource (660a8c1) Add Map setFilter and getFilter (#985) Add Map failIfMajorPerformanceCaveat option (#1082) Add Map preserveDrawingBuffer option (#1232) Add VideoSource getVideo() (#1162) Support vector tiles with extents other than 4096 (#1227) Use a DOM hierarchy that supports evented overlays (#1217) Pass latLng to the event object (#1068) UX Bugfixes Fix rendering glitch on iOS 8 (#750) Fix line triangulation errors (#1120, #992) Support unicode range 65280-65535 (#1108) Fix cracks between fill patterns (#972) Fix angle of icons aligned with lines (37a498a) Fix dashed line bug for overscaled tiles (#1132) Fix icon artifacts caused by sprite neighbors (#1195) API Bugfixes Don't fire spurious moveend events on mouseup (#1107) Fix a race condition in featuresAt (#1220) Fix for brittle fontstack name convention (#1070) Fix broken Popup setHTML (#1272) Fix an issue with cross-origin image requests (#1269) 0.7.0 (Mar 3 2015) Breaking Rename Map hover event to mousemove . Change featuresAt to return GeoJSON objects, including geometry (#1010) Remove Map canvas and container properties, add getCanvas and getContainer methods instead UX Improvements Improve line label density Add boxzoom interaction (#1038) Add keyboard interaction (#1034) Faster GeoJSONSource setData without flickering (#973) API Improvements Add Popup component (#325) Add layer API (#1022) Add filter API (#985) More efficient filter API (#1018) Accept plain old JS object for addSource (#1021) Reparse overscaled tiles Bugfixes Fix featuresAt for LineStrings (#1006) Fix tileSize argument to GeoJSON worker (#987) Remove extraneous files from the npm package (#1024) Hide \"improve map\" link in print (#988) 0.6.0 (Feb 9 2015) Bugfixes Add wrapped padding to sprite for repeating images (#972) Clear color buffers before rendering (#966) Make line-opacity work with line-image (#970) event.toElement fallback for Firefox (#932) skip duplicate vertices at ends of lines (#776) allow characters outside \\w to be used in token Clear old tiles when new GeoJSON is loaded (#905) Improvements Added map.setPaintProperty() , map.getPaintProperty() , map.setLayoutProperty() , and map.getLayoutProperty() . Switch to ESLint and more strict code rules (#957) Grab 2x raster tiles if retina (#754) Support for mapbox:// style URLs (#875) Breaking Updated to mapbox-gl-style-spec v7.0.0 ( Changelog ). Styles are now expected to be version 7. You can use the gl-style-migrate utility to update existing styles. HTTP_URL and HTTPS_URL config options must no longer include a /v4 path prefix. addClass , removeClass , setClasses , hasClass , and getClasses are now methods on Map. Style#cascade is now private, pending a public style mutation API (#755). The format for featuresAt results changed. Instead of result-per-geometry-cross-layer, each result has a layers array with all layers that contain the feature. This avoids duplication of geometry and properties in the result set. 0.5.2 (Jan 07 2015) Bugfixes Remove tiles for unused sources (#863) Fix fill pattern alignment Improvements Add GeoJSONSource maxzoom option (#760) Return ref layers in featuresAt (#847) Return any extra layer keys provided in the stylesheet in featuresAt Faster protobuf parsing 0.5.1 (Dec 19 2014) Bugfixes Fix race conditions with style loading/rendering Fix race conditions with setStyle Fix map.remove() Fix featuresAt properties 0.5.0 (Dec 17 2014) Bugfixes Fix multiple calls to setStyle Improvements featuresAt now returns additional information Complete style/source/tile event suite: style.load, style.error, style.change, source.add, source.remove, source.load, source.error, source.change, tile.add, tile.remove, tile.load, tile.error Vastly improved performance and correctness for GeoJSON sources Map#setStyle accepts a style URL Support {prefix} in tile URL templates Provide a source map with minified source Breaking Results format for featuresAt changed 0.4.2 (Nov 14 2014) Bugfixes Ensure only one easing is active at a time (#807) Don't require style to perform easings (#817) Fix raster tiles sometimes not showing up (#761) Improvements Internet Explorer 11 support (experimental) 0.4.1 (Nov 10 2014) Bugfixes Interpolate to the closest bearing when doing rotation animations (#818) 0.4.0 (Nov 4 2014) Breaking Updated to mapbox-gl-style-spec v6.0.0 ( Changelog ). Styles are now expected to be version 6. You can use the gl-style-migrate utility to update existing styles. 0.3.2 (Oct 23 2014) Bugfixes Fix worker initialization with deferred or async scripts Improvements Added map.remove() CDN assets are now served with gzip compression 0.3.1 (Oct 06 2014) Bugfixes Fixed iteration over arrays with for/in Made browserify deps non-dev (#752) 0.3.0 (Sep 23 2014) Breaking Updated to mapbox-gl-style-spec v0.0.5 ( Changelog ). Styles are now expected to be version 5. You can use the gl-style-migrate utility to update existing styles. Removed support for composite layers for performance reasons. #523 raster-hue-rotate units are now degrees. Improvements Added LatLng#wrap Added support for Mapbox fontstack API. Added support for remote, non-Mapbox TileJSON sources and inline TileJSON sources (#535, #698). Added support for symbol-avoid-edges property to allow labels to be placed across tile edges. Fixed mkdir issue on Windows (#674). Fixed drawing beveled line joins without overlap. Bugfixes Fixed performance when underzooming a layer's minzoom. Fixed raster-opacity for regular raster layers. Fixed various corner cases of easing functions. Do not modify original stylesheet (#728). Inherit video source from source (#699). Fixed interactivity for geojson layers. Stop dblclick on navigation so the map does not pan (#715). 0.2.2 (Aug 12 2014) Breaking map.setBearing() no longer supports a second argument. Use map.rotateTo with an offset option and duration 0 if you need to rotate around a point other than the map center. Improvements Improved GeoJSONSource to also accept URL as data option, eliminating a huge performance bottleneck in case of large GeoJSON files. #669 #671 Switched to a different fill outlines rendering approach. #668 Made the minified build 12% smaller gzipped (66 KB now). Added around option to Map zoomTo / rotateTo . Made the permalink hash more compact. Bevel linejoins no longer overlap and look much better when drawn with transparency. Bugfixes Fixed the broken minified build . #679 Fixed blurry icons rendering. #666 Fixed util.supports WebGL detection producing false positives in some cases. #677 Fixed invalid font configuration completely blocking tile rendering. #662 Fixed Map project / unproject to properly accept array-form values. Fixed sprite loading race condition. #593 Fixed GeoJSONSource setData not updating the map until zoomed or panned. #676 0.2.1 (Aug 8 2014) Breaking Changed Navigation control signature: now it doesn't need map in constructor and gets added with map.addControl(nav) or nav.addTo(map) . Updated CSS classes to have consistent naming prefixed with mapboxgl- . Improvements Added attribution control (present by default, disable by passing attributionControl: false in options). Added rotation by dragging the compass control. Added grabbing cursors for the map by default. Added util.inherit and util.debounce functions. Changed the default debug page style to OSM Bright. Token replacements now support dashes. Improved navigation control design. Bugfixes Fixed compass control to rotate its icon with the map. Fixed navigation control cursors. Fixed inertia going to the wrong direction in a rotated map. Fixed inertia race condition where error was sometimes thrown after erratic panning/zooming. 0.2.0 (Aug 6 2014) First public release.","title":"CHANGELOG"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#191","text":"","title":"1.9.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes","text":"Fix a bug #9477 in Map#fitBounds(..) wherein the padding passed to options would get applied twice. Fix rendering bug #9479 caused when data-driven *-pattern properties reference images added with Map#addImage(..) . Fix a bug #9468 in which an exception would get thrown when updating symbol layer paint property using setPaintProperty .","title":"\ud83d\udc1e Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#190","text":"With this release, we're adding a new changelog policy to our contribution guidelines. This release also fixes several long-standing bugs and unintentional rendering behavior with line-pattern . The fixes come with a visual change to how patterns added with line-pattern scale. Previously, patterns that became larger than the line would be clipped, sometimes distorting the pattern, particularly on mobile and retina devices. Now the pattern will be scaled to fit under all circumstances. #9266 showcases examples of the visual differences. For more information and to provide feedback on this change, see #9394 .","title":"1.9.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features","text":"Add within expression for testing whether an evaluated feature lies within a given GeoJSON object ( #9352 ). We are aware of an edge case in which points with wrapped coordinates (e.g. longitude -185) are not evaluated properly. See ( #9442 ) for more information. An example of the within expression: \"icon-opacity\": [\"case\", [\"==\", [\"within\", \"some-polygon\"], true], 1, [\"==\", [\"within\", \"some-polygon\"], false], 0] Map API functions such as easeTo and flyTo now support padding: PaddingOptions which lets developers shift a map's center of perspective when building floating sidebars ( #8638 )","title":"\u2728 Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements","text":"Results from queryRenderedFeatures now have evaluated property values rather than raw expressions ( #9198 ) Improve scaling of patterns used in line-pattern on all device resolutions and pixel ratios ( #9266 ) Slightly improve GPU memory footprint ( #9377 ) LngLatBounds.extend is more flexible because it now accepts objects with lat and lon properties as well as arrays of coordinates ( #9293 ) Reduce bundle size and improve visual quality of showTileBoundaries debug text ( #9267 )","title":"\ud83c\udf4f Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_1","text":"Correctly adjust patterns added with addImage(id, image, pixelRatio) by the asset pixel ratio, not the device pixel ratio ( #9372 ) Allow needle argument to in expression to be false ( #9295 ) Fix exception thrown when trying to set feature-state for a layer that has been removed, fixes #8634 ( #9305 ) Fix a bug where maps were not displaying inside elements with dir=rtl ( #9332 ) Fix a rendering error for very old versions of Chrome (ca. 2016) where text would appear much bigger than intended ( #9349 ) Prevent exception resulting from line-dash-array of empty length ( #9385 ) Fix a bug where icon-image expression that evaluates to an empty string ( '' ) produced a warning ( #9380 ) Fix a bug where certain popup methods threw errors when accessing the container element before it was created, fixes #9429 ( #9433 )","title":"\ud83d\udc1e Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#180","text":"","title":"1.8.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements","text":"Reduce size of line atlas by removing unused channels ( #9232 ) Prevent empty buffers from being created for debug data when unused ( #9237 ) Add space between distance and unit in scale control ( #9276 ) (h/t gely ) and ( #9284 ) (h/t pakastin ) Add a showAccuracyCircle option to GeolocateControl that shows the accuracy of the user's location as a transparent circle. Mapbox GL JS will show this circle by default. ( #9253 ) (h/t Meekohi ) Implemented a new tile coverage algorithm to enable level-of-detail support in a future release ( #8975 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_2","text":"line-dasharray is now ignored correctly when line-pattern is set ( #9189 ) Fix line distances breaking gradient across tile boundaries ( #9220 ) Fix a bug where lines with duplicate endpoints could disappear at zoom 18+ ( #9218 ) Fix a bug where Ctrl-click to drag rotate the map was disabled if the Alt, Cmd or Windows key is also pressed ( #9203 ) Pass errors to getClusterExpansionZoom , getClusterChildren , and getClusterLeaves callbacks ( #9251 ) Fix a rendering performance regression ( #9261 ) Fix visual artifact for line-dasharray ( #9246 ) Fixed a bug in the GeolocateControl which resulted in an error when trackUserLocation was false and the control was removed before the Geolocation API had returned a location ( #9291 ) Fix promoteId for line layers ( #9210 ) Improve accuracy of distance calculations ( #9202 ) (h/t Meekohi )","title":"\ud83d\udc1e Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#170","text":"","title":"1.7.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features_1","text":"Add promoteId option to use a feature property as ID for feature state ( #8987 ) Add a new constructor option to mapboxgl.Popup , closeOnMove , that closes the popup when the map's position changes ( #9163 ) Allow creating a map without a style (an empty one will be created automatically) ( h/t @stepankuzmin ) ( #8924 ) map.once() now allows specifying a layer id as a third parameter making it consistent with map.on() ( #8875 )","title":"\u2728 Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_1","text":"Improve performance of raster layers on large screens ( #9050 ) Improve performance for hillshade and raster layers by implementing a progressive enhancement that utilizes ImageBitmap and OffscreenCanvas ( #8845 ) Improve performance for raster tile rendering by using the stencil buffer ( #9012 ) Update symbol-avoid-edges documentation to acknowledge the existence of global collision detection ( #9157 ) Remove reference to in function which has been replaced by the in expression ( #9102 )","title":"\ud83c\udf4f Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_3","text":"Change the type of tile id key to string to prevent hash collisions ( #8979 ) Prevent changing bearing via URL hash when rotation is disabled ( #9156 ) Fix URL hash with no bearing causing map to fail to load ( #9170 ) Fix bug in GeolocateControl where multiple instances of the control on one page may result in the user location not being updated ( #9092 ) Fix query fill-extrusions made from polygons with coincident points and polygons with less than four points ( #9138 ) Fix bug where symbol-sort-key was not used for collisions that crossed tile boundaries ( #9054 ) Fix bug in DragRotateHandler._onMouseUp getting stuck in drag/rotate ( #9137 ) Fix \"Click on Compass\" on some mobile devices (add clickTolerance to DragRotateHandler ) ( #9015 ) (h/t Yanonix )","title":"\ud83d\udc1e Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#161","text":"","title":"1.6.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_4","text":"Fix style validation error messages not being displayed ( #9073 ) Fix deferred loading of rtl-text-plugin not working for labels created from GeoJSON sources ( #9091 ) Fix RTL text not being rendered with the rtl-text-plugin on pages that don't allow script-src: blob: in their CSP.( #9122 )","title":"\ud83d\udc1e Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#160","text":"","title":"1.6.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features_2","text":"Add ability to insert images into text labels using an image expression within a format expression: \"text-field\": [\"format\", \"Some text\", [\"image\", \"my-image\"], \"some more text\"] ( #8904 ) Add support for stretchable images (aka nine-part or nine-patch images). Stretchable images can be used with icon-text-fit to draw resized images with unstretched corners and borders. ( #8997 ) Add in expression. It can check if a value is in an array ( [\"in\", value, array] ) or a substring is in a string ( [\"in\", substring, string] ) ( #8876 ) Add minPitch and maxPitch map options ( #8834 ) Add rotation , rotationAlignment and pitchAlignment options to markers ( #8836 ) (h/t dburnsii ) Add methods to Popup to manipulate container class names ( #8759 ) (h/t Ashot-KR ) Add configurable inertia settings for panning (h/t @aMoniker) ( #8887 ) Add ability to localize UI controls ( #8095 ) (h/t dmytro-gokun ) Add LatLngBounds.contains() method ( #7512 , fixed by #8200 ) Add option to load rtl-text-plugin lazily ( #8865 ) Add essential parameter to AnimationOptions that can override prefers-reduced-motion: reduce ( #8743 , fixed by #8883 )","title":"\u2728 Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_2","text":"Allow rendering full world smaller than 512px. To restore the previous limit call map.setMinZoom(0) ( #9028 ) Add an es modules build for mapbox-gl-style-spec in dist/ ( #8247 ) (h/t ahocevar ) Add 'image/webp, / ' accept header to fetch/ajax image requests when webp supported ( #8262 ) Improve documentation for setStyle, getStyle, and isStyleLoaded ( #8807 )","title":"\ud83c\udf4f Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_5","text":"Fix map rendering after addImage and removeImage are used to change a used image ( #9016 ) Fix visibility of controls in High Contrast mode in IE ( #8874 ) Fix customizable url hash string in IE 11 ( #8990 ) (h/t pakastin ) Allow expression stops up to zoom 24 instead of 22 ( #8908 ) (h/t nicholas-l ) Fix alignment of lines in really overscaled tiles ( #9024 ) Fix Failed to execute 'shaderSource' on 'WebGLRenderingContext' errors ( #9017 ) Make expression validation fail on NaN ( #8615 ) Fix setLayerZoomRange bug that caused tiles to be re-requested ( #7865 , fixed by #8854 ) Fix map.showTileBoundaries rendering ( #7314 ) Fix using generateId in conjunction with cluster in a GeoJSONSource ( #8223 , fixed by #8945 ) Fix opening popup on a marker from keyboard ( #6835 ) Fix error thrown when request aborted ( #7614 , fixed by #9021 ) Fix attribution control when repeatedly removing and adding it ( #9052 )","title":"\ud83d\udc1e Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#151","text":"This patch introduces two workarounds that address longstanding issues related to unbounded memory growth in Safari, including #8771 and #4695 . We\u2019ve identified two memory leaks in Safari: one in the CacheStorage API, addressed by #8956 , and one in transferring data between web workers through Transferables , addressed by #9003 .","title":"1.5.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_3","text":"Implement workaround for memory leak in Safari when using the CacheStorage API. ( #8856 ) Implement workaround for memory leak in Safari when using Transferable objects to transfer ArrayBuffers to WebWorkers. If GL-JS detetcts that it is running in Safari, the use of Transferables to transfer data to WebWorkers is disabled. ( #9003 ) Improve animation performance when using map.setData . ( #8913 ) (h/t msbarry )","title":"\ud83c\udf4f Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#150","text":"","title":"1.5.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features_3","text":"Add disabled icon to GeolocateControl if user denies geolocation permission. #8871 ) Add outofmaxbounds event to GeolocateControl, which is emitted when the user is outside of map.maxBounds ( #8756 ) (h/t MoradiDavijani ) Add mapboxgl.getRTLTextPluginStatus() to query the current status of the rtl-text-plugin to make it easier to allow clearing the plugin when necessary. (ref. #7869 ) ( #8864 ) Allow hash Map option to be set as a string, which sets the map hash in the url to a custom query parameter. ( #8603 ) (h/t SebCorbin )","title":"\u2728 Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_4","text":"Fade symbols faster when zooming out quickly, reducing overlap. ( #8628 ) Reduce memory usage for vector tiles that contain long strings in feature properties. ( #8863 )","title":"\ud83c\udf4f Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_6","text":"Fix text-variable-anchor not trying multiple placements during collision with icons when icon-text-fit is enabled. ( #8803 ) Fix icon-text-fit not properly respecting vertical labels. ( #8835 ) Fix opacity interpolation for composition expressions. ( #8818 ) Fix rotate and pitch events being fired at the same time. ( #8872 ) Fix memory leaks that occured during tile loading and map removal.( #8813 and #8850 ) Fix web-worker transfer of ArrayBuffers in environments where instanceof ArrayBuffer fails.(e.g cypress ) ( #8868 )","title":"\ud83d\udc1e Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#141","text":"","title":"1.4.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_7","text":"Fix the way that coalesce handles the image operator so available images are rendered properly ( #8839 ) Do not emit the styleimagemissing event for an empty string value ( #8840 ) Fix serialization of ResolvedImage type so *-pattern properties work properly ( #8833 )","title":"\ud83d\udc1e Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#140","text":"","title":"1.4.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features_4","text":"Add image expression operator to determine image availability ( #8684 ) Enable text-offset with variable label placement ( #8642 )","title":"\u2728 Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_5","text":"Faster loading and better look of raster terrain ( #8694 ) Improved code documentation around resizing and {get/set}RenderedWorldCopies and more ( #8748 , #8754 ) Improve single vs. multi-touch zoom & pan interaction (#7196) ( #8100 )","title":"\ud83c\udf4f Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_8","text":"Fix rendering of collisionBox when text-translate or icon-translate is enabled ( #8659 ) Fix TypeError when reloading a source and immediately removing the map ( #8711 ) Adding tooltip to the geolocation control button ( #8735 ) (h/t BAByrne ) Add originalEvent property to NavigationControl events ( #8693 ) (h/t stepankuzmin ) Don't cancel follow mode in the GeolocateControl when resizing the map or rotating the screen ( #8736 ) Fix error when calling Popup#trackPointer before setting its content or location ( #8757 ) (h/t zxwandrew ) Respect newline characters when text-max-width is set to zero ( #8706 ) Update earcut to v2.2.0 to fix polygon tesselation errors ( #8772 ) Fix icon-fit with variable label placement ( #8755 ) Icons stretched with icon-text-fit are now sized correctly ( #8741 ) Collision detection for icons with icon-text-fit now works correctly ( #8741 )","title":"\ud83d\udc1e Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#132","text":"Fix a SecurityError in Firefox >= 69 when accessing the cache #8780","title":"1.3.2"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#131","text":"","title":"1.3.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_9","text":"Fix a race condition that produced an error when a map was removed while reloading a source. #8711 Fix a race condition were render event was sometimes not fired after load event in IE11. #8708","title":"\ud83d\udc1e Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#130","text":"","title":"1.3.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features_5","text":"Introduce text-writing-mode symbol layer property to allow placing point labels vertically. #8399 Extend variable text placement to work when text/icon-allow-overlap is set to true . #8620 Allow text-color to be used in formatted expressions to be able to draw different parts of a label in different colors. #8068","title":"\ud83c\udf4f Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_6","text":"Improve tile loading logic to cancel requests more aggressively, improving performance when zooming or panning quickly. #8633 Display outline on control buttons when focused (e.g. with a tab key) for better accessibility. #8520 Improve the shape of line round joins. #8275 Improve performance of processing line layers. #8303 Improve legibility of info displayed with map.showTileBoundaries = true . #8380 (h/t @andrewharvey ) Add MercatorCoordinate.meterInMercatorCoordinateUnits method to make it easier to convert from meter units to coordinate values used in custom layers. #8524 (h/t @andrewharvey ) Improve conversion of legacy filters with duplicate values. #8542 Move out documentation & examples website source to a separate mapbox-gl-js-docs repo. #8582","title":"\u2728 Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_10","text":"Fix a bug where local CJK fonts would switch to server-generated ones in overzoomed tiles. #8657 Fix precision issues in deck.gl -powered custom layers. #8502 Fix a bug where fill and line layers wouldn't render correctly over fill extrusions when coming from the same source. #8661 Fix map loading for documents loaded from Blob URLs. #8612 Fix classification of relative file:// URLs when in documents loaded from a file URL. #8612 Remove esm from package dependencies (so that it's not installed on npm install mapbox-gl ). #8586 (h/t @DatGreekChick )","title":"\ud83d\udc1e Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#121","text":"","title":"1.2.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_11","text":"Fix bug in NavigationControl compass button that prevented it from rotating with the map ( #8605 )","title":"\ud83d\udc1e Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#120","text":"","title":"1.2.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_1","text":"Add *-sort-key layout property for circle, fill, and line layers, to dictate which features appear above others within a single layer( #8467 ) Add ability to instantiate maps with specific access tokens ( #8364 ) Accommodate prefers-reduced-motion settings in browser ( #8494 ) Add Map visualizePitch option that tilts the compass as the map pitches ( #8208 , fixed by #8296 ) (h/t pakastin ) Make source options take precedence over TileJSON ( #8232 ) (h/t jingsam ) Make requirements for text offset properties more precise ( #8418 ) Expose convertFilter API in the style specification ( #8493","title":"Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_12","text":"Fix changes to text-variable-anchor , such that previous anchor positions would take precedence only if they are present in the updated array (considered a bug fix, but is technically a breaking change from previous behavior) ( #8473 ) Fix rendering of opaque pass layers over heatmap and fill-extrusion layers ( #8440 ) Fix rendering of extraneous vertical line in vector tiles ( #8477 , fixed by #8479 ) Turn off 'move' event listeners when removing a marker ( #8465 ) Fix class toggling on navigation control for IE ( #8495 ) (h/t cs09g ) Fix background rotation hovering on geolocate control ( #8367 ) (h/t GuillaumeGomez ) Fix error in click events on markers where startPos is not defined ( #8462 ) (h/t @msbarry ) Fix malformed urls when using custom baseAPIURL of a certain form ( #8466 )","title":"Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#111","text":"","title":"1.1.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_13","text":"Fix unbounded memory growth caused by failure to cancel requests to the cache ( #8472 ) Fix unbounded memory growth caused by failure to cancel requests in IE ( #8481 ) Fix performance of getting tiles from the cache ( #8489 )","title":"\ud83d\udc1e Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#110","text":"","title":"1.1.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#minor-features-and-improvements","text":"Improve line rendering performance by using a more compact line attributes layout ( #8306 ) Improve data-driven symbol layers rendering performance ( #8295 ) Add the ability to disable validation during queryRenderedFeatures and querySourceFeatures calls, as a performance optimization ( #8211 ) (h/t gorshkov-leonid ) Improve setFilter performance by caching keys in groupByLayout routine ( #8122 ) (h/t vallendm ) Improve rendering of symbol layers with symbol-z-order: viewport-y , when icons are allowed to overlap but not text ( #8180 ) Prefer breaking lines at a zero width space to allow better break point suggestions for Japanese labels ( #8255 ) Add a WebGLRenderingContext argument to onRemove function of CustomLayerInterface , to allow direct cleanup of related context ( #8156 ) (h/t ogiermaitre ) Allow zoom speed customization by adding setZoomRate and setWheelZoomRate methods to ScrollZoomHandler ( #7863 ) (h/t sf31 ) Add trackPointer method to Popup API that continuously repositions the popup to the mouse cursor when the cursor is within the map ( #7786 ) Add getElement method to Popup to retrieve the popup's HTML element ( #8123 ) (h/t bravecow ) Add fill-pattern example to the documentation ( #8022 ) (h/t flawyte ) Update script detection for Unicode 12.1 ( #8158 ) Add nofollow to Mapbox logo & \"Improve this map\" links ( #8106 ) (h/t viniciuskneves ) Include source name in invalid GeoJSON error ( #8113 ) (h/t Zirak )","title":"\u2728 Minor features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_14","text":"Fix updateImage not working as expected in Chrome ( #8199 ) Fix issues with double-tap zoom on touch devices ( #8086 ) Fix duplication of movestart events when zooming ( #8259 ) (h/t bambielli-flex ) Fix validation of \"format\" expression failing when options are provided ( #8339 ) Fix setPaintProperty not working on line-pattern property ( #8289 ) Fix the GL context being left in unpredictable states when using custom layers ( #8132 ) Fix unnecessary updates to attribution control string ( #8082 ) (h/t poletani ) Fix bugs in findStopLessThanOrEqualTo algorithm ( #8134 ) (h/t Mike96Angelo ) Fix map not displaying properly when inside an element with text-align: center ( #8227 ) (h/t mc100s ) Clarify in documentation that Popup#maxWidth accepts all max-width CSS values ( #8312 ) (h/t viniciuskneves ) Fix location dot shadow not displaying ( #8119 ) (h/t bravecow ) Fix docs dev dependencies being mistakenly installed as package dependencies ( #8121 ) (h/t bravecow ) Various typo fixes ( #8230 , h/t erictheise ) ( #8236 , h/t fredj ) Fix geolocate button CSS ( #8367 , h/t GuillaumeGomez ) Fix caching for Mapbox tiles ( #8389 )","title":"\ud83d\udc1e Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#100","text":"","title":"1.0.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes","text":"This release replaces the existing \u201cmap views\u201d pricing model in favor of a \u201cmap load\u201d model. Learn more in a recent blog post about these changes . By upgrading to this release, you are opting in to the new map loads pricing. Why is this change being made? This change allows us to implement a more standardized and predictable method of billing GL JS map usage. You\u2019ll be charged whenever your website or web application loads, not by when users pan and zoom around the map, incentivizing developers to create highly interactive map experiences. The new pricing structure also creates a significantly larger free tier to help developers get started building their applications with Mapbox tools while pay-as-you-go pricing and automatic volume discounts help your application scale with Mapbox. Session billing also aligns invoices with metrics web developers already track and makes it easier to compare usage with other mapping providers. What is changing? - Add SKU token to Mapbox API requests #8276 When (and only when) loading tiles from a Mapbox API with a Mapbox access token set ( mapboxgl.accessToken ), a query parameter named sku will be added to all requests for vector, raster and raster-dem tiles. Every map instance uses a unique sku value, which is refreshed every 12 hours. The token itself is comprised of a token version (always \u201c1\u201d), a sku ID (always \u201c01\u201d) and a random 10-digit base-62 number. The purpose of the token is to allow for metering of map sessions on the server-side. A session lasts from a new map instantiation until the map is destroyed or 12 hours passes, whichever comes first. For further information on the pricing changes, you can read our blog post and check out our new pricing page , which has a price calculator. As always, you can also contact our team at https://support.mapbox.com .","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0541","text":"","title":"0.54.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_15","text":"Fix unbounded memory growth caused by failure to cancel requests in IE ( #8481 )","title":"Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0540","text":"","title":"0.54.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_1","text":"Turned localIdeographFontFamily map option on by default. This may change how CJK labels are rendered, but dramatically improves performance of CJK maps (because the browser no longer needs to download heavy amounts of font data from the server). Add localIdeographFontFamily: false to turn this off. #8008 Added Popup maxWidth option, set to \"240px\" by default. #7906","title":"Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#major-features","text":"Added support for updating and animating style images. #7999 Added support for generating style images dynamically (e.g. for drawing icons based on feature properties). #7987 Added antialiasing support for custom layers. #7821 Added a new mapbox-gl-csp.js bundle for strict CSP environments where worker-src: blob is disallowed. #8044","title":"Major features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#minor-features-and-improvements_1","text":"Improved performance of fill extrusions. #7821 Improved performance of symbol layers. #7967 Slightly improved rendering performance in general. #7969 Slightly improved performance of HTML markers. #8018 Improved diffing of styles with \"visibility\": \"visible\" . #8005 Improved zoom buttons to grey out when reaching min/max zoom. #8023 Added a title to fullscreen control button. #8012 Added rel=\"noopener\" attributes to links that lead to external websites (such as Mapbox logo and OpenStreetMap edit link) for improved security. #7914 Added tile size info when map.showTileBoundaries is turned on. #7963 Significantly improved load times of the benchmark suite. #8066 Improved behavior of canvasSource.pause to be more reliable and able to render a single frame. #8130","title":"Minor features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_16","text":"Fixed a bug in Mac Safari 12+ where controls would disappear until you interact with the map. 8193 Fixed a memory leak when calling source.setData(url) many times. #8035 Fixed a bug where marker lost focus when dragging. #7799 Fixed a bug where map.getCenter() returned a reference to an internal LngLat object instead of cloning it, leading to potential mutability bugs. #7922 Fixed a bug where default HTML marker positioning was slightly off. #8074 Fixed a bug where adding a fill extrusion layer for non-polygon layers would lead to visual artifacts. #7685 Fixed intermittent Flow failures on CI. #8061 Fixed a bug where calling Map#removeFeatureState does not remove the state from some tile zooms #8087 Fixed a bug where removeFeatureState didn't work on features with id equal to 0 . #8150 (h/t jutaz )","title":"Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0531","text":"","title":"0.53.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_17","text":"Turn off telemetry for Mapbox Atlas ( #7945 ) Fix order of 3D features in query results (fix #7883) ( #7953 ) Fix RemovePaintState benchmarks ( #7930 )","title":"Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0530","text":"","title":"0.53.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_2","text":"Enable fill-extrusion querying with ray picking ( #7499 ) Add clusterProperties option for aggregated cluster properties ( #2412 , fixed by #7584 ) Allow initial map bounds to be adjusted with fitBounds options. ( #7681 ) (h/t elyobo ) Remove popups on Map#remove ( #7749 ) (h/t andycalder ) Add Map#removeFeatureState ( #7761 ) Add number-format expression ( #7626 ) Add symbol-sort-key style property ( #7678 )","title":"Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_18","text":"Upgrades Earcut to fix a rare bug in rendering polygons that contain a coincident chain of holes ( #7806 , fixed by #7878 ) Allow file:// protocol in XHR requests for Cordova/Ionic/etc ( #7818 ) Correctly handle WebP images in Edge 18 ( #7687 ) Fix bug which mistakenly requested WebP images in browsers that do not support WebP (#7817) ( #7819 ) Fix images not being aborted when dequeued ( #7655 ) Fix DEM layer memory leak ( #7690 , fixed by #7691 ) Set correct color state before rendering custom layer ( #7711 ) Set LngLat.toBounds() default radius to 0 ( #7722 , fixed by #7723 ) (h/t cherniavskii ) Fix race condition in feature-state dependent layers ( #7523 , fixed by #7790 ) Prevent map.repaint from mistakenly enabling continuous repaints ( #7667 ) Prevent map shaking while zooming in on raster tiles ( #7426 ) Fix query point translation for multi-point geometry ( #6833 , fixed by #7581 )","title":"Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0520","text":"","title":"0.52.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_2","text":"Canonicalize tile urls to mapbox:// urls so they can be transformed with config.API_URL ( #7594 )","title":"Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_3","text":"Add getter and setter for config.API_URL ( #7594 ) Allow user to define element other than map container for full screen control ( #7548 ) Add validation option to style setters ( #7604 ) Add 'idle' event: fires when no further rendering is expected without further interaction. ( #7625 )","title":"Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_19","text":"Fire error when map.getLayoutProperty references missing layer ( #7537 , fixed by #7539 ) Fix shaky sprites when zooming with scrolling ( #7558 ) Fix layout problems in attribution control ( #7608 ) (h/t lucaswoj ) Fixes resetting map's pitch to 0 if initial bounds is set ( #7617 ) (h/t stepankuzmin ) Fix occasional failure to load images after multiple image request abortions #7641 Update repo url to correct one ( #7486 ) (h/t nicholas-l ) Fix bug where symbols where sometimes not rendered immediately ( #7610 ) Fix bug where cameraForBounds returns incorrect CameraOptions with asymmetrical padding/offset ( #7517 , fixed by #7518 ) (h/t mike-marcacci ) Use diff+patch approach to map.setStyle when the parameter is a URL ( #4025 , fixed by #7562 ) Begin touch zoom immediately when rotation disabled ( #7582 ) (h/t msbarry ) Fix symbol rendering under opaque fill layers ( #7612 ) Fix shaking by aligning raster sources to pixel grid only when map is idle ( 7426 ) Fix raster layers in Edge 18 by disabling it's incomplete WebP support ( 7687 ) Fix memory leak in hillshade layer ( 7691 ) Fix disappearing custom layers ( 7711 )","title":"Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0510","text":"November 7, 2018","title":"0.51.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_4","text":"Add initial bounds as map constructor option ( #5518 ) (h/t stepankuzmin ) Improve performance on machines with > 8 cores ( #7407 , fixed by #7430 ) Add MercatorCoordinate type ( #7488 ) Allow browser-native contextmenu to be enabled ( #2301 , fixed by #7369 ) Add an unminified production build to the NPM package ( #7403 ) Add support for LngLat conversion from {lat, lon} ( #7507 ) (h/t bfrengley ) Add tooltips for navigation controls ( #7373 ) Show attribution only for used sources ( #7384 ) Add telemetry event to log map loads ( #7431 ) Tighten style validation Disallow expressions as stop values ( #7396 ) Disallow feature-state expressions in filters ( #7366 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_20","text":"Fix for GeoJSON geometries not working when coincident with tile boundaries( #7436 , fixed by #7448 ) Fix depth buffer-related rendering issues on some Android devices. ( #7471 ) Fix positioning of compact attribution strings ( #7444 , #7445 , and #7391 ) Fix an issue with removing markers in mouse event callbacks ( #7442 ) (h/t vbud ) Remove controls before destroying a map ( #7479 ) Fix display of Scale control values < 1 ( #7469 ) (h/t MichaelHedman ) Fix an error when using location hash within iframes in IE11 ( #7411 ) Fix depth mode usage in custom layers ( #7432 ) (h/t markusjohnsson ) Fix an issue with shaky sprite images during scroll zooms ( #7558 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0500","text":"October 10, 2018","title":"0.50.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_5","text":"\ud83c\udf89 Add Custom Layers that can be rendered into with user-provided WebGL code ( #7039 ) Add WebGL face culling for increased performance ( #7178 ) Improve speed of expression evaluation ( #7334 ) Automatically coerce to string for concat expression and text-field property ( #6190 , fixed by #7280 ) Add fill-extrusion-vertical-gradient property for controlling shading of fill extrusions ( #5768 , fixed by #6841 ) Add update functionality for images provided via ImageSource ( #4050 , fixed by #7342 ) (h/t dcervelli )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_21","text":"Expressions Fix expressions that use log2 and log10 in IE11 ( #7318 , fixed by #7320 ) Fix let expression stripping expected type during parsing ( #7300 , fixed by #7301 ) Fix superfluous wrapping of literals in literal expression ( #7336 , fixed by #7337 ) Allow calling to-color on values that are already of type Color ( #7260 ) Fix to-array for empty arrays (( #7261 )) Fix identity functions for text-field when using formatted text ( #7351 ) Fix coercion of null to 0 in to-number expression ( #7083 , fixed by #7274 ) Canvas source Fix missing repeats of CanvasSource when it crosses the antimeridian ( #7273 ) Fix CanvasSource not respecting alpha values set on canvas element ( #7302 , fixed by #7309 ) Rendering Fix rendering of fill extrusions with really high heights ( #7292 ) Fix an error where the map state wouldn't return to loaded after certain runtime styling changes when there were errored tiles in the viewport ( #7355 ) Fix errors when rendering symbol layers without symbols ( #7241 , fixed by #7253 ) Don't fade in symbols with *-allow-overlap: true when panning into the viewport ( #7172 , fixed by #7244 ) Library Fix disambiguation for mouseover event ( #7295 , fixed by #7299 ) Fix silent failure of getImage if an SVG is requested ( #7312 , fixed by #7313 ) Fix empty control group box shadow ( #7303 , fixed by #7304 ) (h/t Duder-onomy ) Fixed an issue where a wrong timestamp was sent for Mapbox turnstile events ( #7381 ) Fixed a bug that lead to attribution not showing up correctly in Internet Explorer ( #3945 , fixed by #7391 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0490","text":"September 6, 2018","title":"0.49.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_3","text":"Use client{Height/Width} instead of offset{Height/Width} for map canvas sizing ( #6848 , fixed by #7128 )","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_22","text":"Fix Top Issues list for mapbox-gl-js ( #7108 , fixed by #7112 ) Fix bug in which symbols with icon-allow-overlap: true, text-allow-overlap: true, text-optional: false would show icons when they shouldn't ( #7041 ) Fix bug where the map would not stop at the exact zoom level requested by Map#FlyTo (#7222) ( #7223 ) (h/t benoitbzl ) Keep map centered on the center point of a multi-touch gesture when zooming (#6722) ( #7191 ) (h/t pakastin ) Update the style-spec's old gl-style-migrate script to include conversion of legacy functions and filters to their expression equivalents ( #6927 , fixed by #7095 ) Fix icon-size for small data-driven values ( #7125 ) Fix bug in the way AJAX requests load local files on iOS web view ( #6610 ) (h/t oscarfonts ) Fix bug in which canvas sources would not render in world wrapped tiles at the edge of the viewport ([#7271] https://github.com/mapbox/mapbox-gl-js/issues/7271 ), fixed by #7273 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_6","text":"Performance updates: Improve time to first render by updating how feature ID maps are transferred to the main thread ( #7110 , fixed by #7132 ) Reduce size of JSON transmitted from worker thread to main thread ( #7124 ) Improve image/glyph atlas packing algorithm ( #7171 ) Use murmur hash on symbol instance keys to reduce worker transfer costs ( #7127 ) Add GL state management for uniforms ( #6018 ) Add symbol-z-order symbol layout property to style spec ( #7219 ) Implement data-driven styling support for *-pattern properties ( #6289 ) Add Map#fitScreenCoordinates which fits viewport to two points, similar to Map#fitBounds but uses screen coordinates and supports non-zero map bearings ( #6894 ) Re-implement LAB/HSL color space interpolation for expressions ( #5326 , fixed by #7123 ) Enable benchmark testing for Mapbox styles ( #7047 ) Allow Map#setFeatureState and Map#getFeatureState to accept numeric IDs ( #7106 ) (h/t bfrengley )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0480","text":"August 16, 2018","title":"0.48.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_4","text":"Treat tiles that error with status 404 as empty renderable tiles to prevent rendering duplicate features in some sparse tilesets ( #6803 )","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_23","text":"Fix issue where text-max-angle property was being calculated incorrectly internally, causing potential rendering errors when \"symbol-placement\": line Require feature.id when using Map#setFeatureState ( #6974 ) Fix issue with removing the GeolocateControl when user location is being used ( #6977 ) (h/t sergei-zelinsky ) Fix memory leak caused by a failure to remove all controls added to the map ( #7042 ) Fix bug where the build would fail when using mapbox-gl webpack 2 and UglifyJSPlugin ( #4359 , fixed by #6956 ) Fix bug where fitBounds called with coordinates outside the bounds of Web Mercator resulted in uncaught error ( #6906 , fixed by #6918 ) Fix bug wherein Map#querySourceFeatures was returning bad results on zooms > maxZoom ( #7061 ) Relax typing for equality and order expressions ( #6459 , fixed by #6961 ) Fix bug where queryPadding for all layers in a source was set by the first layer, causing incorrect querying on other layers and, in some cases, incorrect firing of events associated with individual layers ( #6909 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_7","text":"Performance Improvements: Stop unnecessary serialization of symbol source features. ( #7013 ) Optimize calculation for getting visible tile coordinates ( #6998 ) Improve performance of creating {Glyph/Image}Atlas es ( #7091 ) Optimize and simplify tile retention logic ( #6995 ) Add a user turnstile event for users accessing Mapbox APIs ( #6980 ) Add support for autogenerating feature ids for GeoJSON sources so they can be used more easily with the Map#setFeatureState API ( #7043 )) ( #7091 ) Add ability to style symbol layers labels with multiple fonts and text sizes via \"format\" expression ( #6994 ) Add customAttribution option to AttributionControl ( #7033 ) (h/t mklopets ) Publish Flow type definitions alongside compiled bundle ( #7079 ) Introduce symbol cross fading when crossing integer zoom levels to prevent labels from disappearing before newly loaded tiles' labels can be rendered ( #6951 ) Improvements in label collision detection ( #6925 ))","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0470","text":"","title":"0.47.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_8","text":"Add configurable drag pan threshold ( #6809 ) (h/t msbarry ) Add raster-resampling raster paint property ( #6411 ) (h/t andrewharvey ) Add symbol-placement: line-center ( #6821 ) Add methods for inspecting GeoJSON clusters ( #3318 , fixed by #6829 ) Add warning to geolocate control when unsupported ( #6923 ) (h/t aendrew ) Upgrade geojson-vt to 3.1.4 ( #6942 ) Include link to license in compiled bundle ( #6975 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_24","text":"Use updateData instead of re-creating buffers for repopulated paint arrays ( #6853 ) Fix ScrollZoom handler setting tr.zoom = NaN ( #6924 ) Failed to invert matrix error ( #6486 , fixed by #6924 ) Fixing matrix errors ( #6782 , fixed by #6924 ) Fix heatmap tile clipping when layers are ordered above it ( #6806 , fixed by #6807 ) Fix video source in safari (macOS and iOS) ( #6443 , fixed by #6811 ) Do not reload errored tiles ( #6813 ) Fix send / remove timing bug in Dispatcher ( #6756 , fixed by #6826 ) Fix flyTo not zooming to exact given zoom ( #6828 ) Don't stop animation on map resize ( #6636 ) Fix map.getBounds() with rotated map ( #6875 ) (h/t zoltan-mihalyi ) Support collators in feature filter expressions. ( #6929 ) Fix Webpack production mode compatibility ( #6981 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0460","text":"","title":"0.46.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_5","text":"Align implicit type casting behavior of match expressions with with case/== ( #6684 )","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_9","text":":tada: Add Map#setFeatureState and feature-state expression to support interactive styling ( #6263 ) Create draggable Marker with setDraggable ( #6687 ) Add Map#listImages for listing all currently active sprites/images ( #6381 ) Add \"crossSourceCollisions\" option to disable cross-source collision detection ( #6566 ) Handle text/icon-rotate for symbols with symbol-placement: point ( #6075 ) Automatically compact Mapbox wordmark on narrow maps. ( #4282 ) (h/t andrewharvey ) Only show compacted AttributionControl on interactive displays ( #6506 ) (h/t andrewharvey ) Use postcss to inline svg files into css, reduce size of mapbox-gl.css ( #6513 ) (h/t andrewharvey ) Add support for GeoJSON attribution ( #6364 ) (h/t andrewharvey ) Add instructions for running individual unit and render tests ( #6686 ) Make Map constructor fail if WebGL init fails. ( #6744 ) (h/t uforic ) Add browser fallback code for collectResourceTiming: true in web workers ( #6721 ) Remove ignored usage of gl.lineWidth ( #5541 ) Split new bounds calculation out of fitBounds into new method ( #6683 ) Allow integration tests to be organized in an arbitrarily deep directory structure ( #3920 ) Make \"Missing Mapbox GL JS CSS\" a console warning ( #5786 ) Add rel=\"noopener\" to Mapbox attribution link. ( #6729 ) (h/t gorbypark ) Update to deep equality check in example code ( #6599 ) (h/t jonsadka ) Upgrades! Upgrade ESM dependency to ^3.0.39 ( #6750 ) Ditch gl-matrix fork in favor of the original package ( #6751 ) Update to latest sinon ( #6771 ) Upgrade to Flow 0.69 ( #6594 ) Update to mapbox-gl-supported 1.4.0 ( #6773 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_25","text":"collectResourceTiming: true generates error on iOS9 Safari, IE 11 ( #6690 ) Fix PopupOptions flow type declarations ( #6670 ) (h/t TimPetricola ) Add className option to Popup constructor ( #6502 ) (h/t Ashot-KR ) GeoJSON MultiLineStrings with lineMetrics=true only rendered first line ( #6649 ) Provide target property for mouseenter/over/leave/out events ( #6623 ) Don't break on sources whose name contains \".\" ( #6660 ) Rotate and pitch with navigationControl broke in v0.45 ( #6650 ) Zero-width lines remained visible ( #6769 ) Heatmaps inappropriately clipped at tile boundaries ( #6806 ) Use named exports for style-spec entrypoint module ( #6601 Don't fire click event if default is prevented on mousedown for a drag event ( #6697 , fixes #6642 ) Double clicking to zoom in breaks map dragging/panning in Edge ( #6740 ) (h/t GUI ) *-transition properties cannot be set with setPaintProperty() ( #6706 ) Marker with a element does not open the url when clicked ( #6730 ) setRTLTextPlugin fails with relative URLs ( #6719 ) Collision detection incorrect for symbol layers that share the same layout properties ( #6548 ) Fix a possible crash when calling queryRenderedFeatures after querySourceFeatures ( #6559 ) Fix a collision detection issue that could cause labels to temporarily be placed too densely during rapid panning ( #5654 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0450","text":"","title":"0.45.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_6","text":"Evented#fire and Evented#listens are now marked as private. Though Evented is still exported, and fire and listens are still functional, we encourage you to seek alternatives; a future version may remove their API accessibility or change its behavior. If you are writing a class that needs event emitting functionality, consider using EventEmitter or similar libraries instead. The \"to-string\" expression operator now converts null to an empty string rather than to \"null\" . #6534","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_10","text":":rainbow: Add line-gradient property #6303 Add abs , round , floor , and ceil expression operators #6496 Add collator expression for controlling case and diacritic sensitivity in string comparisons #6270 Rename caseSensitive and diacriticSensitive expressions to case-sensitive and diacritic-sensitive for consistency #6598 Prevent collator expressions for evaluating as constant to account for potential environment-specific differences in expression evaluation #6596 Add CSS linting to test suite (h/t @jasonbarry) #6071 Add support for configurable maxzoom in raster-dem tilesets #6103 Add Map#isZooming and Map#isRotating methods #6128 , #6183 Add support for Mapzen Terrarium tiles in raster-dem sources #6110 Add preventDefault method on mousedown , touchstart , and dblclick events #6218 Add originalEvent property on zoomend and moveend for user-initiated scroll events (h/t @stepankuzmin) #6175 Accept arguments of type value in \"length\" expressions #6244 Introduce MapWheelEvent #6237 Add setter for ScaleControl units (h/t @ryanhamley) #6138 , #6274 Add open event for Popup #6311 Explicit \"object\" type assertions are no longer required when using expressions #6235 Add anchor option to Marker #6350 HTMLElement is now passed to Marker as part of the options object, but the old function signature is still supported for backwards compatibility #6356 Add support for custom colors when using the default Marker SVG element (h/t @andrewharvey) #6416 Allow CanvasSource initialization from HTMLElement #6424 Add is-supported-script expression 6260","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_26","text":"Align raster-dem tiles to pixel grid to eliminate blurry rendering on some devices #6059 Fix label collision circle debug drawing on overzoomed tiles #6073 Improve error reporting for some failed requests #6126 , #6032 Fix several Map#queryRenderedFeatures bugs: account for {text, icon}-offset when querying #6135 correctly query features that extend across tile boundaries #5756 fix querying of circle layer features with -pitch-scaling: 'viewport' or -pitch-alignment: 'map' #6036 eliminate flicker effects when using query results to set a hover effect by switching from tile-based to viewport-based symbol querying #6497 Preserve browser history state when updating the Map hash #6140 Fix undefined behavior when Map#addLayer is invoked with an id of a preexisting layer #6147 Fix bug where icon-image would not be rendered if text-field is an empty string #6164 Ensure all camera methods fire rotatestart and rotateend events #6187 Always hide duplicate labels #6166 Fix DragHandler bugs where a left-button mouse click would end a right-button drag rotate and a drag gesture would not end if the control key is down on mouseup #6193 Add support for calling {DragPanHandler, DragRotateHandler}#disable while a gesture is in progress #6232 Fix GeolocateControl user location dot sizing when Map 's <div> inherits box-sizing: border-box; (h/t @andrewharvey) #6227 Fix bug causing an off-by-one error in array expression error messages (h/t @drewbo) #6269 Improve error message when an invalid access token triggers a 401 error #6283 Fix bug where lines with line-width larger than the sprite height of the line-pattern property would render other sprite images #6246 Fix broken touch events for DragPanHandler on mobile using Edge (note that zoom/rotate/pitch handlers still do not support Edge touch events #1928 ) #6325 Fix race condition in VectorTileWorkerSource#reloadTile causing a rendering timeout #6308 Fix bug causing redundant gl.stencilFunc calls due to incorrect state checking (h/t @yangdonglai) #6330 Fix bug where mousedown or touchstart would cancel camera animations in non-interactive maps #6338 Fix bug causing a full-screen flicker when the map is pitched and a symbol layer uses non-zero text-translate #6365 Fix bug in to-rgba expression causing division by zero 6388 Fix bug in cross-fading for *-pattern properties with non-integer zoom stops #6430 Fix bug where calling Map#remove on a map with constructor option hash: true throws an error (h/t @allthesignals) #6490 Fix bug causing flickering when panning across the anti-meridian #6438 Fix error when using tiles of non-power-of-two size #6444 Fix bug causing Map#moveLayer(layerId, beforeId) to remove the layer when layerId === beforeId #6542 Fix Rollup build for style-spec module 6575 Fix bug causing Map#querySourceFeatures to throw an Uncaught TypeError ( https://github.com/mapbox/mapbox-gl-js/pull/6555 ) Fix issue where label collision detection was inaccurate for some symbol layers that shared layout properties with another layer #6558 Restore target property for mouse{enter,over,leave,out} events #6623","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0442","text":"","title":"0.44.2"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_27","text":"Workaround a breaking change in Safari causing page to scroll/zoom in response to user actions intended to pan/zoom the map #6095 . (N.B., not to be confused with the workaround from April 2017 dealing with the same breaking change in Chrome #4259 . See also https://github.com/WICG/interventions/issues/18 , https://bugs.webkit.org/show_bug.cgi?id=182521 , https://bugs.chromium.org/p/chromium/issues/detail?id=639227 .)","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0441","text":"","title":"0.44.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_28","text":"Fix bug causing features from symbol layers to be omitted from map.queryRenderedFeatures() #6074 Fix error triggered by simultaneous scroll-zooming and drag-panning. #6106 Fix bug wherein drag-panning failed to resume after a brief pause #6063","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0440","text":"","title":"0.44.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_11","text":"The CSP policy of a page using mapbox-gl-js no longer needs to include script-src 'unsafe-eval' #559 Add LngLatBounds#isEmpty() method #5917 Updated to flow 0.62.0 #5923 Make compass and zoom controls optional ( #5348 ) (h/t @matijs) Add collectResourceTiming option to the enable collection of Resource Timing data for requests that are made from Web Workers. ( #5948 ) Improve user location dot appearance across browsers ( #5498 ) (h/t @jasonbarry)","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_29","text":"Fix error triggered by == and != expressions #5947 Image sources honor renderWorldCopies #5932 Fix transitions to default fill-outline-color #5953 Fix transitions for light properties #5982 Fix minor symbol collisions on pitched maps #5913 Fix memory leaks after Map#remove() #5943 , #5951 Fix bug wherein GeoJSONSource#setData() caused labels to fade out and back in ( #6002 ) Fix bug that could cause incorrect collisions for labels placed very near to each other at low zoom levels ( #5993 ) Fix bug causing move events to be fired out of sync with actual map movements ( #6005 ) Fix bug wherein Map did not fire mouseover events ( #6000 ] (h/t @jay-manday) Fix bug causing blurry rendering of raster tiles ( #4552 ) Fix potential memory leak caused by removing layers ( #5995 ) Fix bug causing attribution icon to appear incorrectly in compact maps not using Mapbox data ( #6042 ) Fix positioning of default marker element ( #6012 ) (h/t @andrewharvey)","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0430-december-21-2017","text":"","title":"0.43.0 (December 21, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_7","text":"It is now an error to attempt to remove a source that is in use #5562 It is now an error if the layer specified by the before parameter to moveLayer does not exist #5679 \"colorSpace\": \"hcl\" now uses shortest-path interpolation for hue #5811","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_12","text":"Introduce client-side hillshading with raster-dem source type and hillshade layer type #5286 GeoJSON sources take 2x less memory and generate tiles 20%\u2013100% faster #5799 Enable data-driven values for text-font #5698 Enable data-driven values for heatmap-radius #5898 Add getter and setter for offset on marker #5759 Add Map#hasImage #5775 Improve typing for == and != expressions #5840 Made coalesce expressions more useful #5755 Enable implicit type assertions for array types #5738 Improve hash control precision #5767 supported() now returns false on old IE 11 versions that don't support Web Worker blob URLs #5801 Remove flow globals TileJSON and Transferable #5668 Improve performance of image, video, and canvas sources #5845","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_30","text":"Fix popups and markers lag during pan animation #4670 Fix fading of symbol layers caused by setData #5716 Fix behavior of to-rgba and rgba expressions #5778 , #5866 Fix cross-fading of *-pattern and line-dasharray #5791 Fix colorSpace function property #5843 Fix style diffing when changing GeoJSON source properties #5731 Fix missing labels when zooming out from overzoomed tile #5827 Fix missing labels when zooming out and quickly using setData #5837 Handle NaN as input to step and interpolate expressions #5757 Clone property values on input and output #5806 Bump geojson-rewind dependency #5769 Allow setting Marker's popup before LngLat #5893","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0422-november-21-2017","text":"","title":"0.42.2 (November 21, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_31","text":"Add box-sizing to the \"mapboxgl-ctrl-scale\"-class #5715 Fix rendering in Safari #5712 Fix \"Cannot read property 'hasTransition' of undefined\" error #5714 Fix misplaced raster tiles #5713 Fix raster tile fading #5722 Ensure that an unset filter is undefined rather than null #5727 Restore pitch-with-rotate to nav control #5725 Validate container option in map constructor #5695 Fix queryRenderedFeatures behavior for features displayed in multiple layers #5172","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0421-november-17-2017","text":"","title":"0.42.1 (November 17, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_32","text":"Workaround for map flashing bug on Chrome 62+ with Intel Iris Graphics 6100 cards #5704 Rerender map when map.showCollisionBoxes is set to false #5673 Fix transitions from property default values #5682 Fix runtime updating of heatmap-color #5682 Fix mobile Safari history.replaceState error #5613","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_13","text":"Provide default element for Marker class #5661","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0420-november-10-2017","text":"","title":"0.42.0 (November 10, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_8","text":"Require that heatmap-color use expressions instead of stop functions #5624 Remove support for validating and migrating v6 styles Remove support for validating v7 styles #5604 Remove support for including {tokens} in expressions for text-field and icon-image #5599 Split curve expression into step and interpolate expressions #5542 Disallow interpolation in expressions for line-dasharray #5519","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#features-and-improvements_14","text":"Improve label collision detection #5150 Labels from different sources will now collide with each other Collisions caused by rotation and pitch are now smoothly transitioned with a fade Improved algorithm for fewer erroneous collisions, denser label placement, and greater label stability during rotation Add sqrt expression #5493","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes-and-error-reporting-improvements","text":"Fix viewport calculations for fitBounds when both zooming and padding change #4846 Fix WebGL \"range out of bounds for buffer\" error caused by sorted symbol layers #5620 Fix symbol fading across tile reloads #5491 Change tile rendering order to better match GL Native #5601 Ensure no errors are triggered when calling queryRenderedFeatures on a heatmap layer #5594 Fix bug causing queryRenderedSymbols to return results from different sources #5554 Fix CJK rendering issues #5544 , #5546 Account for circle-stroke-width in queryRenderedFeatures #5514 Fix rendering of fill layers atop raster layers #5513 Fix rendering of circle layers with a circle-stroke-opacity of 0 #5496 Fix memory leak caused by actor callbacks #5443 Fix source cache size for raster sources with tile sizes other than 512px #4313 Validate that zoom expressions only appear at the top level of an expression #5609 Validate that step and interpolate expressions don't have any duplicate stops #5605 Fix rendering for icon-text-fit with a data-driven text-size #5632 Improve validation to catch uses of deprecated function syntax #5667 Permit altitude coordinates in position field in GeoJSON #5608","title":"\ud83d\udc1b Bug fixes and error reporting improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0410-october-11-2017","text":"","title":"0.41.0 (October 11, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#warning-breaking-changes","text":"Removed support for paint classes #3643 . Instead, use runtime styling APIs or Map#setStyle . Reverted the canvas source contextType option added in 0.40.0 #5449","title":":warning: Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-bug-fixes","text":"Clip raster tiles to avoid tile overlap #5105 Guard for offset edgecase in flyTo #5331 Ensure the map is updated after the sprite loads #5367 Limit animation duration on flyTo with maxDuration option #5349 Make double-tapping on make zoom in by a factor of 2 on iOS #5274 Fix rendering error with translucent raster tiles #5380 Error if invalid 'before' argument is passed to Map#addLayer #5401 Revert CanvasSource intermediary image buffer fix #5449","title":":bug: Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#sparkles-features-and-improvements","text":"Use setData operation when diffing geojson sources #5332 Return early from draw calls on layers where opacity=0 #5429 A heatmap layer type is now available. This layer type allows you to visualize and explore massive datasets of points, reflecting the shape and density of data well while also looking beautiful. See the blog post for further details. The value of a style property or filter can now be an expression . Expressions are a way of doing data-driven and zoom-driven styling that provides more flexibility and control, and unifies property and filter syntax. Previously, data-driven and zoom-driven styling relied on stop functions: you specify a feature property and a set of input-output pairs that essentially define a \u201cscale\u201d for how the style should be calculated based on the feature property. For example, the following would set circle colors on a green-to-red scale based on the value of feature.properties.population : \"circle-color\": { \"property\": \"population\", \"stops\": [ [0, \"green\"], [1000000, \"red\"] ] } This approach is powerful, but we\u2019ve seen a number of use cases that stop functions don't satisfy. Expressions provide the flexibility to address use cases like these: Multiple feature properties Using more than one feature property to calculate a given style property. E.g., styling land polygon colors based on both feature.properties.land_use_category and feature.properties.elevation . Arithmetic For some use cases it\u2019s necessary to do some arithmetic on the input data. One example is sizing circles to represent quantitative data. Since a circle\u2019s visual size on the screen is really its area (and A=\u03c0r^2), the right way to scale circle-radius is square_root(feature.properties.input_data_value) . Another example is unit conversions: feature data may include properties that are in some particular unit. Displaying such data in units appropriate to, say, a user\u2019s preference or location, requires being able to do simple arithmetic (multiplication, division) on whatever value is in the data. Conditional logic This is a big one: basic if-then logic, for example to decide exactly what text to display for a label based on which properties are available in the feature or even the length of the name. A key example of this is properly supporting bilingual labels, where we have to decide whether to show local + English, local-only, or English-only, based on the data that\u2019s available for each feature. String manipulation More dynamic control over label text with things like uppercase/lowercase/title case transforms, localized number formatting, etc. Without this functionality, crafting and iterating on label content entails a large data-prep burden. Filters Style layer filters had similar limitations. Moreover, they use a different syntax, even though their job is very similar to that of data-driven styling functions: filters say, \u201chere\u2019s how to look at a feature and decide whether to draw it,\u201d and data-driven style functions say, \u201chere\u2019s how to look at a feature and decide how to size/color/place it.\u201d Expressions provide a unified syntax for defining parts of a style that need to be calculated dynamically from feature data. For information on the syntax and behavior of expressions, please see the documentation .","title":":sparkles: Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#wrench-development-workflow-improvements","text":"Made the performance benchmarking runner more informative and statistically robust","title":":wrench: Development workflow improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0401-september-18-2017","text":"","title":"0.40.1 (September 18, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-bug-fixes_1","text":"Fix bug causing flicker when zooming in on overzoomed tiles #5295 Remove erroneous call to Tile#redoPlacement for zoom-only or low pitch camera changes #5284 Fix bug where CanvasSource coordinates were flipped and improve performance for non-animated CanvasSource s #5303 Fix bug causing map not to render on some cases on Internet Explorer 11 #5321 Remove upper limit on fill-extrusion-height property #5320","title":":bug: Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0400-september-13-2017","text":"","title":"0.40.0 (September 13, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#warning-breaking-changes_1","text":"Map#addImage now requires the image as an HTMLImageElement , ImageData , or object with width , height , and data properties with the same format as ImageData . It no longer accepts a raw ArrayBufferView in the second argument and width and height options in the third argument. canvas sources now require a contextType option specifying the drawing context associated with the source canvas. #5155","title":":warning: Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#sparkles-features-and-improvements_1","text":"Correct rendering for multiple fill-extrusion layers on the same map #5101 Add an icon-anchor property to symbol layers #5183 Add a per-map transformRequest option, allowing users to provide a callback that transforms resource request URLs #5021 Add data-driven styling support for text-max-width #5067 text-letter-spacing #5071 line-join #5020 Add support for SDF icons in Map#addImage() #5181 Added nautical miles unit to ScaleControl #5238 (h/t @fmairesse) Eliminate the map-wide limit on the number of glyphs and sprites that may be used in a style #141 . (Fixed by #5190 , see also mapbox-gl-native#9213 Numerous performance optimizations (including #5108 h/t @pirxpilot)","title":":sparkles: Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-bug-fixes_2","text":"Add missing documentation for mouseenter, mouseover, mouseleave events #4772 Add missing documentation for Marker#getElement() method #5242 Fix bug wherein removing canvas source with animate=true leaves map in render loop #5097 Fix fullscreen detection on Firefox #5272 Fix z-fighting on overlapping fills within the same layer #3320 Fix handling of fractional values for layer.minzoom #2929 Clarify coordinate ordering in documentation for center option #5042 (h/t @karthikb351) Fix output of stop functions where two stops have the same input value #5020 (h/t @edpop ) Fix bug wherein using Map#addLayer() with an inline source would mutate its input #4040 Fix invalid css keyframes selector #5075 (h/t @aar0nr) Fix GPU-specific bug wherein canvas sources caused an error #4262 Fix a race condition in symbol layer handling that caused sporadic uncaught errors #5185 Fix bug causing line labels to render incorrectly on overzoomed tiles #5120 Fix bug wherein NavigationControl triggered mouse events unexpectedly #5148 Fix bug wherein clicking on the NavigationControl compass caused an error in IE 11 #4784 Remove dependency on GPL-3-licensed fast-stable-stringify module #5152 Fix bug wherein layer-specific an event listener produced an error after its target layer was removed from the map #5145 Fix Marker#togglePopup() failing to return the marker instance #5116 Fix bug wherein a marker's position failed to adapt to the marker element's size changing #5133 Fix rendering bug affecting Broadcom GPUs #5073","title":":bug: Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#wrench-development-workflow-improvements_1","text":"Add (and now require) Flow type annotations throughout the majority of the codebase. Migrate to CircleCI 2.0 #4939","title":":wrench: Development workflow improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0391-july-24-2017","text":"","title":"0.39.1 (July 24, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-bug-fixes_3","text":"Fix packaging issue in 0.39.0 #5025 Correctly evaluate enum-based identity functions #5023","title":":bug: Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0390-july-21-2017","text":"","title":"0.39.0 (July 21, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#warning-breaking-changes_2","text":"GeolocateControl breaking changes #4479 The option watchPosition has been replaced with trackUserLocation The camera operation has changed from jumpTo (not animated) to fitBounds (animated). An effect of this is the map pitch is no longer reset, although the bearing is still reset to 0. The accuracy of the geolocation provided by the device is used to set the view (previously it was fixed at zoom level 17). The maxZoom can be controlled via the new fitBoundsOptions option (defaults to 15). Anchor Marker s at their center by default #5019 @andrewharvey Increase significantRotateThreshold for the TouchZoomRotateHandler #4971, @dagjomar","title":":warning: Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#sparkles-features-and-improvements_2","text":"Improve performance of updating GeoJSON sources #4069, @ezheidtmann Improve rendering speed of extrusion layers #4818 Improve line label legibility in pitched views #4781 Improve line label legibility on curved lines #4853 Add user location tracking capability to GeolocateControl #4479, @andrewharvey New option showUserLocation to draw a \"dot\" as a Marker on the map at the user's location An active lock and background state are introduced with trackUserLocation . When in active lock the camera will update to follow the user location, however if the camera is changed by the API or UI then the control will enter the background state where it won't update the camera to follow the user location. New option fitBoundsOptions to control the camera operation New trackuserlocationstart and trackuserlocationend events New LngLat.toBounds method to extend a point location by a given radius to a LngLatBounds object Include main CSS file in package.json #4809, @tomscholz Add property function (data-driven styling) support for line-width #4773 Add property function (data-driven styling) support for text-anchor #4997 Add property function (data-driven styling) support for text-justify #5000 Add maxTileCacheSize option #4778, @jczaplew Add new icon-pitch-alignment and circle-pitch-alignment properties #4869 #4871 Add Map#getMaxBounds method #4890, @andrewharvey @lamuertepeluda Add option ( localIdeographFontFamily ) to use TinySDF to avoid loading expensive CJK glyphs #4895 If config.API_URL includes a path prepend it to the request URL #4995 Bump supercluster version to expose cluster_id property on clustered sources #5002","title":":sparkles: Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-bug-fixes_4","text":"Do not display FullscreenControl on unsupported devices #4838, @stepankuzmin Fix yarn build on Windows machines #4887 Prevent potential memory leaks by dispatching loadData to the same worker every time #4877 Fix bug preventing the rtlTextPlugin from loading before the initial style load #4870 Fix bug causing runtime-stying to not take effect in some situations #4893 Prevent requests of vertical glyphs for labels that can't be verticalized #4720 Fix character detection for Zanabazar Square #4940 Fix LogoControl logic to update correctly, and hide the <div> instead of removing it from the DOM when it is not needed #4842 Fix GeoJSONSource#serialize to include all options Fix error handling in GlyphSource#getSimpleGlyphs #4992 Fix bug causing setStyle to reload raster tiles #4852 Fix bug causing symbol layers not to render on devices with non-integer device pixel ratios #4989 Fix bug where Map#queryRenderedFeatures would error when returning no results #4993 Fix bug where Map#areTilesLoaded would always be false on sourcedata events for reloading tiles #4987 Fix bug causing categorical property functions to error on non-ascending order stops #4996","title":":bug: Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#hammer_and_wrench-development-workflow-changes","text":"Use flow to type much of the code base #4629 #4903 #4909 #4910 #4911 #4913 #4915 #4918 #4932 #4933 #4948 #4949 #4955 #4966 #4967 #4973 :muscle: @jfirebaugh @vicapow Use style specification to generate flow type #4958 Explicitly list which files to publish in package.json #4819 @tomscholz Move render test ignores to a separate file #4977 Add code of conduct #5015 :sparkling_heart:","title":":hammer_and_wrench: Development workflow changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0380-june-9-2017","text":"","title":"0.38.0 (June 9, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-sparkles","text":"Attenuate label size scaling with distance, improving readability of pitched maps #4547","title":"New features :sparkles:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes-beetle","text":"Skip rendering for patterned layers when pattern is missing #4687 Fix bug with map failing to rerender after webglcontextlost event #4725 @cdawi Clamp zoom level in flyTo to within the map's specified min- and maxzoom to prevent undefined behavior #4726 @ IvanSanchez Fix wordmark rendering in IE #4741 Fix slight pixelwise symbol rendering bugs caused by incorrect sprite calculations #4737 Prevent exceptions thrown by certain flyTo calls #4761 Fix \"Improve this map\" link #4685 Tweak queryRenderedSymbols logic to better account for pitch scaling #4792 Fix for symbol layers sometimes failing to render, most frequently in Safari #4795 Apply text-keep-upright after text-offset to keep labels upright when intended #4779 [Potentially breaking :warning: but considered a bugfix] Prevent exceptions thrown by empty GeoJSON tiles 4803","title":"Bug fixes :beetle:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#accessibility-improvements-sound","text":"Add aria-label to popup close button #4799 @andrewharvey","title":"Accessibility improvements :sound:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#development-workflow-testing-improvements-wrench","text":"Fix equality assertion bug in tests #4731 @IvanSanchez Benchmark results page improvements #4746 Require node version >=6.4.0, enabling the use of more ES6 features #4752 Document missing pitchWithRotate option #4800 @simast Move Github-specific Markdown files into subdirectory #4806 @tomscholz","title":"Development workflow + testing improvements :wrench:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0370-may-2nd-2017","text":"","title":"0.37.0 (May 2nd, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#warning-breaking-changes_3","text":"Removed LngLat#wrapToBestWorld","title":":warning: Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-rocket","text":"Improve popup/marker positioning #4577 Add Map#isStyleLoaded and Map#areTilesLoaded events #4321 Support offline sprites using file: protocol #4649 @oscarfonts","title":"New features :rocket:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes-bug","text":"Fix fullscreen control in Firefox #4666 Fix rendering artifacts that caused tile boundaries to be visible in some cases #4636 Fix default calculation for categorical zoom-and-property functions #4657 Fix scaling of images on retina screens #4645 Rendering error when a transparent image is added via Map#addImage #4644 Fix an issue with rendering lines with duplicate points #4634 Fix error when switching from data-driven styles to a constant paint value #4611 Add check to make sure invalid bounds on tilejson don't error out #4641","title":"Bug fixes :bug:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#development-workflow-improvements-computer","text":"Add flowtype interfaces and definitions @vicapow Add stylelinting to ensure mapboxgl- prefix on all classes #4584 @asantos3026","title":"Development workflow improvements :computer:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0360-april-19-2017","text":"","title":"0.36.0 (April 19, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-sparkles_1","text":"Replace LogoControl logo with the new Mapbox logo #4598","title":"New features :sparkles:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes-bug_1","text":"Fix bug with the BoxZoomHandler that made it glitchy if it is enabled after the DragPanHandler #4528 Fix undefined behavior in fill_outline shaders #4600 Fix Camera#easeTo interpolation on pitched maps #4540 Choose property function interpolation method by the property 's type #4614","title":"Bug fixes :bug:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#development-workflow-improvements-nerd_face","text":"Fix crash on missing style.json in integration tests gl-style-composite is now executable in line with the other tools @andrewharvey #4595 gl-style-composite utility now throws an error if a name conflict would occur between layers @andrewharvey #4595","title":"Development workflow improvements :nerd_face:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0351-april-12-2017","text":"","title":"0.35.1 (April 12, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes-bug_2","text":"Add .json extension to style-spec require statements for webpack compatibility #4563 @orangemug Fix documentation type for Map#fitBounde #4569 @andrewharvey Fix bug causing {Image,Video,Canvas}Source to throw exception if latitude is outside of +/-85.05113 #4574 Fix bug causing overzoomed raster tiles to disappear from map #4567 Fix bug causing queryRenderedFeatures to crash on polygon features that have an id field. #4581","title":"Bug fixes :bug:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0350-april-7-2017","text":"","title":"0.35.0 (April 7, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-rocket_1","text":"Use anisotropic filtering to improve rendering of raster tiles on pitched maps #1064 Add pitchstart and pitchend events #2449 Add an optional layers parameter to Map#on #1002 Add data-driven styling support for text-offset #4495 Add data-driven styling support for text-rotate #3516 Add data-driven styling support for icon-image #4304 Add data-driven styling support for {text,icon}-size #4455","title":"New features :rocket:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes-bug_3","text":"Suppress error messages in JS console due to missing tiles #1800 Fix bug wherein GeoJSONSource#setData() could cause unnecessary DOM updates #4447 Fix bug wherein Map#flyTo did not respect the renderWorldCopies setting #4449 Fix regression in browserify support # 4453 Fix bug causing poor touch event behavior on mobile devices #4259 Fix bug wherein duplicate stops in property functions could cause an infinite loop #4498 Respect image height/width in addImage api #4531 Fix bug preventing correct behavior of shift+zoom #3334 Fix bug preventing image source from rendering when coordinate area is too large #4550 Show image source on horizontally wrapped worlds #4555 Fix bug in the handling of refreshedExpiredTiles option #4549 Support the TileJSON bounds property #1775","title":"Bug fixes :bug:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#development-workflow-improvements-computer_1","text":"Upgrade flow to 0.42.0 (#4500)","title":"Development workflow improvements :computer:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0340-march-17-2017","text":"","title":"0.34.0 (March 17, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-rocket_2","text":"Add Map#addImage and Map#removeImage API to allow adding icon images at runtime #4404 Simplify non-browserify bundler usage by making the distribution build the main entrypoint #4423","title":"New features :rocket:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes-bug_4","text":"Fix issue where coincident start/end points of LineStrings were incorrectly rendered as joined #4413 Fix bug causing queryRenderedFeatures to fail in cases where both multiple sources and data-driven paint properties were present #4417 Fix bug where tile request errors caused map.loaded() to incorrectly return false #4425","title":"Bug fixes :bug:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#testing-improvements-white_check_mark","text":"Improve test coverage across several core modules #4432 #4431 #4422 #4244 :bowing_man:","title":"Testing improvements :white_check_mark:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0331-march-10-2017","text":"","title":"0.33.1 (March 10, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes-bug_5","text":"Prevent Mapbox logo from being added to the map more than once #4386 Add type='button' to FullscreenControl to prevent button from acting as a form submit #4397 Fix issue where map would continue to rotate if Ctrl key is released before the click during a DragRotate event #4389 Remove double options.easing description from the Map#fitBounds documentation #4402","title":"Bug fixes :bug:"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0330-march-8-2017","text":"","title":"0.33.0 (March 8, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#warning-breaking-changes_4","text":"Automatically add Mapbox wordmark when required by Mapbox TOS #3933 Increase default maxZoom from 20 to 22 #4333 Deprecate tiledata and tiledataloading events in favor of sourcedata and sourcedataloading . #4347 mapboxgl.util is no longer exported #1408 \"type\": \"categorical\" is now required for all categorical functions. Previously, some forms of \"implicitly\" categorical functions worked, and others did not. #3717","title":":warning: Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#white_check_mark-new-features","text":"Add property functions support for most symbol paint properties #4074, #4186, #4226 Add ability to specify default property value for undefined or invalid property values used in property functions. #4175 Improve Map#fitBounds to accept different values for top, bottom, left, and right padding #3890 Add a FullscreenControl for displaying a fullscreen map #3977","title":":white_check_mark: New features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#beetle-bug-fixes","text":"Fix validation error on categorical zoom-and-property functions #4220 Fix bug causing expired resources to be re-requested causing an infinite loop #4255 Fix problem where MapDataEvent#isSourceLoaded always returned false #4254 Resolve an issue where tiles in the source cache were prematurely deleted, resulting in tiles flickering when zooming in and out and #4311 Make sure MapEventData is passed through on calls Map#flyTo #4342 Fix incorrect returned values for Map#isMoving #4350 Fix categorical functions not allowing boolean stop domain values #4195 Fix piecewise-constant functions to allow non-integer zoom levels. #4196 Fix issues with $id in filters #4236 #4237 Fix a race condition with polygon centroid algorithm causing tiles not to load in some cases. #4273 Throw a meaningful error when giving non-array layers parameter to queryRenderedFeatures #4331 Throw a meaningful error when supplying invalid minZoom and maxZoom values #4324 Fix a memory leak when using the RTL Text plugin #4248","title":":beetle: Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#dev-workflow-changes","text":"Merged the Mapbox GL style specification repo to this one (now under src/style-spec and test/unit/style-spec ).","title":"Dev workflow changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0321-jan-26-2017","text":"","title":"0.32.1 (Jan 26, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_33","text":"Fix bug causing mapbox-gl-rtl-text plugin to not work #4055","title":"Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0320-jan-26-2017","text":"","title":"0.32.0 (Jan 26, 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#deprecation-notices","text":"Style classes are deprecated and will be removed in an upcoming release of Mapbox GL JS.","title":"Deprecation Notices"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features","text":"Add Map#isSourceLoaded method #4033 Automatically reload tiles based on their Expires and Cache-Control HTTP headers #3944 Add around=center option to scrollZoom and touchZoomRotate interaction handlers #3876 Add support for mapbox-gl-rtl-text plugin to support right-to-left scripts #3758 Add canvas source type #3765 Add Map#isMoving method #2792","title":"New Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_34","text":"Fix bug causing garbled text on zoom #3962 Fix bug causing crash in Firefox and Mobile Safari when rendering a large map #4037 Fix bug causing raster tiles to flicker during zoom #2467 Fix bug causing exception when unsetting and resetting fill-outline-color #3657 Fix memory leak when removing raster sources #3951 Fix bug causing exception when when zooming in / out on empty GeoJSON tile #3985 Fix line join artifacts at very sharp angles #4008","title":"Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0310-jan-10-2017","text":"","title":"0.31.0 (Jan 10 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features_1","text":"Add renderWorldCopies option to the Map constructor to give users control over whether multiple worlds are rendered in a map #3885","title":"New Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_35","text":"Fix performance regression triggered when Map pitch or bearing is changed #3938 Fix null pointer exception caused by trying to clear an undefined source #3903","title":"Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#miscellaneous","text":"Incorporate integration tests formerly at mapbox-gl-test-suite into this repository #3834","title":"Miscellaneous"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0300-jan-5-2017","text":"","title":"0.30.0 (Jan 5 2017)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features_2","text":"Fire an error when map canvas is larger than allowed by gl.MAX_RENDERBUFFER_SIZE #2893 Improve error messages when referencing a nonexistent layer id #2597 Fire an error when layer uses a geojson source and specifies a source-layer #3896 Add inline source declaration syntax #3857 Improve line breaking behavior #3887","title":"New Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#performance-improvements","text":"Improve Map#setStyle performance in some cases #3853","title":"Performance Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_36","text":"Fix unexpected popup positioning when some offsets are unspecified #3367 Fix incorrect interpolation in functions #3838 Fix incorrect opacity when multiple backgrounds are rendered #3819 Fix exception thrown when instantiating geolocation control in Safari #3844 Fix exception thrown when setting showTileBoundaries with no sources #3849 Fix incorrect rendering of transparent parts of raster layers in some cases #3723 Fix non-terminating render loop when zooming in in some cases #3399","title":"Bug Fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0290-december-20-2016","text":"","title":"0.29.0 (December 20 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features_3","text":"Add support for property functions for many style properties on line layers #3033 Make Map#setStyle smoothly transition to the new style #3621 Add styledata , sourcedata , styledataloading , and sourcedataloading events Add isSourceLoaded and source properties to MapDataEvent #3590 Remove \"max zoom\" cap of 20 #3683 Add circle-stroke-* style properties #3672 Add a more helpful error message when the specified container element doesn't exist #3719 Add watchPosition option to GeolocateControl #3739 Add positionOptions option to GeolocateControl #3739 Add aria-label to map canvas #3782 Adjust multipoint symbol rendering behavior #3763 Add support for property functions for icon-offset #3791 Improved antialiasing on pitched lines #3790 Allow attribution control to collapse to an \u24d8 button on smaller screens #3783 Improve line breaking algorithm #3743","title":"New Features"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#performance-improvements_1","text":"Fix memory leak when calling Map#removeSource #3602 Reduce bundle size by adding custom build of gl-matrix #3734 Improve performance of projection code #3721 Improve performance of style function evaluation #3816","title":"Performance Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_37","text":"Fix exception thrown when using line-color property functions #3639 Fix exception thrown when removing a layer and then adding another layer with the same id but different type #3655 Fix exception thrown when passing a single point to Map#fitBounds #3655 Fix exception thrown occasionally during rapid map mutations #3681 Fix rendering defects on pitch=0 on some systems #3740 Fix unnecessary CPU usage when displaying a raster layer #3764 Fix bug causing sprite after Map#setStyle #3829 Fix bug preventing Map from emitting a contextmenu event on Windows browsers #3822","title":"Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0280-november-17-2016","text":"","title":"0.28.0 (November 17 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-and-improvements","text":"Performance improvements for Map#addLayer and Map#removeLayer #3584 Add method for changing layer order at runtime - Map#moveLayer #3584 Update vertical punctuation logic to Unicode 9.0 standard #3608","title":"New features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bug-fixes_38","text":"Fix data-driven fill-opacity rendering when using a fill-pattern #3598 Fix line rendering artifacts #3627 Fix incorrect rendering of opaque fills on top of transparent fills #2628 Prevent AssertionErrors from pitching raster layers by only calling Worker#redoPlacement on vector and GeoJSON sources #3624 Restore IE11 compatability #3635 Fix symbol placement for cached tiles #3637","title":"Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0270-november-11-2016","text":"","title":"0.27.0 (November 11 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_9","text":"Replace fill-extrude-height and fill-extrude-base properties of fill render type with a separate fill-extrusion type (with corresponding fill-extrusion-height and fill-extrusion-base properties), solving problems with render parity and runtime switching between flat and extruded fills. https://github.com/mapbox/mapbox-gl-style-spec/issues/554 Change the units for extrusion height properties ( fill-extrusion-height , fill-extrusion-base ) from \"magic numbers\" to meters. #3509 Remove mapboxgl.Control class and change the way custom controls should be implemented. #3497 Remove mapboxgl.util functions: inherit , extendAll , debounce , coalesce , startsWith , supportsGeolocation . #3441 #3571 mapboxgl.util is deprecated and will be removed in the next release. #1408","title":"\u26a0\ufe0f Breaking changes \u26a0\ufe0f"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-and-improvements_1","text":"Tons of performance improvements that combined make rendering up to 3 times faster , especially for complex styles. #3485 #3489 #3490 #3491 #3498 #3499 #3501 #3510 #3514 #3515 #3486 #3527 #3574 \u26a1\ufe0f\u26a1\ufe0f\u26a1\ufe0f \ud83c\ude2f Added vertical text writing mode for languages that support it. #3438 \ud83c\ude2f Improved line breaking of Chinese and Japanese text in point-placed labels. #3420 Reduce the default number of worker threads ( mapboxgl.workerCount ) for better performance. #3565 Automatically use categorical style function type when input values are strings. #3384 Improve control buttons accessibility. #3492 Remove geolocation button if geolocation is disabled (e.g. the page is not served through https ). #3571 Added Map#getMaxZoom and Map#getMinZoom methods #3592","title":"New features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes","text":"Fix several line dash rendering bugs. #3451 Fix intermittent map flicker when using image sources. #3522 Fix incorrect rendering of semitransparent background layers. #3521 Fix broken raster-fade-duration property. #3532 Fix handling of extrusion heights with negative values (by clamping to 0 ). #3463 Fix GeoJSON sources not placing labels/icons correctly after map rotation. #3366 Fix icon/label placement not respecting order for layers with numeric names. #3404 Fix queryRenderedFeatures working incorrectly on colliding labels. #3459 Fix a bug where changing extrusion properties at runtime sometimes threw an error. #3487 #3468 Fix a bug where map.loaded() always returned true when using raster tile sources. #3302 Fix a bug where moving the map out of bounds sometimes threw failed to invert matrix error. #3518 Fixed queryRenderedFeatures throwing an error if no parameters provided. #3542 Fixed a bug where using multiple \\n in a text field resulted in an error. #3570","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#misc","text":"\ud83d\udc1e Fix npm install mapbox-gl pulling in all devDependencies , leading to an extremely slow install. #3377 Switch the codebase to ES6. #3388 #3408 #3415 #3421 A lot of internal refactoring to make the codebase simpler and more maintainable. Various documentation fixes. #3440","title":"Misc"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0260-october-13-2016","text":"","title":"0.26.0 (October 13 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements","text":"Add fill-extrude-height and fill-extrude-base style properties (3d buildings) :cityscape: #3223 Add customizable colorSpace interpolation to functions #3245 Add identity function type #3274 Add depth testing for symbols with 'pitch-alignment': 'map' #3243 Add dataloading events for styles and sources #3306 Add Control suffix to all controls :warning: BREAKING CHANGE :warning: #3355 Calculate style layer ref s automatically and get rid of user-specified ref s :warning: BREAKING CHANGE :warning: #3486","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#performance-improvements_2","text":"Ensure removing style or source releases all tile resources #3359","title":"Performance Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_1","text":"Fix bug causing an error when Marker#setLngLat is called #3294 Fix bug causing incorrect coordinates in touchend on Android Chrome #3319 Fix bug causing incorrect popup positioning at top of screen #3333 Restore tile property to data events fired when a tile is removed #3328 Fix bug causing \"Improve this map\" link to not preload map location #3356","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0251-september-30-2016","text":"","title":"0.25.1 (September 30 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_2","text":"Fix bug causing attribution to not be shown #3278 Fix bug causing exceptions when symbol text has a trailing newline #3281","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0250-september-29-2016","text":"","title":"0.25.0 (September 29 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_10","text":"Evented#off now require two arguments; omitting the second argument in order to unbind all listeners for an event type is no longer supported, as it could cause unintended unbinding of internal listeners.","title":"Breaking Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_1","text":"Consolidate undocumented data lifecycle events into data and dataloading events (#3255) Add auto value for style spec properties (#3203)","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_3","text":"Fix bug causing \"Map#queryRenderedFeatures\" to return no features after map rotation or filter change (#3233) Change webpack build process (#3235) :warning: BREAKING CHANGE :warning: Improved error messages for LngLat#convert (#3232) Fix bug where the tiles field is omitted from the RasterTileSource#serialize method (#3259) Comply with HTML spec by replacing the div within the Navigation control <button> with a span element (#3268) Fix bug causing Marker instances to be translated to non-whole pixel coordinates that caused blurriness (#3270)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#performance-improvements_3","text":"Avoid unnecessary style validation (#3224) Share a single blob URL between all workers (#3239)","title":"Performance Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0240-september-19-2016","text":"","title":"0.24.0 (September 19 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_2","text":"Allow querystrings in mapbox:// URLs #3113 Allow \"drag rotate\" interaction to control pitch #3105 Improve performance by decreasing Worker script Blob size #3158 Improve vector tile performance #3067 Decrease size of distributed library by removing package.json #3174 Add support for new lines in text-field #3179 Make keyboard navigation smoother #3190 Make mouse wheel zooming smoother #3189 Add better error message when calling Map#queryRenderedFeatures on nonexistent layer #3196 Add support for imperial units on Scale control #3160 Add map's pitch to URL hash #3218","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_4","text":"Fix exception thrown when using box zoom handler #3078 Ensure style filters cannot be mutated by reference #3093 Fix exceptions thrown when opening marker-bound popup by click #3104 Fix bug causing fills with transparent colors and patterns to not render #3107 Fix order of latitudes in Map#getBounds #3081 Fix incorrect evaluation of zoom-and-property functions #2827 #3155 Fix incorrect evaluation of property functions #2828 #3155 Fix bug causing garbled text rendering when multiple maps are rendered on the page #3086 Fix rendering defects caused by Map#setFilter and map rotation on iOS 10 #3207 Fix bug causing image and video sources to disappear when zooming in #3010","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0230-august-25-2016","text":"","title":"0.23.0 (August 25 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_3","text":"Add support for line-color property functions #2938 Add Scale control #2940 #3042 Improve polygon label placement by rendering labels at the pole of inaccessability #3038 Add Popup offset option #1962 Add Marker#bindPopup method #3056","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#performance-improvements_4","text":"Improve performance of pages with multiple maps using a shared WebWorker pool #2952","title":"Performance Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_5","text":"Make LatLngBounds obey its documented argument order ( southwest , northeast ), allowing bounds across the dateline #2414 :warning: BREAKING CHANGE :warning: Fix bug causing fill-opacity property functions to not render as expected #3061","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0221-august-18-2016","text":"","title":"0.22.1 (August 18 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_4","text":"Reduce library size by using minified version of style specification #2998 Add a warning when rendering artifacts occur due to too many symbols or glyphs being rendered in a tile #2966","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_6","text":"Fix bug causing exception to be thrown by Map#querySourceFeatures #3022 Fix bug causing Map#loaded to return true while there are outstanding tile updates #2847","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0220-august-11-2016","text":"","title":"0.22.0 (August 11 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_11","text":"The GeoJSONSource , VideoSource , ImageSource constructors are now private. Please use map.addSource({...}) to create sources and map.getSource(...).setData(...) to update GeoJSON sources. #2667 Map#onError has been removed. You may catch errors by listening for the error event. If no listeners are bound to error , error messages will be printed to the console. #2852","title":"Breaking Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_5","text":"Increase max glyph atlas size to accomodate alphabets with large numbers of characters #2930 Add support for filtering features on GeoJSON / vector tile $id #2888 Update geolocate icon #2973 Add a close event to Popup s #2953 Add a offset option to Marker #2885 Print error events without any listeners to the console #2852 Refactored Source interface to prepare for custom source types #2667","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_7","text":"Fix opacity property-functions for fill layers #2971 Fix DataCloneError in Firefox and IE11 #2559 Fix bug preventing camera animations from being triggered in moveend listeners #2944 Fix bug preventing fill-outline-color from being unset #2964 Fix webpack support #2887 Prevent buttons in controls from acting like form submit buttons #2935 Fix bug preventing map interactions near two controls in the same corner #2932 Fix crash resulting for large style batch queue #2926","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0210-july-13-2016","text":"","title":"0.21.0 (July 13 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_12","text":"GeoJSON polygon inner rings are now rewound for compliance with the v2 vector tile . This may affect some uses of line-offset , reversing the direction of the offset. #2889","title":"Breaking Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_6","text":"Add text-pitch-alignment style property #2668 Allow query parameters on mapbox:// URLs #2702 Add icon-text-fit and icon-text-fit-padding style properties #2720 Enable property functions for icon-rotate #2738 Enable property functions for fill-opacity #2733 Fire Map#mouseout events #2777 Allow query parameters on all sprite URLs #2772 Increase sprite atlas size to 1024px square, allowing more and larger sprites #2802 Add Marker class #2725 #2810 Add {quadkey} URL parameter #2805 Add circle-pitch-scale style property #2821","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_8","text":"Fix rendering of layers with large numbers of features #2794 Fix exceptions thrown during drag-rotate interactions #2840 Fix error when adding and removing a layer within the same update cycle #2845 Fix false \"Geometry exceeds allowed extent\" warnings #2568 Fix Map#loaded returning true while there are outstanding tile updates #2847 Fix style validation error thrown while removing a filter #2847 Fix event data object not being passed for double click events #2814 Fix multipolygons disappearing from map at certain zoom levels #2704 Fix exceptions caused by queryRenderedFeatures in Safari and Firefox #2822 Fix mapboxgl#supported() returning true in old versions of IE11 mapbox/mapbox-gl-supported#1","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0201-june-21-2016","text":"","title":"0.20.1 (June 21 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_9","text":"Fixed exception thrown when changing *-translate properties via setPaintProperty (#2762)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0200-june-10-2016","text":"","title":"0.20.0 (June 10 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_7","text":"Add limited WMS support #2612 Add workerCount constructor option #2666 Improve performance of locationPoint and pointLocation #2690 Remove \"Not using VertexArrayObject extension\" warning messages #2707 Add version property to mapboxgl #2660 Support property functions in circle-opacity and circle-blur #2693","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_10","text":"Fix exception thrown by \"drag rotate\" handler #2680 Return an empty array instead of an empty object from queryRenderedFeatures #2694 Fix bug causing map to not render in IE","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0191-june-2-2016","text":"","title":"0.19.1 (June 2 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_11","text":"Fix rendering of polygons with more than 35k vertices #2657","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0190-may-31-2016","text":"","title":"0.19.0 (May 31 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_8","text":"Allow use of special characters in property field names #2547 Improve rendering speeds on fill layers #1606 Add data driven styling support for fill-color and fill-outline-color #2629 Add has and !has filter operators mapbox/feature-filter#15 Improve keyboard handlers with held-down keys #2530 Support 'tms' tile scheme #2565 Add trackResize option to Map #2591","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_12","text":"Scale circles when map is displayed at a pitch #2541 Fix background pattern rendering bug #2557 Fix bug that prevented removal of a fill-pattern from a fill layer #2534 Fix line-pattern and fill-pattern rendering #2596 Fix some platform specific rendering bugs #2553 Return empty object from queryRenderedFeatures before the map is loaded #2621 Fix \"there is no texture bound to the unit 1\" warnings #2509 Allow transitioned values to be unset #2561","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0180-april-13-2016","text":"","title":"0.18.0 (April 13 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_9","text":"Implement zoom-and-property functions for circle-color and circle-size #2454 Dedupe attributions that are substrings of others #2453 Misc performance improvements #2483 #2488","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_13","text":"Fix errors when unsetting and resetting a style property #2464 Fix errors when updating paint properties while using classes #2496 Fix errors caused by race condition in unserializeBuckets #2497 Fix overzoomed tiles in wrapped worlds #2482 Fix errors caused by mutating a filter object after calling Map#setFilter #2495","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0170-april-13-2016","text":"","title":"0.17.0 (April 13 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_13","text":"Remove map.batch in favor of automatically batching style mutations (i.e. calls to Map#setLayoutProperty , Map#setPaintProperty , Map#setFilter , Map#setClasses , etc.) and applying them once per frame, significantly improving performance when updating the style frequently #2355 #2380 Remove util.throttle #2345","title":"Breaking Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_10","text":"Improve performance of all style mutation methods by only recalculating affected properties #2339 Improve fading of labels and icons #2376 Improve rendering performance by reducing work done on the main thread #2394 Validate filters passed to Map#queryRenderedFeatures and Map#querySourceFeatures #2349 Display a warning if a vector tile's geometry extent is larger than supported #2383 Implement property functions (i.e. data-driven styling) for circle-color and circle-size #1932 Add Popup#setDOMContent method #2436","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_14","text":"Fix a performance regression caused by using 1 WebWorker instead of # cpus - 1 WebWorker s, slowing down tile loading times #2408 Fix a bug in which Map#queryRenderedFeatures would sometimes return features that had been removed #2353 Fix clusterMaxZoom option on GeoJSONSource not working as expected #2374 Fix anti-aliased rendering for pattern fills #2372 Fix exception caused by calling Map#queryRenderedFeatures or Map#querySourceFeatures with no arguments Fix exception caused by calling Map#setLayoutProperty for text-field or icon-image #2407","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0160-march-24-2016","text":"","title":"0.16.0 (March 24 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_14","text":"Replace Map#featuresAt and Map#featuresIn with Map#queryRenderedFeatures and map.querySourceFeatures (#2224) Replace featuresAt and featuresIn with queryRenderedFeatures Make queryRenderedFeatures synchronous, remove the callback and use the return value. Rename layer parameter to layers and make it an array of layer names. Remove the radius parameter. radius was used with featuresAt to account for style properties like line-width and circle-radius . queryRenderedFeatures accounts for these style properties. If you need to query a larger area, use a bounding box query instead of a point query. Remove the includeGeometry parameter because queryRenderedFeatures always includes geometries. Map#debug is renamed to Map#showTileBoundaries (#2284) Map#collisionDebug is renamed to Map#showCollisionBoxes (#2284)","title":"Breaking Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_11","text":"Improve overall rendering performance. (#2221) Improve performance of GeoJSONSource#setData . (#2222) Add Map#setMaxBounds method (#2234) Add isActive and isEnabled methods to interaction handlers (#2238) Add Map#setZoomBounds method (#2243) Add touch events (#2195) Add map.queryRenderedFeatures to query the styled and rendered representations of features (#2224) Add map.querySourceFeatures to get features directly from vector tiles, independent of the style (#2224) Add mapboxgl.Geolocate control (#1939) Make background patterns render seamlessly across tile boundaries (#2305)","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_15","text":"Fix calls to setFilter , setLayoutProperty , and setLayerZoomRange on ref children (#2228) Fix undefined bucket errors after setFilter calls (#2244) Fix bugs causing hidden symbols to be rendered (#2246, #2276) Fix raster flickering (#2236) Fix queryRenderedFeatures precision at high zoom levels (#2292) Fix holes in GeoJSON data caused by unexpected winding order (#2285) Fix bug causing deleted features to be returned by queryRenderedFeatures (#2306) Fix bug causing unexpected fill patterns to be rendered (#2307) Fix popup location with preceding sibling elements (#2311) Fix polygon anti-aliasing (#2319) Fix slivers between non-adjacent polygons (#2319) Fix keyboard shortcuts causing page to scroll (#2312)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0150-march-1-2016","text":"","title":"0.15.0 (March 1 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_12","text":"Add ImageSource#setCoordinates and VideoSource#setCoordinates (#2184)","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_16","text":"Fix flickering on raster layers (#2211) Fix browser hang when zooming quickly on raster layers (#2211)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0143-feb-25-2016","text":"","title":"0.14.3 (Feb 25 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_13","text":"Improve responsiveness of zooming out by using cached parent tiles (#2168) Improve contextual clues on style API validation (#2170) Improve performance of methods including setData (#2174)","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_17","text":"Fix incorrectly sized line dashes (#2099) Fix bug in which in feature filter drops features (#2166) Fix bug preventing Map#load from firing when tile \"Not Found\" errors occured (#2176) Fix rendering artifacts on mobile GPUs (#2117)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0142-feb-19-2016","text":"","title":"0.14.2 (Feb 19 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_18","text":"Look for loaded parent tiles in cache Set tile cache size based on viewport size (#2137) Fix tile render order for layer-by-layer Remove source update throttling (#2139) Make panning while zooming more linear (#2070) Round points created during bucket creation (#2067) Correct bounds for a rotated or tilted map (#1842) Fix overscaled featuresAt (#2103) Allow using tileSize: 512 as a switch to trade retina support for 512px raster tiles Fix the serialization of paint classes (#2107) Fixed bug where unsetting style properties could mutate the value of other style properties (#2105) Less slanted dashed lines near sharp corners (#967) Fire map#load if no initial style is set (#2042)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0141-feb-10-2016","text":"","title":"0.14.1 (Feb 10 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_19","text":"Fix incorrectly rotated symbols along lines near tile boundries (#2062) Fix broken rendering when a fill layer follows certain symbol layers (#2092)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0140-feb-8-2016","text":"","title":"0.14.0 (Feb 8 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_15","text":"Switch GeoJSONSource clustering options from being measured in extent-units to pixels (#2026)","title":"Breaking Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_14","text":"Improved error message for invalid colors (#2006) Added support for tiles with variable extents (#2010) Improved filter performance and maximum size (#2024) Changed circle rendering such that all geometry nodes are drawn, not just the geometry's outer ring (#2027) Added Map#getStyle method (#1982)","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_20","text":"Fixed bug causing WebGL contexts to be \"used up\" by calling mapboxgl.supported() (#2018) Fixed non-deterministic symbol z-order sorting (#2023) Fixed garbled labels while zooming (#2012) Fixed icon jumping when touching trackpad with two fingers (#1990) Fixed overzoomed collision debug labels (#2033) Fixed dashes sliding along their line during zooming (#2039) Fixed overscaled minzoom setting for GeoJSON sources (#1651) Fixed overly-strict function validation for duplicate stops (#2075) Fixed crash due to performance.now not being present on some browsers (#2056) Fixed the unsetting of paint properties (#2037) Fixed bug causing multiple interaction handler event listeners to be attached (#2069) Fixed bug causing only a single debug box to be drawn (#2034)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0131-jan-27-2016","text":"","title":"0.13.1 (Jan 27 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_21","text":"Fixed broken npm package due to outdated bundled modules","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0130-jan-27-2016","text":"","title":"0.13.0 (Jan 27 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_22","text":"Fixed easeTo pan, zoom, and rotate when initial rotation != 0 (#1950) Fixed rendering of tiles with an extent != 4096 (#1952) Fixed missing icon collision boxes (#1978) Fixed null Tile#buffers errors (#1987)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#new-features-improvements_15","text":"Added symbol-avoid-edges style property (#1951) Improved symbol-max-angle check algorithm (#1959) Added marker clustering! (#1931) Added zoomstart, zoom, and zoomend events (#1958) Disabled drag on mousedown when using boxzoom (#1907)","title":"New Features &amp; Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0124-jan-19-2016","text":"","title":"0.12.4 (Jan 19 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_23","text":"Fix elementGroups null value errors (#1933) Fix some glyph atlas overflow cases (#1923)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0123-jan-14-2016","text":"","title":"0.12.3 (Jan 14 2016)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements","text":"Support inline attribution options in map options (#1865) Improve flyTo options (#1854, #1429)","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_24","text":"Fix flickering with overscaled tiles (#1921) Remove Node.remove calls for IE browser compatibility (#1900) Match patterns at tile boundaries (#1908) Fix Tile#positionAt, fix query tests (#1899) Fix flickering on streets (#1875) Fix text-max-angle property (#1870) Fix overscaled line patterns (#1856) Fix patterns and icons for mismatched pixelRatios (#1851) Fix missing labels when text size 0 at max zoom (#1809) Use linear interp when pixel ratios don't match (#1601) Fix blank areas, flickering in raster layers (#1876, #675) Fix labels slipping/cropping at tile bounds (#757)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-improvements","text":"Improve touch handler perceived performance (#1844)","title":"UX Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0122-dec-22-2015","text":"","title":"0.12.2 (Dec 22 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_1","text":"Support LngLat.convert([w, s, e, n]) (#1812) Invalid GeoJSON is now handled better","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_25","text":"Fixed Popup#addTo when the popup is already open (#1811) Fixed warping when rotating / zooming really fast Map#flyTo now flies across the antimeridan if shorter (#1853)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0121-dec-8-2015","text":"","title":"0.12.1 (Dec 8 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_16","text":"Reversed the direction of line-offset (#1808) Renamed Pinch interaction handler to TouchZoomRotate (#1777) Made Map#update and Map#render private methods (#1798) Made Map#remove remove created DOM elements (#1789)","title":"Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_2","text":"Added an method to disable touch rotation (#1777) Added a position option for Attribution (#1689)","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_26","text":"Ensure tile loading errors are properly reported (#1799) Ensure re-adding a previously removed pop-up works (#1477)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-improvements_1","text":"Don't round zoom level during double-click interaction (#1640)","title":"UX Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0120-dec-2-2015","text":"","title":"0.12.0 (Dec 2 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_3","text":"Added line-offset style property (#1778)","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0115-dec-1-2015","text":"","title":"0.11.5 (Dec 1 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_27","text":"Fixed unstable symbol layer render order when adding / removing layers (#1558) Fire map loaded event even if raster tiles have errors Fix panning animation during easeTo with zoom change Fix pitching animation during flyTo Fix pitching animation during easeTo Prevent rotation from firing mouseend events (#1104)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_4","text":"Fire mousedown and mouseup events (#1411) Fire movestart and moveend when panning (#1658) Added drag events (#1442) Request webp images for mapbox:// raster tiles in chrome (#1725)","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-improvements_2","text":"Added inertia to map rotation (#620)","title":"UX Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0114-nov-16-2015","text":"","title":"0.11.4 (Nov 16 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_28","text":"Fix alpha blending of alpha layers (#1684)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0113-nov-10-2015","text":"","title":"0.11.3 (Nov 10 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_29","text":"Fix GeoJSON rendering and performance (#1685)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-improvements_3","text":"Use SVG assets for UI controls (#1657) Zoom out with shift + dblclick (#1666)","title":"UX Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0112-oct-29-2015","text":"Misc performance improvements","title":"0.11.2 (Oct 29 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_30","text":"Fix sprites on systems with non-integer devicePixelRatio s (#1029 #1475 #1476) Fix layer minZoom being ignored if not less than source maxZoom Fix symbol placement at the start of a line (#1461) Fix raster-opacity on non-tile sources (#1270) Ignore boxzoom on shift-click (#1655)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-improvements_4","text":"Enable line breaks on common punctuation (#1115)","title":"UX Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_5","text":"Add toString and toArray methods to LngLat, LngLatBounds (#1571) Add Transform#resize method Add Map#getLayer method (#1183) Add Transform#unmodified property (#1452) Propagate WebGL context events (#1612)","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0111-sep-30-2015","text":"","title":"0.11.1 (Sep 30 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_31","text":"Add statistics and checkboxes to debug page Fix Map#featuresAt for non-4096 vector sources (#1529) Don't fire mousemove on drag-pan Fix maxBounds constrains (#1539) Fix maxBounds infinite loop (#1538) Fix memory leak in worker Assert valid TileCoord , fix wrap calculation in TileCoord#cover (#1483) Abort raster tile load if not in viewport (#1490)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_6","text":"Add Map event listeners for mouseup , contextmenu (right click) (#1532)","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0110-sep-11-2015","text":"","title":"0.11.0 (Sep 11 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_7","text":"Add Map#featuresIn : a bounding-box feature query Emit stylesheet validation errors (#1436)","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-improvements_5","text":"Handle v8 style center , zoom , bearing , pitch (#1452) Improve circle type styling (#1446) Improve dashed and patterned line antialiasing","title":"UX Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_32","text":"Load images in a way that respects Cache-Control headers Filter for rtree matches to those crossing bbox Log errors by default (#1463) Fixed modification of text-size via setLayoutProperty (#1451) Throw on lat > 90 || < -90. (#1443) Fix circle clipping bug (#1457)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#0100-aug-21-2015","text":"","title":"0.10.0 (Aug 21 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_17","text":"Switched to [longitude, latitude] coordinate order, matching GeoJSON. We anticipate that mapbox-gl-js will be widely used with GeoJSON, and in the long term having a coordinate order that is consistent with GeoJSON will lead to less confusion and impedance mismatch than will a [latitude, longitude] order. The following APIs were renamed: 1 2 3 4 5 * `LatLng` was renamed to `LngLat` * `LatLngBounds` was renamed to `LngLatBounds` * `Popup#setLatLng` was renamed to `Popup#setLngLat` * `Popup#getLatLng` was renamed to `Popup#getLngLat` * The `latLng` property of Map events was renamed `lngLat` The following APIs now expect array coordinates in [longitude, latitude] order: 1 2 3 4 5 6 7 8 * `LngLat.convert` * `LngLatBounds.convert` * `Popup#setLngLat` * The `center` and `maxBounds` options of the `Map` constructor * The arguments to `Map#setCenter` , `Map#fitBounds` , `Map#panTo` , and `Map#project` * The `center` option of `Map#jumpTo` , `Map#easeTo` , and `Map#flyTo` * The `around` option of `Map#zoomTo` , `Map#rotateTo` , and `Map#easeTo` * The `coordinates` properties of video and image sources Updated to mapbox-gl-style-spec v8.0.0 ( Changelog ). Styles are now expected to be version 8. You can use the gl-style-migrate utility to update existing styles. The format for mapbox:// style and glyphs URLs has changed. For style URLs, you should now use the format mapbox://styles/:username/:style . The :style portion of the URL no longer contains a username. For font URLs, you should now use the format mapbox://fonts/:username/{fontstack}/{range}.pbf . Mapbox default styles are now hosted via the Styles API rather than www.mapbox.com . You can make use of the Styles API with a mapbox:// style URL pointing to a v8 style, e.g. mapbox://styles/mapbox/streets-v8 . The v8 satellite style ( mapbox://styles/mapbox/satellite-v8 ) is now a plain satellite style, and not longer supports labels or contour lines via classes. For a labeled satellite style, use mapbox://styles/mapbox/satellite-hybrid . Removed mbgl.config.HTTP_URL and mbgl.config.FORCE_HTTPS ; https is always used when connecting to the Mapbox API. Renamed mbgl.config.HTTPS_URL to mbgl.config.API_URL .","title":"Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_33","text":"Don't draw halo when halo-width is 0 (#1381) Reverted shader changes that degraded performance on IE","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_8","text":"You can now unset layout and paint properties via the setLayoutProperty and setPaintProperty APIs by passing undefined as a property value. The layer option of featuresAt now supports an array of layers.","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#090-jul-29-2015","text":"glyphs URL now normalizes without the /v4/ prefix for mapbox:// urls. Legacy behavior for mapbox://fontstacks is still maintained (#1385) Expose geojson-vt options for GeoJSON sources (#1271) bearing snaps to \"North\" within a tolerance of 7 degrees (#1059) Now you can directly mutate the minzoom and maxzoom layer properties with map.setLayerZoomRange(layerId, minzoom, maxzoom) Exposed mapboxgl.Control , a base class used by all UI controls Refactored handlers to be individually included in Map options, or enable/disable them individually at runtime, e.g. map.scrollZoom.disable() . New feature: Batch operations can now be done at once, improving performance for calling multiple style functions: (#1352) js style.batch(function(s) { s.addLayer({ id: 'first', type: 'symbol', source: 'streets' }); s.addLayer({ id: 'second', type: 'symbol', source: 'streets' }); s.addLayer({ id: 'third', type: 'symbol', source: 'terrain' }); s.setPaintProperty('first', 'text-color', 'black'); s.setPaintProperty('first', 'text-halo-color', 'white'); }); * Improved documentation * featuresAt performance improvements by exposing includeGeometry option * Better label placement along lines (#1283) * Improvements to round linejoins on semi-transparent lines (mapbox/mapbox-gl-native#1771) * Round zoom levels for raster tile loading (2a2aec) * Source#reload cannot be called if source is not loaded (#1198) * Events bubble to the canvas container for custom overlays (#1301) * Move handlers are now bound on mousedown and touchstart events * map.featuresAt() now works across the dateline","title":"0.9.0 (Jul 29 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#081-jun-16-2015","text":"No code changes; released only to correct a build issue in 0.8.0.","title":"0.8.1 (Jun 16 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#080-jun-15-2015","text":"","title":"0.8.0 (Jun 15 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking-changes_18","text":"map.setView(latlng, zoom, bearing) has been removed. Use map.jumpTo(options) instead: js map.setView([40, -74.50], 9) // 0.7.0 or earlier map.jumpTo({center: [40, -74.50], zoom: 9}); // now * map.easeTo and map.flyTo now accept a single options object rather than positional parameters: js map.easeTo([40, -74.50], 9, null, {duration: 400}); // 0.7.0 or earlier map.easeTo({center: [40, -74.50], zoom: 9, duration: 400}); // now * mapboxgl.Source is no longer exported. Use map.addSource() instead. See the GeoJSON line or GeoJSON markers examples. * mapboxgl.util.supported() moved to mapboxgl.supported() .","title":"Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-improvements_6","text":"Add perspective rendering (#1049) Better and faster labelling (#1079) Add touch interactions support on mobile devices (#949) Viewport-relative popup arrows (#1065) Normalize mousewheel zooming speed (#1060) Add proper handling of GeoJSON features that cross the date line (#1275) Sort overlapping symbols in the y direction (#470) Control buttons are now on a 30 pixel grid (#1143) Improve GeoJSON processing performance","title":"UX improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_9","text":"Switch to JSDoc for documentation Bundling with browserify is now supported Validate incoming map styles (#1054) Add Map setPitch getPitch Add Map dblclick event. (#1168) Add Map getSource (660a8c1) Add Map setFilter and getFilter (#985) Add Map failIfMajorPerformanceCaveat option (#1082) Add Map preserveDrawingBuffer option (#1232) Add VideoSource getVideo() (#1162) Support vector tiles with extents other than 4096 (#1227) Use a DOM hierarchy that supports evented overlays (#1217) Pass latLng to the event object (#1068)","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-bugfixes","text":"Fix rendering glitch on iOS 8 (#750) Fix line triangulation errors (#1120, #992) Support unicode range 65280-65535 (#1108) Fix cracks between fill patterns (#972) Fix angle of icons aligned with lines (37a498a) Fix dashed line bug for overscaled tiles (#1132) Fix icon artifacts caused by sprite neighbors (#1195)","title":"UX Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-bugfixes","text":"Don't fire spurious moveend events on mouseup (#1107) Fix a race condition in featuresAt (#1220) Fix for brittle fontstack name convention (#1070) Fix broken Popup setHTML (#1272) Fix an issue with cross-origin image requests (#1269)","title":"API Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#070-mar-3-2015","text":"","title":"0.7.0 (Mar 3 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking","text":"Rename Map hover event to mousemove . Change featuresAt to return GeoJSON objects, including geometry (#1010) Remove Map canvas and container properties, add getCanvas and getContainer methods instead","title":"Breaking"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#ux-improvements_7","text":"Improve line label density Add boxzoom interaction (#1038) Add keyboard interaction (#1034) Faster GeoJSONSource setData without flickering (#973)","title":"UX Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#api-improvements_10","text":"Add Popup component (#325) Add layer API (#1022) Add filter API (#985) More efficient filter API (#1018) Accept plain old JS object for addSource (#1021) Reparse overscaled tiles","title":"API Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_34","text":"Fix featuresAt for LineStrings (#1006) Fix tileSize argument to GeoJSON worker (#987) Remove extraneous files from the npm package (#1024) Hide \"improve map\" link in print (#988)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#060-feb-9-2015","text":"","title":"0.6.0 (Feb 9 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_35","text":"Add wrapped padding to sprite for repeating images (#972) Clear color buffers before rendering (#966) Make line-opacity work with line-image (#970) event.toElement fallback for Firefox (#932) skip duplicate vertices at ends of lines (#776) allow characters outside \\w to be used in token Clear old tiles when new GeoJSON is loaded (#905)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_7","text":"Added map.setPaintProperty() , map.getPaintProperty() , map.setLayoutProperty() , and map.getLayoutProperty() . Switch to ESLint and more strict code rules (#957) Grab 2x raster tiles if retina (#754) Support for mapbox:// style URLs (#875)","title":"Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking_1","text":"Updated to mapbox-gl-style-spec v7.0.0 ( Changelog ). Styles are now expected to be version 7. You can use the gl-style-migrate utility to update existing styles. HTTP_URL and HTTPS_URL config options must no longer include a /v4 path prefix. addClass , removeClass , setClasses , hasClass , and getClasses are now methods on Map. Style#cascade is now private, pending a public style mutation API (#755). The format for featuresAt results changed. Instead of result-per-geometry-cross-layer, each result has a layers array with all layers that contain the feature. This avoids duplication of geometry and properties in the result set.","title":"Breaking"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#052-jan-07-2015","text":"","title":"0.5.2 (Jan 07 2015)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_36","text":"Remove tiles for unused sources (#863) Fix fill pattern alignment","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_8","text":"Add GeoJSONSource maxzoom option (#760) Return ref layers in featuresAt (#847) Return any extra layer keys provided in the stylesheet in featuresAt Faster protobuf parsing","title":"Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#051-dec-19-2014","text":"","title":"0.5.1 (Dec 19 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_37","text":"Fix race conditions with style loading/rendering Fix race conditions with setStyle Fix map.remove() Fix featuresAt properties","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#050-dec-17-2014","text":"","title":"0.5.0 (Dec 17 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_38","text":"Fix multiple calls to setStyle","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_9","text":"featuresAt now returns additional information Complete style/source/tile event suite: style.load, style.error, style.change, source.add, source.remove, source.load, source.error, source.change, tile.add, tile.remove, tile.load, tile.error Vastly improved performance and correctness for GeoJSON sources Map#setStyle accepts a style URL Support {prefix} in tile URL templates Provide a source map with minified source","title":"Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking_2","text":"Results format for featuresAt changed","title":"Breaking"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#042-nov-14-2014","text":"","title":"0.4.2 (Nov 14 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_39","text":"Ensure only one easing is active at a time (#807) Don't require style to perform easings (#817) Fix raster tiles sometimes not showing up (#761)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_10","text":"Internet Explorer 11 support (experimental)","title":"Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#041-nov-10-2014","text":"","title":"0.4.1 (Nov 10 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_40","text":"Interpolate to the closest bearing when doing rotation animations (#818)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#040-nov-4-2014","text":"","title":"0.4.0 (Nov 4 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking_3","text":"Updated to mapbox-gl-style-spec v6.0.0 ( Changelog ). Styles are now expected to be version 6. You can use the gl-style-migrate utility to update existing styles.","title":"Breaking"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#032-oct-23-2014","text":"","title":"0.3.2 (Oct 23 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_41","text":"Fix worker initialization with deferred or async scripts","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_11","text":"Added map.remove() CDN assets are now served with gzip compression","title":"Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#031-oct-06-2014","text":"","title":"0.3.1 (Oct 06 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_42","text":"Fixed iteration over arrays with for/in Made browserify deps non-dev (#752)","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#030-sep-23-2014","text":"","title":"0.3.0 (Sep 23 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking_4","text":"Updated to mapbox-gl-style-spec v0.0.5 ( Changelog ). Styles are now expected to be version 5. You can use the gl-style-migrate utility to update existing styles. Removed support for composite layers for performance reasons. #523 raster-hue-rotate units are now degrees.","title":"Breaking"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_12","text":"Added LatLng#wrap Added support for Mapbox fontstack API. Added support for remote, non-Mapbox TileJSON sources and inline TileJSON sources (#535, #698). Added support for symbol-avoid-edges property to allow labels to be placed across tile edges. Fixed mkdir issue on Windows (#674). Fixed drawing beveled line joins without overlap.","title":"Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_43","text":"Fixed performance when underzooming a layer's minzoom. Fixed raster-opacity for regular raster layers. Fixed various corner cases of easing functions. Do not modify original stylesheet (#728). Inherit video source from source (#699). Fixed interactivity for geojson layers. Stop dblclick on navigation so the map does not pan (#715).","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#022-aug-12-2014","text":"","title":"0.2.2 (Aug 12 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking_5","text":"map.setBearing() no longer supports a second argument. Use map.rotateTo with an offset option and duration 0 if you need to rotate around a point other than the map center.","title":"Breaking"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_13","text":"Improved GeoJSONSource to also accept URL as data option, eliminating a huge performance bottleneck in case of large GeoJSON files. #669 #671 Switched to a different fill outlines rendering approach. #668 Made the minified build 12% smaller gzipped (66 KB now). Added around option to Map zoomTo / rotateTo . Made the permalink hash more compact. Bevel linejoins no longer overlap and look much better when drawn with transparency.","title":"Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_44","text":"Fixed the broken minified build . #679 Fixed blurry icons rendering. #666 Fixed util.supports WebGL detection producing false positives in some cases. #677 Fixed invalid font configuration completely blocking tile rendering. #662 Fixed Map project / unproject to properly accept array-form values. Fixed sprite loading race condition. #593 Fixed GeoJSONSource setData not updating the map until zoomed or panned. #676","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#021-aug-8-2014","text":"","title":"0.2.1 (Aug 8 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#breaking_6","text":"Changed Navigation control signature: now it doesn't need map in constructor and gets added with map.addControl(nav) or nav.addTo(map) . Updated CSS classes to have consistent naming prefixed with mapboxgl- .","title":"Breaking"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#improvements_14","text":"Added attribution control (present by default, disable by passing attributionControl: false in options). Added rotation by dragging the compass control. Added grabbing cursors for the map by default. Added util.inherit and util.debounce functions. Changed the default debug page style to OSM Bright. Token replacements now support dashes. Improved navigation control design.","title":"Improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#bugfixes_45","text":"Fixed compass control to rotate its icon with the map. Fixed navigation control cursors. Fixed inertia going to the wrong direction in a rotated map. Fixed inertia race condition where error was sometimes thrown after erratic panning/zooming.","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/CHANGELOG/#020-aug-6-2014","text":"First public release.","title":"0.2.0 (Aug 6 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/shaders/","text":"Mapbox GL Shaders This repository contains GL shaders which are shared by Mapbox GL JS and Mapbox GL Native . Pragmas Some variables change type depending on their context: if the variable is the same for all features, we declare it as a uniform if the variable is different for each feature, we declare it as an attribute (in the vertex shader) and an accompanying varying (in both the vertex and fragment shaders). if the variable is different for each feature and a function of zoom, we declare several attributes and uniforms then calculate the value using interpolation We abstract over this functionality using pragmas. 1 2 3 4 5 6 7 #pragma mapbox: define highp vec4 color main () { # pragma mapbox : initialize highp vec4 color ... gl_FragColor = color ; } This program defines a variable within main called color , initialize the value of color , then sets gl_FragColor to the value of color . Pragmas take the following form. 1 #pragma mapbox: (define|initialize) (lowp|mediump|highp) (float|vec2|vec3|vec4) {name} When using pragmas, the following requirements apply. all pragma-defined variables must have both define and initialize pragmas define pragmas must be in file scope initialize pragmas must be in function scope all pragma-defined variables defined and initialized in the fragment shader must also be defined and initialized in the vertex shader because attribute s are not accessible from the fragment shader Prelude The _prelude.fragment.glsl and _prelude.vertex.glsl files are automatically included in all shaders by the compiler.","title":"Mapbox GL Shaders"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/shaders/#mapbox-gl-shaders","text":"This repository contains GL shaders which are shared by Mapbox GL JS and Mapbox GL Native .","title":"Mapbox GL Shaders"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/shaders/#pragmas","text":"Some variables change type depending on their context: if the variable is the same for all features, we declare it as a uniform if the variable is different for each feature, we declare it as an attribute (in the vertex shader) and an accompanying varying (in both the vertex and fragment shaders). if the variable is different for each feature and a function of zoom, we declare several attributes and uniforms then calculate the value using interpolation We abstract over this functionality using pragmas. 1 2 3 4 5 6 7 #pragma mapbox: define highp vec4 color main () { # pragma mapbox : initialize highp vec4 color ... gl_FragColor = color ; } This program defines a variable within main called color , initialize the value of color , then sets gl_FragColor to the value of color . Pragmas take the following form. 1 #pragma mapbox: (define|initialize) (lowp|mediump|highp) (float|vec2|vec3|vec4) {name} When using pragmas, the following requirements apply. all pragma-defined variables must have both define and initialize pragmas define pragmas must be in file scope initialize pragmas must be in function scope all pragma-defined variables defined and initialized in the fragment shader must also be defined and initialized in the vertex shader because attribute s are not accessible from the fragment shader","title":"Pragmas"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/shaders/#prelude","text":"The _prelude.fragment.glsl and _prelude.vertex.glsl files are automatically included in all shaders by the compiler.","title":"Prelude"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/","text":"Mapbox GL style specification & utilities This directory contains code and reference files that define the Mapbox GL style specification and provides some utilities for working with Mapbox styles. npm package The Mapbox GL style specification and utilities are published as a seperate npm package so that they can be installed without the bulk of GL JS. 1 npm install @mapbox/mapbox-gl-style-spec CLI Tools If you install this package globally, you will have access to several CLI tools. 1 npm install @mapbox/mapbox-gl-style-spec --global gl-style-composite 1 $ gl-style-composite style.json Will take a non-composited style and produce a composite style . gl-style-migrate This repo contains scripts for migrating GL styles of any version to the latest version (currently v8). Migrate a style like this: 1 $ gl-style-migrate bright-v7.json > bright-v8.json To migrate a file in place, you can use the sponge utility from the moreutils package: 1 2 $ brew install moreutils $ gl-style-migrate bright.json | sponge bright.json gl-style-format 1 $ gl-style-format style.json Will format the given style JSON to use standard indentation and sorted object keys. gl-style-validate 1 $ gl-style-validate style.json Will validate the given style JSON and print errors to stdout. Provide a --json flag to get JSON output. To validate that a style can be uploaded to the Mapbox Styles API, use the --mapbox-api-supported flag.","title":"Mapbox GL style specification & utilities"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/#mapbox-gl-style-specification-utilities","text":"This directory contains code and reference files that define the Mapbox GL style specification and provides some utilities for working with Mapbox styles.","title":"Mapbox GL style specification &amp; utilities"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/#npm-package","text":"The Mapbox GL style specification and utilities are published as a seperate npm package so that they can be installed without the bulk of GL JS. 1 npm install @mapbox/mapbox-gl-style-spec","title":"npm package"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/#cli-tools","text":"If you install this package globally, you will have access to several CLI tools. 1 npm install @mapbox/mapbox-gl-style-spec --global","title":"CLI Tools"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/#gl-style-composite","text":"1 $ gl-style-composite style.json Will take a non-composited style and produce a composite style .","title":"gl-style-composite"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/#gl-style-migrate","text":"This repo contains scripts for migrating GL styles of any version to the latest version (currently v8). Migrate a style like this: 1 $ gl-style-migrate bright-v7.json > bright-v8.json To migrate a file in place, you can use the sponge utility from the moreutils package: 1 2 $ brew install moreutils $ gl-style-migrate bright.json | sponge bright.json","title":"gl-style-migrate"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/#gl-style-format","text":"1 $ gl-style-format style.json Will format the given style JSON to use standard indentation and sorted object keys.","title":"gl-style-format"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/#gl-style-validate","text":"1 $ gl-style-validate style.json Will validate the given style JSON and print errors to stdout. Provide a --json flag to get JSON output. To validate that a style can be uploaded to the Mapbox Styles API, use the --mapbox-api-supported flag.","title":"gl-style-validate"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/","text":"13.13.0 \u2728 Features and improvements Add within expression for testing whether an evaluated feature lies within a given GeoJSON object ( #9352 ). For example: \"icon-opacity\": [\"case\", [\"==\", [\"within\", \"some-polygon\"], true], 1, [\"==\", [\"within\", \"some-polygon\"], false], 0] Improve scaling of patterns used in line-pattern on all device resolutions and pixel ratios ( #9266 ) \ud83d\udc1b Bug fixes Allow needle argument to in expression to be false ( #9295 ) Fix a bug where icon-image expression that evaluates to an empty string ( '' ) produced a warning ( #9380 ) Prevent exception resulting from line-dash-array of empty length ( #9385 ) 13.12.0 Update image expression SDK support table ( #9228 ) Fix promoteId for line layers ( #9210 , #9212 ) 13.11.0 \u2728 Features and improvements Add promoteId option to use a feature property as ID for feature state ( #8987 ) Update symbol-avoid-edges documentation regarding global collision detection ( #9157 ) Remove reference to in function which has been replaced by the in expression ( #9102 ) \ud83d\udc1b Bug fixes Fix bug where symbol-sort-key was not used for collisions that crossed tile boundaries ( #9054 ) 13.10.2 \ud83d\udc1b Bug fixes Fix style validation error messages not being displayed ( #9073 ) 13.10.0 \u2728 Features and improvements Add ability to insert images into text labels using an image expression within a format expression: \"text-field\": [\"format\", \"Some text\", [\"image\", \"my-image\"], \"some more text\"] ( #8904 ) Add in expression. It can check if a value is in an array ( [\"in\", value, array] ) or a substring is in a string ( [\"in\", substring, string] ) ( #8876 ) Add support for stretchable images (aka nine-part or nine-patch images). Stretchable images can be used with icon-text-fit to draw resized images with unstretched corners and borders. ( #8997 ) Add an es modules build of for mapbox-gl-style-spec in dist/ ( #8247 ) (h/t ahocevar ) 13.9.1 \u2728 Improvement Rename Image type to ResolvedImage , to better represent the result of an image expression evaluation. ( #8901 ) 13.9.0 Add image expression operator to determine image availability ( #8684 ) Add a style-spec function to validate that styles are compatible with the Mapbox API ( #8663 ) 13.8.0 Introduce text-writing-mode symbol layer property to allow placing point labels vertically. #8399 Allow text-color to be used in formatted expressions to be able to draw different parts of a label in different colors. #8068 Improve conversion of legacy filters with duplicate values. #8542 13.7.2 \ud83d\udc1b Bug fixes Fix SDK support spec section for variable label placement ( #8384 ) (h/t @pozdnyakov ) \u2728 Features and improvements Add SDK support spec section for text-radial-offset ( #8401 ) Add *-sort-key layout property for circle, fill, line ( #8467 ) Expose convertFilter API in the style specification ( #8493 ) 13.7.1 \ud83d\udc1b Bug fixes Fix format expression options validation ( #8339 ) Fix SDK support information for style properties added in v13.7.0: ( #8384 ) Add missing SDK support section for text-radial-offset property Assign SDK versions for text-variable-anchor and text-justify: auto 13.7.0 \u2728 Features and improvements Add text-radial-offset style property ( #7596 ) Add text-variable-anchor style property ( #7596 ) Add auto value to text-justify style property ( #7596 ) 13.6.0 \u2728 Features and improvements Add clusterProperties option for aggregated cluster properties ( #2412 , fixed by #7584 ) Add number-format expression ( #7626 ) Add symbol-sort-key style property ( #7678 ) 13.5.0 Features and improvements Flattens all expressions in converted filters ( #7679 ) Compatibility tables are updated ( #7574 ) 13.4.0 \u2728 Features and improvements Tighten style validation Disallow expressions as stop values ( #7396 ) Disallow feature-state expressions in filters ( #7366 ) 13.3.0 \ud83d\udc1b Bug fixes Expressions Fix let expression stripping expected type during parsing ( #7300 , fixed by #7301 ) Fix superfluous wrapping of literals in literal expression ( #7336 , fixed by #7337 ) Allow calling to-color on values that are already of type Color ( #7260 ) Fix to-array for empty arrays (( #7261 )) Fix identity functions for text-field when using formatted text ( #7351 ) Fix coercion of null to 0 in to-number expression ( #7083 , fixed by #7274 ) \u2728 Features and improvements Add fill-extrusion-vertical-gradient property for controlling shading of fill extrusions ( #5768 , fixed by #6841 ) 13.2.0 \ud83d\udc1b Bug fixes Update the style-spec's old gl-style-migrate script to include conversion of legacy functions and filters to their expression equivalents ( #6927 , fixed by #7095 ) \u2728 Features and improvements Add symbol-z-order symbol layout property to style spec ( #7219 ) Implement data-driven styling support for *-pattern properties ( #6289 ) 13.1.1 \ud83d\udc1b Bug fixes Fix broken module import in mapboxgl-style-spec (v13.0.1) ( #6984 , fixed by #6997 ) \u2728 Features and improvements Improve formatting for style output ( #7029 ) 13.1.0 \u2728 Features and improvements Add raster-resampling raster paint property ( #6411 ) (h/t andrewharvey ) Add symbol-placement: line-center ( #6821 ) 13.0.1 \u26a0\ufe0f Breaking changes Align implicit type behavior of match expressions with with case/== ( #6684 ) Update spec so that documentation can automatically capture which functions and expressions can be used with which properties ( #6521 ) \u2728 Features and improvements Add feature-state #6263 Add support for GeoJSON attribution ( #6364 ) (h/t andrewharvey ) Upgrade to Flow 0.69 ( #6594 ) \ud83d\udc1b Bug fixes Use named exports for style-spec entrypoint module ( #6601 13.0.0 Malformed package published to NPM. 12.0.0 \u26a0\ufe0f Breaking changes The \"to-string\" expression operator now converts null to an empty string rather than to \"null\" . #6534 \u2728 Features and improvements \ud83c\udf08 Add line-gradient property #6303 Add collator expression for controlling case and diacritic sensitivity in string comparisons #6270 Add is-supported-script expression for determining if a script is supported. #6260 Add collator expression for controlling case and diacritic sensitivity in string comparisons #6270 Add abs , round , floor , and ceil expression operators #6496 Add support for Mapzen Terrarium tiles in raster-dem sources #6110 \ud83d\udc1b Bug fixes Fix Rollup build 6575 11.1.1 \ud83d\udc1b Bug fixes Update SDK support information for text-font , and heatmap-color , and hillshade layer properties. 11.1.0 \u2728 Features and improvements Avoid use of new Function for filters by converting old-style filters to expressions #5665 . 11.0.0 \u26a0\ufe0f Breaking changes Remove constants validating code #5885 \"colorSpace\": \"hcl\" now uses shortest-path interpolation for hue #5811 \u2728 Features and improvements Introduce client-side hillshading with raster-dem source type and hillshade layer type #5286 Add Color#toString and expose Color publicly #5866 Improve typing for == and != expressions #5840 Made coalesce expressions more useful #5755 Enable implicit type assertions for array types #5738 \ud83d\udc1b Bug fixes Fix standalone browser build #5736 , #5906 Handle NaN as input to step and interpolate expressions #5757 Fix style diffing for changes to GeoJSON sources #5745 Mark layer \"type\" property as required #5849 10.1.0 Remove support for validating and migrating v6 styles #5604 Remove support for validating v7 styles #5604 Remove spaces after commas in to-string representation of colors #5480 Fix bugs preventing mapbox-gl-style-spec package on NPM from being used externally #5502 Fix flow-typed interface generator #5478 Export function #5584 Export StylePropertySpecification type #5593 Split the source_tile entry in the JSON schema into source_vector and source_raster #5604 Validation Changes Require that heatmap-color use expressions instead of stop functions #5624 Remove support for including {tokens} in expressions for text-field and icon-image #5599 Disallow interpolation in expressions for line-dasharray #5519 Validate that zoom expressions only appear at the top level of an expression #5609 Validate that step and interpolate expressions don't have any duplicate stops #5605 Split curve expression into step and interpolate expressions #5542 Validate expression values for enum-typed properties #5589 Improve validation to catch uses of deprecated function syntax #5667 10.0.1 Fix bug preventing @mapbox/mapbox-gl-style-spec package from being usable outside of mapbox-gl-js (#5502) 10.0.0 Add expression and heatmap layer support. See Mapbox GL JS v0.40.1 changelog entry for details. 9.0.1 Remove fast-stable-stringify dependency (#5152) 9.0.0 Fix validation error on categorical zoom-and-property functions (#4220) Relax requirement that styles using \"icon-image\" must have a \"sprite\" Prevent infinite loop in binarySearchForIndex when duplicate stops are present. (#4503) Ensure generated composite function stops are in the correct order (#4509) Update SDK support matrices to be current as of GL JS v0.35.1, iOS SDK v3.5.0, Android SDK 5.0.0 Remove support for implicitly-categorical functions BREAKING CHANGE: the API for the function module has changed. The interpolated and piecewise-constant exports were replaced with a single unnamed export, a function which accepts an object conforming to the style spec \"function\" definition, and an object defining a style spec property. It handles color parsing and validation of feature values internally. Functions now support a \"default\" property. parseColor was promoted from gl-js. 8.11.0 Merge feature-filter repository into this repository #639 8.10.0 v8.0.0 styles are fully compatible with v8.10.0. Style Specification Changes Added colorSpace option to functions Added fill-extrusion layer type Add top-level light property Remove increase maximum maxzoom to 24 Deprecate paint classes :warning: Increase strictness of function validation Reference JSON & API Changes Added deref utility Added group_by_layout utility Merge mapbox-gl-function repository into this repository 8.9.0 v8.0.0 styles are fully compatible with v8.9.0. Added identity functions Added auto value which represents the calculated default value 8.8.1 v8.0.0 styles are fully compatible with v8.8.1. Fixed style validation for layers with invalid types 8.8.0 v8.0.0 styles are fully compatible with v8.8.0. Clarified documentation around fill-opacity. Update function documentation and validation for property functions. Add text-pitch-alignment property. Add icon-text-fit, icon-text-fit-padding properties. 8.7.0 v8.0.0 styles are fully compatible with v8.7.0. Add support for has / !has operators. 8.6.0 v8.0.0 styles are fully compatible with v8.6.0. Added support for zoom and feature driven functions. 8.4.2 v8.0.0 styles are fully compatible with v8.4.2. Refactored style validator to expose more granular validation methods 8.4.1 v8.0.0 styles are fully compatible with v8.4.1. Revert ramp validation checks that broke some styles. 8.4.0 v8.0.0 styles are fully compatible with v8.4.0. Added cluster , clusterRadius , clusterMaxZoom GeoJSON source properties. 8.3.0 v8.0.0 styles are fully compatible with v8.3.0. Added line-offset style property 8.2.1 v8.0.0 styles are fully compatible with v8.2.1. Enforce that all layers that use a vector source specify a \"source-layer\" 8.2.0 v8.0.0 styles are fully compatible with v8.2.0. Add inline example property. Enforce that all style properties must have documentation in doc property. Create minified style specs with doc and example properties removed. validate now validates against minified style spec. format now accepts space option to use with JSON.stringify . Remove gl-style-spritify . Mapbox GL sprites are now created automatically by the Mapbox style APIs, or for hand-crafted styles, by spritezero-cli . 8.1.0 v8.0.0 styles are fully compatible with v8.1.0. [BREAKING] Simplified layout/paint layer property types to more closely align with v7 types. Fixed migration script compatibility with newer versions of Node.js and io.js Removed constants from schema, they were deprecated in v8 Added style diff utility to generate semantic deltas between two stylesheets Added visibility property to circle layer type Added pitch property to stylesheet 8.0.0 Introduction of Mapbox GL style specification v8. To migrate a v7 style to v8, use the gl-style-migrate script as described in the README. [BREAKING] The value of the text-font property is now an array of strings, rather than a single comma separated string. [BREAKING] Renamed symbol-min-distance to symbol-spacing . [BREAKING] Renamed background-image to background-pattern . [BREAKING] Renamed line-image to line-pattern . [BREAKING] Renamed fill-image to fill-pattern . [BREAKING] Renamed the url property of the video source type to urls . [BREAKING] Coordinates in video sources are now specified in [lon, lat] order. [BREAKING] Removed text-max-size and icon-max-size properties; these are now calculated automatically. [BREAKING] text-size and icon-size are now layout properties instead of paint properties. [BREAKING] Constants are no longer supported. If you are editing styles by hand and want to use constants, you can use a preprocessing step with a tool like ScreeSS . [BREAKING] The format for mapbox:// glyphs URLs has changed; you should now use mapbox://fonts/mapbox/{fontstack}/{range}.pbf . [BREAKING] Reversed the priority of layers for calculating label placement: labels for layers that appear later in the style now have priority over earlier layers. Added a new image source type. Added a new circle layer type. Default map center location can now be set in the style. Added mapbox:// sprite URLs mapbox://sprite/{user | \"mapbox\"}/{id} 7.5.0 Added gl-style-composite script, for auto-compositing sources in a style. 7.4.1 Use JSON.stringify for formatting instead of js-beautify 7.0.0 Introduction of Mapbox GL style specification v7. [BREAKING] Improve dashed lines (#234) [BREAKING] Remove prerendered layers (#232) Explicit visibility property (#212) Functions for all properties (#237) 6.0.0 (Style spec v6) Introduction of Mapbox GL style specification v6. [BREAKING] New filter syntax (#178) [BREAKING] Line gap property (#131) [BREAKING] Remove dashes from min/max-zoom (#175) [BREAKING] New layout/paint terminology (#166) [BREAKING] Single text positioning property (#197) Added requirements (#200) Added minimum, maximum, and period values (#198) 0.0.5 (in progress) [BREAKING] Switch to suffix for transition properties ( transition-* -> *-transition ). Added support for remote, non-Mapbox TileJSON sources. [BREAKING] Source minZoom and maxZoom renamed to minzoom and `maxzoom to match TileJSON. Added support for mapbox:// glyph URLs. [BREAKING] Renamed raster-fade to raster-fade-duration . Added background-opacity property. Added \"tokens\" property to string values that can autocomplete fields from layers Added \"units\" property to describe value types 0.0.4 (Aug 8 2014) Initial public release","title":"CHANGELOG"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#13130","text":"","title":"13.13.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements","text":"Add within expression for testing whether an evaluated feature lies within a given GeoJSON object ( #9352 ). For example: \"icon-opacity\": [\"case\", [\"==\", [\"within\", \"some-polygon\"], true], 1, [\"==\", [\"within\", \"some-polygon\"], false], 0] Improve scaling of patterns used in line-pattern on all device resolutions and pixel ratios ( #9266 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes","text":"Allow needle argument to in expression to be false ( #9295 ) Fix a bug where icon-image expression that evaluates to an empty string ( '' ) produced a warning ( #9380 ) Prevent exception resulting from line-dash-array of empty length ( #9385 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#13120","text":"Update image expression SDK support table ( #9228 ) Fix promoteId for line layers ( #9210 , #9212 )","title":"13.12.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#13110","text":"","title":"13.11.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_1","text":"Add promoteId option to use a feature property as ID for feature state ( #8987 ) Update symbol-avoid-edges documentation regarding global collision detection ( #9157 ) Remove reference to in function which has been replaced by the in expression ( #9102 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_1","text":"Fix bug where symbol-sort-key was not used for collisions that crossed tile boundaries ( #9054 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#13102","text":"","title":"13.10.2"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_2","text":"Fix style validation error messages not being displayed ( #9073 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#13100","text":"","title":"13.10.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_2","text":"Add ability to insert images into text labels using an image expression within a format expression: \"text-field\": [\"format\", \"Some text\", [\"image\", \"my-image\"], \"some more text\"] ( #8904 ) Add in expression. It can check if a value is in an array ( [\"in\", value, array] ) or a substring is in a string ( [\"in\", substring, string] ) ( #8876 ) Add support for stretchable images (aka nine-part or nine-patch images). Stretchable images can be used with icon-text-fit to draw resized images with unstretched corners and borders. ( #8997 ) Add an es modules build of for mapbox-gl-style-spec in dist/ ( #8247 ) (h/t ahocevar )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1391","text":"","title":"13.9.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#improvement","text":"Rename Image type to ResolvedImage , to better represent the result of an image expression evaluation. ( #8901 )","title":"\u2728 Improvement"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1390","text":"Add image expression operator to determine image availability ( #8684 ) Add a style-spec function to validate that styles are compatible with the Mapbox API ( #8663 )","title":"13.9.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1380","text":"Introduce text-writing-mode symbol layer property to allow placing point labels vertically. #8399 Allow text-color to be used in formatted expressions to be able to draw different parts of a label in different colors. #8068 Improve conversion of legacy filters with duplicate values. #8542","title":"13.8.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1372","text":"","title":"13.7.2"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_3","text":"Fix SDK support spec section for variable label placement ( #8384 ) (h/t @pozdnyakov )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_3","text":"Add SDK support spec section for text-radial-offset ( #8401 ) Add *-sort-key layout property for circle, fill, line ( #8467 ) Expose convertFilter API in the style specification ( #8493 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1371","text":"","title":"13.7.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_4","text":"Fix format expression options validation ( #8339 ) Fix SDK support information for style properties added in v13.7.0: ( #8384 ) Add missing SDK support section for text-radial-offset property Assign SDK versions for text-variable-anchor and text-justify: auto","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1370","text":"","title":"13.7.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_4","text":"Add text-radial-offset style property ( #7596 ) Add text-variable-anchor style property ( #7596 ) Add auto value to text-justify style property ( #7596 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1360","text":"","title":"13.6.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_5","text":"Add clusterProperties option for aggregated cluster properties ( #2412 , fixed by #7584 ) Add number-format expression ( #7626 ) Add symbol-sort-key style property ( #7678 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1350","text":"","title":"13.5.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_6","text":"Flattens all expressions in converted filters ( #7679 ) Compatibility tables are updated ( #7574 )","title":"Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1340","text":"","title":"13.4.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_7","text":"Tighten style validation Disallow expressions as stop values ( #7396 ) Disallow feature-state expressions in filters ( #7366 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1330","text":"","title":"13.3.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_5","text":"Expressions Fix let expression stripping expected type during parsing ( #7300 , fixed by #7301 ) Fix superfluous wrapping of literals in literal expression ( #7336 , fixed by #7337 ) Allow calling to-color on values that are already of type Color ( #7260 ) Fix to-array for empty arrays (( #7261 )) Fix identity functions for text-field when using formatted text ( #7351 ) Fix coercion of null to 0 in to-number expression ( #7083 , fixed by #7274 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_8","text":"Add fill-extrusion-vertical-gradient property for controlling shading of fill extrusions ( #5768 , fixed by #6841 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1320","text":"","title":"13.2.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_6","text":"Update the style-spec's old gl-style-migrate script to include conversion of legacy functions and filters to their expression equivalents ( #6927 , fixed by #7095 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_9","text":"Add symbol-z-order symbol layout property to style spec ( #7219 ) Implement data-driven styling support for *-pattern properties ( #6289 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1311","text":"","title":"13.1.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_7","text":"Fix broken module import in mapboxgl-style-spec (v13.0.1) ( #6984 , fixed by #6997 )","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_10","text":"Improve formatting for style output ( #7029 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1310","text":"","title":"13.1.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_11","text":"Add raster-resampling raster paint property ( #6411 ) (h/t andrewharvey ) Add symbol-placement: line-center ( #6821 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1301","text":"","title":"13.0.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#breaking-changes","text":"Align implicit type behavior of match expressions with with case/== ( #6684 ) Update spec so that documentation can automatically capture which functions and expressions can be used with which properties ( #6521 )","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_12","text":"Add feature-state #6263 Add support for GeoJSON attribution ( #6364 ) (h/t andrewharvey ) Upgrade to Flow 0.69 ( #6594 )","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_8","text":"Use named exports for style-spec entrypoint module ( #6601","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1300","text":"Malformed package published to NPM.","title":"13.0.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1200","text":"","title":"12.0.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#breaking-changes_1","text":"The \"to-string\" expression operator now converts null to an empty string rather than to \"null\" . #6534","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_13","text":"\ud83c\udf08 Add line-gradient property #6303 Add collator expression for controlling case and diacritic sensitivity in string comparisons #6270 Add is-supported-script expression for determining if a script is supported. #6260 Add collator expression for controlling case and diacritic sensitivity in string comparisons #6270 Add abs , round , floor , and ceil expression operators #6496 Add support for Mapzen Terrarium tiles in raster-dem sources #6110","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_9","text":"Fix Rollup build 6575","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1111","text":"","title":"11.1.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_10","text":"Update SDK support information for text-font , and heatmap-color , and hillshade layer properties.","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1110","text":"","title":"11.1.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_14","text":"Avoid use of new Function for filters by converting old-style filters to expressions #5665 .","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1100","text":"","title":"11.0.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#breaking-changes_2","text":"Remove constants validating code #5885 \"colorSpace\": \"hcl\" now uses shortest-path interpolation for hue #5811","title":"\u26a0\ufe0f Breaking changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#features-and-improvements_15","text":"Introduce client-side hillshading with raster-dem source type and hillshade layer type #5286 Add Color#toString and expose Color publicly #5866 Improve typing for == and != expressions #5840 Made coalesce expressions more useful #5755 Enable implicit type assertions for array types #5738","title":"\u2728 Features and improvements"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#bug-fixes_11","text":"Fix standalone browser build #5736 , #5906 Handle NaN as input to step and interpolate expressions #5757 Fix style diffing for changes to GeoJSON sources #5745 Mark layer \"type\" property as required #5849","title":"\ud83d\udc1b Bug fixes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1010","text":"Remove support for validating and migrating v6 styles #5604 Remove support for validating v7 styles #5604 Remove spaces after commas in to-string representation of colors #5480 Fix bugs preventing mapbox-gl-style-spec package on NPM from being used externally #5502 Fix flow-typed interface generator #5478 Export function #5584 Export StylePropertySpecification type #5593 Split the source_tile entry in the JSON schema into source_vector and source_raster #5604","title":"10.1.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#validation-changes","text":"Require that heatmap-color use expressions instead of stop functions #5624 Remove support for including {tokens} in expressions for text-field and icon-image #5599 Disallow interpolation in expressions for line-dasharray #5519 Validate that zoom expressions only appear at the top level of an expression #5609 Validate that step and interpolate expressions don't have any duplicate stops #5605 Split curve expression into step and interpolate expressions #5542 Validate expression values for enum-typed properties #5589 Improve validation to catch uses of deprecated function syntax #5667","title":"Validation Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1001","text":"Fix bug preventing @mapbox/mapbox-gl-style-spec package from being usable outside of mapbox-gl-js (#5502)","title":"10.0.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#1000","text":"Add expression and heatmap layer support. See Mapbox GL JS v0.40.1 changelog entry for details.","title":"10.0.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#901","text":"Remove fast-stable-stringify dependency (#5152)","title":"9.0.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#900","text":"Fix validation error on categorical zoom-and-property functions (#4220) Relax requirement that styles using \"icon-image\" must have a \"sprite\" Prevent infinite loop in binarySearchForIndex when duplicate stops are present. (#4503) Ensure generated composite function stops are in the correct order (#4509) Update SDK support matrices to be current as of GL JS v0.35.1, iOS SDK v3.5.0, Android SDK 5.0.0 Remove support for implicitly-categorical functions BREAKING CHANGE: the API for the function module has changed. The interpolated and piecewise-constant exports were replaced with a single unnamed export, a function which accepts an object conforming to the style spec \"function\" definition, and an object defining a style spec property. It handles color parsing and validation of feature values internally. Functions now support a \"default\" property. parseColor was promoted from gl-js.","title":"9.0.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#8110","text":"Merge feature-filter repository into this repository #639","title":"8.11.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#8100","text":"v8.0.0 styles are fully compatible with v8.10.0.","title":"8.10.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#style-specification-changes","text":"Added colorSpace option to functions Added fill-extrusion layer type Add top-level light property Remove increase maximum maxzoom to 24 Deprecate paint classes :warning: Increase strictness of function validation","title":"Style Specification Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#reference-json-api-changes","text":"Added deref utility Added group_by_layout utility Merge mapbox-gl-function repository into this repository","title":"Reference JSON &amp; API Changes"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#890","text":"v8.0.0 styles are fully compatible with v8.9.0. Added identity functions Added auto value which represents the calculated default value","title":"8.9.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#881","text":"v8.0.0 styles are fully compatible with v8.8.1. Fixed style validation for layers with invalid types","title":"8.8.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#880","text":"v8.0.0 styles are fully compatible with v8.8.0. Clarified documentation around fill-opacity. Update function documentation and validation for property functions. Add text-pitch-alignment property. Add icon-text-fit, icon-text-fit-padding properties.","title":"8.8.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#870","text":"v8.0.0 styles are fully compatible with v8.7.0. Add support for has / !has operators.","title":"8.7.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#860","text":"v8.0.0 styles are fully compatible with v8.6.0. Added support for zoom and feature driven functions.","title":"8.6.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#842","text":"v8.0.0 styles are fully compatible with v8.4.2. Refactored style validator to expose more granular validation methods","title":"8.4.2"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#841","text":"v8.0.0 styles are fully compatible with v8.4.1. Revert ramp validation checks that broke some styles.","title":"8.4.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#840","text":"v8.0.0 styles are fully compatible with v8.4.0. Added cluster , clusterRadius , clusterMaxZoom GeoJSON source properties.","title":"8.4.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#830","text":"v8.0.0 styles are fully compatible with v8.3.0. Added line-offset style property","title":"8.3.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#821","text":"v8.0.0 styles are fully compatible with v8.2.1. Enforce that all layers that use a vector source specify a \"source-layer\"","title":"8.2.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#820","text":"v8.0.0 styles are fully compatible with v8.2.0. Add inline example property. Enforce that all style properties must have documentation in doc property. Create minified style specs with doc and example properties removed. validate now validates against minified style spec. format now accepts space option to use with JSON.stringify . Remove gl-style-spritify . Mapbox GL sprites are now created automatically by the Mapbox style APIs, or for hand-crafted styles, by spritezero-cli .","title":"8.2.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#810","text":"v8.0.0 styles are fully compatible with v8.1.0. [BREAKING] Simplified layout/paint layer property types to more closely align with v7 types. Fixed migration script compatibility with newer versions of Node.js and io.js Removed constants from schema, they were deprecated in v8 Added style diff utility to generate semantic deltas between two stylesheets Added visibility property to circle layer type Added pitch property to stylesheet","title":"8.1.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#800","text":"Introduction of Mapbox GL style specification v8. To migrate a v7 style to v8, use the gl-style-migrate script as described in the README. [BREAKING] The value of the text-font property is now an array of strings, rather than a single comma separated string. [BREAKING] Renamed symbol-min-distance to symbol-spacing . [BREAKING] Renamed background-image to background-pattern . [BREAKING] Renamed line-image to line-pattern . [BREAKING] Renamed fill-image to fill-pattern . [BREAKING] Renamed the url property of the video source type to urls . [BREAKING] Coordinates in video sources are now specified in [lon, lat] order. [BREAKING] Removed text-max-size and icon-max-size properties; these are now calculated automatically. [BREAKING] text-size and icon-size are now layout properties instead of paint properties. [BREAKING] Constants are no longer supported. If you are editing styles by hand and want to use constants, you can use a preprocessing step with a tool like ScreeSS . [BREAKING] The format for mapbox:// glyphs URLs has changed; you should now use mapbox://fonts/mapbox/{fontstack}/{range}.pbf . [BREAKING] Reversed the priority of layers for calculating label placement: labels for layers that appear later in the style now have priority over earlier layers. Added a new image source type. Added a new circle layer type. Default map center location can now be set in the style. Added mapbox:// sprite URLs mapbox://sprite/{user | \"mapbox\"}/{id}","title":"8.0.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#750","text":"Added gl-style-composite script, for auto-compositing sources in a style.","title":"7.5.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#741","text":"Use JSON.stringify for formatting instead of js-beautify","title":"7.4.1"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#700","text":"Introduction of Mapbox GL style specification v7. [BREAKING] Improve dashed lines (#234) [BREAKING] Remove prerendered layers (#232) Explicit visibility property (#212) Functions for all properties (#237)","title":"7.0.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#600-style-spec-v6","text":"Introduction of Mapbox GL style specification v6. [BREAKING] New filter syntax (#178) [BREAKING] Line gap property (#131) [BREAKING] Remove dashes from min/max-zoom (#175) [BREAKING] New layout/paint terminology (#166) [BREAKING] Single text positioning property (#197) Added requirements (#200) Added minimum, maximum, and period values (#198)","title":"6.0.0 (Style spec v6)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#005-in-progress","text":"[BREAKING] Switch to suffix for transition properties ( transition-* -> *-transition ). Added support for remote, non-Mapbox TileJSON sources. [BREAKING] Source minZoom and maxZoom renamed to minzoom and `maxzoom to match TileJSON. Added support for mapbox:// glyph URLs. [BREAKING] Renamed raster-fade to raster-fade-duration . Added background-opacity property. Added \"tokens\" property to string values that can autocomplete fields from layers Added \"units\" property to describe value types","title":"0.0.5 (in progress)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/CHANGELOG/#004-aug-8-2014","text":"Initial public release","title":"0.0.4 (Aug 8 2014)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/feature_filter/","text":"Filter Filter expressions are used to target specific data in a layer. This library implements the semantics specified by the Mapbox GL JS spec . API featureFilter(filter) Given a filter expressed as nested arrays, return a new function that evaluates whether a given feature (with a .properties or .tags property) passes its test. Parameters parameter type description filter Array mapbox gl filter Returns Function , filter-evaluating function Usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 var ff = require ( '@mapbox/mapbox-gl-style-spec' ). featureFilter ; // will match a feature with class of street_limited, // AND an admin_level less than or equal to 3, // that's NOT a polygon. var filter = [ \"all\" , [ \"==\" , \"class\" , \"street_limited\" ], [ \"<=\" , \"admin_level\" , 3 ], [ \"!=\" , \"$type\" , \"Polygon\" ] ] // will match a feature that has a class of // wetland OR wetland_noveg. // [\"in\", \"class\", \"wetland\", \"wetland_noveg\"] // testFilter will be a function that returns a boolean var testFilter = ff ( filter ); // Layer feature that you're testing. Must have type // and properties keys. var feature = { type : 2 , properties : { class : \"street_limited\" , admin_level : 1 } }; // will return a boolean based on whether the feature matched the filter return testFilter ({ zoom : 0 }, feature );","title":"Index"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/feature_filter/#filter","text":"Filter expressions are used to target specific data in a layer. This library implements the semantics specified by the Mapbox GL JS spec .","title":"Filter"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/feature_filter/#api","text":"featureFilter(filter) Given a filter expressed as nested arrays, return a new function that evaluates whether a given feature (with a .properties or .tags property) passes its test.","title":"API"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/feature_filter/#parameters","text":"parameter type description filter Array mapbox gl filter Returns Function , filter-evaluating function","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/feature_filter/#usage","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 var ff = require ( '@mapbox/mapbox-gl-style-spec' ). featureFilter ; // will match a feature with class of street_limited, // AND an admin_level less than or equal to 3, // that's NOT a polygon. var filter = [ \"all\" , [ \"==\" , \"class\" , \"street_limited\" ], [ \"<=\" , \"admin_level\" , 3 ], [ \"!=\" , \"$type\" , \"Polygon\" ] ] // will match a feature that has a class of // wetland OR wetland_noveg. // [\"in\", \"class\", \"wetland\", \"wetland_noveg\"] // testFilter will be a function that returns a boolean var testFilter = ff ( filter ); // Layer feature that you're testing. Must have type // and properties keys. var feature = { type : 2 , properties : { class : \"street_limited\" , admin_level : 1 } }; // will return a boolean based on whether the feature matched the filter return testFilter ({ zoom : 0 }, feature );","title":"Usage"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/jsonlint-lines-primitives/","text":"JSON Lint A fork of the lines-primitive branch of tmcw/jsonlint , which is a fork of zaach/jsonlint that adds line number annotations to the parsed JSON. This fork is used by Mapbox GL JS, specifically for providing helpful error messages when validating Mapbox GL style JSON documents.","title":"Index"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/jsonlint-lines-primitives/#json-lint","text":"A fork of the lines-primitive branch of tmcw/jsonlint , which is a fork of zaach/jsonlint that adds line number annotations to the parsed JSON. This fork is used by Mapbox GL JS, specifically for providing helpful error messages when validating Mapbox GL style JSON documents.","title":"JSON Lint"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/","text":"point-geometry a point geometry with transforms Point(x, y) A standalone point geometry with useful accessor, comparison, and modification methods. Parameters parameter type description x Number the x-coordinate. this could be longitude or screen pixels, or any other sort of unit. y Number the y-coordinate. this could be latitude or screen pixels, or any other sort of unit. Example 1 var point = new Point ( - 77 , 38 ); clone Clone this point, returning a new point that can be modified without affecting the old one. Returns Point , the clone add(p) Add this point's x & y coordinates to another point, yielding a new point. Parameters parameter type description p Point the other point Returns Point , output point sub(p) Subtract this point's x & y coordinates to from point, yielding a new point. Parameters parameter type description p Point the other point Returns Point , output point multByPoint(p) Multiply this point's x & y coordinates by point, yielding a new point. Parameters parameter type description p Point the other point Returns Point , output point divByPoint(p) Divide this point's x & y coordinates by point, yielding a new point. Parameters parameter type description p Point the other point Returns Point , output point mult(k) Multiply this point's x & y coordinates by a factor, yielding a new point. Parameters parameter type description k Point factor Returns Point , output point div(k) Divide this point's x & y coordinates by a factor, yielding a new point. Parameters parameter type description k Point factor Returns Point , output point rotate(a) Rotate this point around the 0, 0 origin by an angle a, given in radians Parameters parameter type description a Number angle to rotate around, in radians Returns Point , output point rotateAround(a, p) Rotate this point around p point by an angle a, given in radians Parameters parameter type description a Number angle to rotate around, in radians p Point Point to rotate around Returns Point , output point matMult(m) Multiply this point by a 4x1 transformation matrix Parameters parameter type description m Array.\\<Number> transformation matrix Returns Point , output point unit Calculate this point but as a unit vector from 0, 0, meaning that the distance from the resulting point to the 0, 0 coordinate will be equal to 1 and the angle from the resulting point to the 0, 0 coordinate will be the same as before. Returns Point , unit vector point perp Compute a perpendicular point, where the new y coordinate is the old x coordinate and the new x coordinate is the old y coordinate multiplied by -1 Returns Point , perpendicular point round Return a version of this point with the x & y coordinates rounded to integers. Returns Point , rounded point mag Return the magitude of this point: this is the Euclidean distance from the 0, 0 coordinate to this point's x and y coordinates. Returns Number , magnitude equals(other) Judge whether this point is equal to another point, returning true or false. Parameters parameter type description other Point the other point Returns boolean , whether the points are equal dist(p) Calculate the distance from this point to another point Parameters parameter type description p Point the other point Returns Number , distance distSqr(p) Calculate the distance from this point to another point, without the square root step. Useful if you're comparing relative distances. Parameters parameter type description p Point the other point Returns Number , distance angle Get the angle from the 0, 0 coordinate to this point, in radians coordinates. Returns Number , angle angleTo(b) Get the angle from this point to another point, in radians Parameters parameter type description b Point the other point Returns Number , angle angleWith(b) Get the angle between this point and another point, in radians Parameters parameter type description b Point the other point Returns Number , angle angleWithSep(x, y) Find the angle of the two vectors, solving the formula for the cross product a x b = |a||b|sin(\u03b8) for \u03b8. Parameters parameter type description x Number the x-coordinate y Number the y-coordinate Returns Number , the angle in radians convert(a) Construct a point from an array if necessary, otherwise if the input is already a Point, or an unknown type, return it unchanged Parameters parameter type description a Array.\\<Number>\\,Point any kind of input value Example 1 2 3 4 // this var point = Point . convert ([ 0 , 1 ]); // is equivalent to var point = new Point ( 0 , 1 ); Returns Point , constructed point, or passed-through value. Installation Requires nodejs . 1 $ npm install point-geometry Tests 1 $ npm test","title":"point-geometry"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#point-geometry","text":"a point geometry with transforms","title":"point-geometry"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#pointx-y","text":"A standalone point geometry with useful accessor, comparison, and modification methods.","title":"Point(x, y)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters","text":"parameter type description x Number the x-coordinate. this could be longitude or screen pixels, or any other sort of unit. y Number the y-coordinate. this could be latitude or screen pixels, or any other sort of unit.","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#example","text":"1 var point = new Point ( - 77 , 38 );","title":"Example"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#clone","text":"Clone this point, returning a new point that can be modified without affecting the old one. Returns Point , the clone","title":"clone"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#addp","text":"Add this point's x & y coordinates to another point, yielding a new point.","title":"add(p)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_1","text":"parameter type description p Point the other point Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#subp","text":"Subtract this point's x & y coordinates to from point, yielding a new point.","title":"sub(p)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_2","text":"parameter type description p Point the other point Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#multbypointp","text":"Multiply this point's x & y coordinates by point, yielding a new point.","title":"multByPoint(p)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_3","text":"parameter type description p Point the other point Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#divbypointp","text":"Divide this point's x & y coordinates by point, yielding a new point.","title":"divByPoint(p)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_4","text":"parameter type description p Point the other point Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#multk","text":"Multiply this point's x & y coordinates by a factor, yielding a new point.","title":"mult(k)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_5","text":"parameter type description k Point factor Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#divk","text":"Divide this point's x & y coordinates by a factor, yielding a new point.","title":"div(k)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_6","text":"parameter type description k Point factor Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#rotatea","text":"Rotate this point around the 0, 0 origin by an angle a, given in radians","title":"rotate(a)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_7","text":"parameter type description a Number angle to rotate around, in radians Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#rotatearounda-p","text":"Rotate this point around p point by an angle a, given in radians","title":"rotateAround(a, p)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_8","text":"parameter type description a Number angle to rotate around, in radians p Point Point to rotate around Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#matmultm","text":"Multiply this point by a 4x1 transformation matrix","title":"matMult(m)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_9","text":"parameter type description m Array.\\<Number> transformation matrix Returns Point , output point","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#unit","text":"Calculate this point but as a unit vector from 0, 0, meaning that the distance from the resulting point to the 0, 0 coordinate will be equal to 1 and the angle from the resulting point to the 0, 0 coordinate will be the same as before. Returns Point , unit vector point","title":"unit"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#perp","text":"Compute a perpendicular point, where the new y coordinate is the old x coordinate and the new x coordinate is the old y coordinate multiplied by -1 Returns Point , perpendicular point","title":"perp"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#round","text":"Return a version of this point with the x & y coordinates rounded to integers. Returns Point , rounded point","title":"round"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#mag","text":"Return the magitude of this point: this is the Euclidean distance from the 0, 0 coordinate to this point's x and y coordinates. Returns Number , magnitude","title":"mag"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#equalsother","text":"Judge whether this point is equal to another point, returning true or false.","title":"equals(other)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_10","text":"parameter type description other Point the other point Returns boolean , whether the points are equal","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#distp","text":"Calculate the distance from this point to another point","title":"dist(p)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_11","text":"parameter type description p Point the other point Returns Number , distance","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#distsqrp","text":"Calculate the distance from this point to another point, without the square root step. Useful if you're comparing relative distances.","title":"distSqr(p)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_12","text":"parameter type description p Point the other point Returns Number , distance","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#angle","text":"Get the angle from the 0, 0 coordinate to this point, in radians coordinates. Returns Number , angle","title":"angle"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#angletob","text":"Get the angle from this point to another point, in radians","title":"angleTo(b)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_13","text":"parameter type description b Point the other point Returns Number , angle","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#anglewithb","text":"Get the angle between this point and another point, in radians","title":"angleWith(b)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_14","text":"parameter type description b Point the other point Returns Number , angle","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#anglewithsepx-y","text":"Find the angle of the two vectors, solving the formula for the cross product a x b = |a||b|sin(\u03b8) for \u03b8.","title":"angleWithSep(x, y)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_15","text":"parameter type description x Number the x-coordinate y Number the y-coordinate Returns Number , the angle in radians","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#converta","text":"Construct a point from an array if necessary, otherwise if the input is already a Point, or an unknown type, return it unchanged","title":"convert(a)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#parameters_16","text":"parameter type description a Array.\\<Number>\\,Point any kind of input value","title":"Parameters"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#example_1","text":"1 2 3 4 // this var point = Point . convert ([ 0 , 1 ]); // is equivalent to var point = new Point ( 0 , 1 ); Returns Point , constructed point, or passed-through value.","title":"Example"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#installation","text":"Requires nodejs . 1 $ npm install point-geometry","title":"Installation"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/#tests","text":"1 $ npm test","title":"Tests"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/HISTORY/","text":"0.1.0 Adds rotateAround and multByPoint and divByPoint methods.","title":"HISTORY"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/point-geometry/HISTORY/#010","text":"Adds rotateAround and multByPoint and divByPoint methods.","title":"0.1.0"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/","text":"unitbezier Unit bezier interpolation function: a port to JavaScript from Webkit: http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h api new UnitBezier(p1x, p1y, p2x, p2y) Initialize a new bezier curve given the points bezier.sampleCurveX(t) bezier.sampleCurveY(t) bezier.sampleCurveDerivativeX(t) bezier.solveCurveX(t) bezier.solve(x, epsilon)","title":"Index"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/#unitbezier","text":"Unit bezier interpolation function: a port to JavaScript from Webkit: http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h","title":"unitbezier"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/#api","text":"","title":"api"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/#new-unitbezierp1x-p1y-p2x-p2y","text":"Initialize a new bezier curve given the points","title":"new UnitBezier(p1x, p1y, p2x, p2y)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/#beziersamplecurvext","text":"","title":"bezier.sampleCurveX(t)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/#beziersamplecurveyt","text":"","title":"bezier.sampleCurveY(t)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/#beziersamplecurvederivativext","text":"","title":"bezier.sampleCurveDerivativeX(t)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/#beziersolvecurvext","text":"","title":"bezier.solveCurveX(t)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/%40mapbox/unitbezier/#beziersolvex-epsilon","text":"","title":"bezier.solve(x, epsilon)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/","text":"json-stringify-pretty-compact The output of JSON.stringify comes in two flavors: compact and pretty. The former is usually too compact to be read by humans, while the latter sometimes is too spacious. This module trades performance for a compromise between the two. The result is a pretty compact string, where \u201cpretty\u201d means both \u201ckind of\u201d and \u201cnice\u201d. 1 2 3 4 5 6 7 8 9 10 { \"bool\" : true , \"short array\" : [ 1 , 2 , 3 ], \"long array\" : [ { \"x\" : 1 , \"y\" : 2 }, { \"x\" : 2 , \"y\" : 1 }, { \"x\" : 1 , \"y\" : 1 }, { \"x\" : 2 , \"y\" : 2 } ] } While the \u201cpretty\u201d mode of JSON.stringify puts every item of arrays and objects on its own line, this module puts the whole array or object on a single line, unless the line becomes too long (the default maximum is 80 characters). Making arrays and objects multi-line is the only attempt made to enforce the maximum line length; if that doesn\u2019t help then so be it. Installation 1 npm install json-stringify-pretty-compact 1 const stringify = require ( \"json-stringify-pretty-compact\" ); stringify(obj, options = {}) It\u2019s like JSON.stringify(obj, options.replacer, options.indent) , except that objects and arrays are on one line if they fit (according to options.maxLength ). options : indent: Defaults to 2. Works exactly like the third parameter of JSON.stringify . maxLength: Defaults to 80. Lines will be tried to be kept at maximum this many characters long. replacer: Defaults to undefined. Works exactly like the second parameter of JSON.stringify . stringify(obj, {maxLength: 0, indent: indent}) gives the exact same result as JSON.stringify(obj, null, indent) . (However, if you use a replacer , integer keys might be moved first.) stringify(obj, {maxLength: Infinity}) gives the exact same result as JSON.stringify(obj) , except that there are spaces after colons and commas. Want more options? Check out @aitodotai/json-stringify-pretty-compact ! Development You need Node.js 10 and npm 6. npm scripts npm run eslint : Run ESLint (including Prettier ). npm run eslint:fix : Autofix ESLint errors. npm run prettier : Run Prettier for files other than JS. npm run jest : Run unit tests. During development, npm run jest -- --watch is nice. npm run coverage : Run unit tests with code coverage. npm test : Check that everything works. License MIT .","title":"json-stringify-pretty-compact [![Build Status][travis-badge]][travis-link]"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/#json-stringify-pretty-compact","text":"The output of JSON.stringify comes in two flavors: compact and pretty. The former is usually too compact to be read by humans, while the latter sometimes is too spacious. This module trades performance for a compromise between the two. The result is a pretty compact string, where \u201cpretty\u201d means both \u201ckind of\u201d and \u201cnice\u201d. 1 2 3 4 5 6 7 8 9 10 { \"bool\" : true , \"short array\" : [ 1 , 2 , 3 ], \"long array\" : [ { \"x\" : 1 , \"y\" : 2 }, { \"x\" : 2 , \"y\" : 1 }, { \"x\" : 1 , \"y\" : 1 }, { \"x\" : 2 , \"y\" : 2 } ] } While the \u201cpretty\u201d mode of JSON.stringify puts every item of arrays and objects on its own line, this module puts the whole array or object on a single line, unless the line becomes too long (the default maximum is 80 characters). Making arrays and objects multi-line is the only attempt made to enforce the maximum line length; if that doesn\u2019t help then so be it.","title":"json-stringify-pretty-compact"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/#installation","text":"1 npm install json-stringify-pretty-compact 1 const stringify = require ( \"json-stringify-pretty-compact\" );","title":"Installation"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/#stringifyobj-options","text":"It\u2019s like JSON.stringify(obj, options.replacer, options.indent) , except that objects and arrays are on one line if they fit (according to options.maxLength ). options : indent: Defaults to 2. Works exactly like the third parameter of JSON.stringify . maxLength: Defaults to 80. Lines will be tried to be kept at maximum this many characters long. replacer: Defaults to undefined. Works exactly like the second parameter of JSON.stringify . stringify(obj, {maxLength: 0, indent: indent}) gives the exact same result as JSON.stringify(obj, null, indent) . (However, if you use a replacer , integer keys might be moved first.) stringify(obj, {maxLength: Infinity}) gives the exact same result as JSON.stringify(obj) , except that there are spaces after colons and commas. Want more options? Check out @aitodotai/json-stringify-pretty-compact !","title":"stringify(obj, options = {})"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/#development","text":"You need Node.js 10 and npm 6.","title":"Development"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/#npm-scripts","text":"npm run eslint : Run ESLint (including Prettier ). npm run eslint:fix : Autofix ESLint errors. npm run prettier : Run Prettier for files other than JS. npm run jest : Run unit tests. During development, npm run jest -- --watch is nice. npm run coverage : Run unit tests with code coverage. npm test : Check that everything works.","title":"npm scripts"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/#license","text":"MIT .","title":"License"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/","text":"Version 2.0.0 (2019-02-02) Removed: The margins option. Check out @aitodotai/json-stringify-pretty-compact if you miss it. This package is now purely a combination of JSON.stringify(obj) and JSON.stringify(obj, null, 2) with no additional formatting features on top of that. Added: Support for the replacer argument. Changed: Passing undefined to options now result in the default value being used. This is to align with how destructuring defaults work in ES2015. Version 1.2.0 (2018-04-22) Added: TypeScript definition. Thanks to @domoritz! Version 1.1.0 (2018-01-12) Added: The margins option. Thanks to @randallsquared! Version 1.0.4 (2017-04-29) Fixed: String contents are no longer accidentally modified in some cases. Thanks to @powellquiring! Version 1.0.3 (2017-03-30) No code changes. Just trying to get the readme to show on npmjs.com. Version 1.0.2 (2016-09-08) Improved: Limited npm package contents for a smaller download. Version 1.0.1 (2014-11-03) Fixed: Commas are now accounted for when calculating the available length of a line, so that they do not appear outside options.maxLength . Version 1.0.0 (2014-11-01) Initial release.","title":"CHANGELOG"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/#version-200-2019-02-02","text":"Removed: The margins option. Check out @aitodotai/json-stringify-pretty-compact if you miss it. This package is now purely a combination of JSON.stringify(obj) and JSON.stringify(obj, null, 2) with no additional formatting features on top of that. Added: Support for the replacer argument. Changed: Passing undefined to options now result in the default value being used. This is to align with how destructuring defaults work in ES2015.","title":"Version 2.0.0 (2019-02-02)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/#version-120-2018-04-22","text":"Added: TypeScript definition. Thanks to @domoritz!","title":"Version 1.2.0 (2018-04-22)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/#version-110-2018-01-12","text":"Added: The margins option. Thanks to @randallsquared!","title":"Version 1.1.0 (2018-01-12)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/#version-104-2017-04-29","text":"Fixed: String contents are no longer accidentally modified in some cases. Thanks to @powellquiring!","title":"Version 1.0.4 (2017-04-29)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/#version-103-2017-03-30","text":"No code changes. Just trying to get the readme to show on npmjs.com.","title":"Version 1.0.3 (2017-03-30)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/#version-102-2016-09-08","text":"Improved: Limited npm package contents for a smaller download.","title":"Version 1.0.2 (2016-09-08)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/#version-101-2014-11-03","text":"Fixed: Commas are now accounted for when calculating the available length of a line, so that they do not appear outside options.maxLength .","title":"Version 1.0.1 (2014-11-03)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/json-stringify-pretty-compact/CHANGELOG/#version-100-2014-11-01","text":"Initial release.","title":"Version 1.0.0 (2014-11-01)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/minimist/readme/","text":"minimist parse argument options This module is the guts of optimist's argument parser without all the fanciful decoration. example 1 2 var argv = require ( 'minimist' )( process . argv . slice ( 2 )); console . log ( argv ); 1 2 $ node example/parse.js -a beep -b boop { _: [] , a: 'beep' , b: 'boop' } 1 2 3 4 5 6 7 8 9 $ node example/parse.js -x 3 -y 4 -n5 -abc --beep = boop foo bar baz { _: [ 'foo' , 'bar' , 'baz' ] , x: 3 , y: 4 , n: 5 , a: true, b: true, c: true, beep: 'boop' } security Previous versions had a prototype pollution bug that could cause privilege escalation in some circumstances when handling untrusted user input. Please use version 1.2.3 or later: https://snyk.io/vuln/SNYK-JS-MINIMIST-559764 methods 1 var parseArgs = require ( 'minimist' ) var argv = parseArgs(args, opts={}) Return an argument object argv populated with the array arguments from args . argv._ contains all the arguments that didn't have an option associated with them. Numeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name. Any arguments after '--' will not be parsed and will end up in argv._ . options can be: opts.string - a string or array of strings argument names to always treat as strings opts.boolean - a boolean, string or array of strings to always treat as booleans. if true will treat all double hyphenated arguments without equal signs as boolean (e.g. affects --foo , not -f or --foo=bar ) opts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases opts.default - an object mapping string argument names to default values opts.stopEarly - when true, populate argv._ with everything after the first non-option opts['--'] - when true, populate argv._ with everything before the -- and argv['--'] with everything after the -- . Here's an example: ``` require('./')('one two three -- four five --six'.split(' '), { '--': true }) { _: [ 'one', 'two', 'three' ], '--': [ 'four', 'five', '--six' ] } ``` Note that with opts['--'] set, parsing for arguments still stops after the -- . opts.unknown - a function which is invoked with a command line parameter not defined in the opts configuration object. If the function returns false , the unknown option is not added to argv . install With npm do: 1 npm install minimist license MIT","title":"minimist"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/minimist/readme/#minimist","text":"parse argument options This module is the guts of optimist's argument parser without all the fanciful decoration.","title":"minimist"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/minimist/readme/#example","text":"1 2 var argv = require ( 'minimist' )( process . argv . slice ( 2 )); console . log ( argv ); 1 2 $ node example/parse.js -a beep -b boop { _: [] , a: 'beep' , b: 'boop' } 1 2 3 4 5 6 7 8 9 $ node example/parse.js -x 3 -y 4 -n5 -abc --beep = boop foo bar baz { _: [ 'foo' , 'bar' , 'baz' ] , x: 3 , y: 4 , n: 5 , a: true, b: true, c: true, beep: 'boop' }","title":"example"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/minimist/readme/#security","text":"Previous versions had a prototype pollution bug that could cause privilege escalation in some circumstances when handling untrusted user input. Please use version 1.2.3 or later: https://snyk.io/vuln/SNYK-JS-MINIMIST-559764","title":"security"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/minimist/readme/#methods","text":"1 var parseArgs = require ( 'minimist' )","title":"methods"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/minimist/readme/#var-argv-parseargsargs-opts","text":"Return an argument object argv populated with the array arguments from args . argv._ contains all the arguments that didn't have an option associated with them. Numeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name. Any arguments after '--' will not be parsed and will end up in argv._ . options can be: opts.string - a string or array of strings argument names to always treat as strings opts.boolean - a boolean, string or array of strings to always treat as booleans. if true will treat all double hyphenated arguments without equal signs as boolean (e.g. affects --foo , not -f or --foo=bar ) opts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases opts.default - an object mapping string argument names to default values opts.stopEarly - when true, populate argv._ with everything after the first non-option opts['--'] - when true, populate argv._ with everything before the -- and argv['--'] with everything after the -- . Here's an example: ``` require('./')('one two three -- four five --six'.split(' '), { '--': true }) { _: [ 'one', 'two', 'three' ], '--': [ 'four', 'five', '--six' ] } ``` Note that with opts['--'] set, parsing for arguments still stops after the -- . opts.unknown - a function which is invoked with a command line parameter not defined in the opts configuration object. If the function returns false , the unknown option is not added to argv .","title":"var argv = parseArgs(args, opts={})"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/minimist/readme/#install","text":"With npm do: 1 npm install minimist","title":"install"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/minimist/readme/#license","text":"MIT","title":"license"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/rw/","text":"rw - Now stdin and stdout are files. How do you read a file from stdin? If you thought, 1 var contents = fs . readFileSync ( \"/dev/stdin\" , \"utf8\" ); you\u2019d be wrong, because Node only reads up to the size of the file reported by fs.stat rather than reading until it receives an EOF. So, if you redirect a file to your program ( cat file | program ), you\u2019ll only read the first 65,536 bytes of your file. Oops. What about writing a file to stdout? If you thought, 1 fs . writeFileSync ( \"/dev/stdout\" , contents , \"utf8\" ); you\u2019d also be wrong, because this tries to close stdout, so you get this error: 1 2 3 Error : UNKNOWN , unknown error at Object . fs . writeSync ( fs . js : 528 : 18 ) at Object . fs . writeFileSync ( fs . js : 975 : 21 ) (Also, this doesn\u2019t work on Windows, because Windows doesn\u2019t support /dev/stdout, /dev/stdin and /dev/stderr!) Shucks. So what should you do? You could use a different pattern for reading from stdin: 1 2 3 4 5 6 var chunks = []; process . stdin . on ( \"data\" , function ( chunk ) { chunks . push ( chunk ); }) . on ( \"end\" , function () { console . log ( chunks . join ( \"\" ). length ); }) . setEncoding ( \"utf8\" ); But that\u2019s a pain, since now your code has two different code paths for reading inputs depending on whether you\u2019re reading a real file or stdin. And the code gets even more complex if you want to read that file synchronously . You could also try a different pattern for writing to stdout: 1 process . stdout . write ( contents ); Or even: 1 console . log ( contents ); But if you try to pipe your output to head , you\u2019ll get this error: 1 2 3 Error : write EPIPE at errnoException ( net . js : 904 : 11 ) at Object . afterWrite ( net . js : 720 : 19 ) Huh. The rw module fixes these problems. It provides an interface just like readFile, readFileSync, writeFile and writeFileSync, but with implementations that work the way you expect on stdin and stdout. If you use these methods on files other than /dev/stdin or /dev/stdout, they simply delegate to the fs methods, so you can trust that they behave identically to the methods you\u2019re used to. For example, now you can read stdin synchronously like so: 1 var contents = rw . readFileSync ( \"/dev/stdin\" , \"utf8\" ); Or to write to stdout: 1 rw . writeFileSync ( \"/dev/stdout\" , contents , \"utf8\" ); And rw automatically squashes EPIPE errors, so you can pipe the output of your program to head and you won\u2019t get a spurious stack trace. To install, npm install rw . Note If you want to read synchronously from stdin using readFileSync , you cannot also use process.stdin in the same program. Likewise, if you want to write synchronously to stdout or stderr using writeFileSync , you cannot use process.stdout or process.stderr, respectively. (This includes using console.log and the like!) Failure to heed this warning may result in error: EAGAIN, resource temporarily unavailable. Unfortunately, it does not appear possible for this library to fix this issue automatically, so please use caution. Only the asynchronous methods readFile and writeFile are supported on Windows. Node has no synchronous API for reading from process. stdin or writing to process. stdout or process. stderr , so you\u2019re out of luck! API Reference # rw. readFile ( path [, options ], callback ) Reads the file at the specified path completely into memory, invoking the specified callback once the data is available and the file is closed. The callback is invoked with two arguments: the error that occurred during read (hopefully null), and the read data. If options is a string, it specifies the encoding to use, in which case the read data will be a string; otherwise options is an object, and may specify encoding and flag properties. This method is a drop-in replacement for fs.readFile and fixes the behavior of special files such as /dev/stdin. # rw. readFileSync ( path [, options ]) Reads the file at the specified path completely into memory, synchronously, returning the data. If an error occurred during read, this function throws an error instead. If options is a string, it specifies the encoding to use, in which case the read data will be a string; otherwise options is an object, and may specify encoding and flag properties. This method is a drop-in replacement for fs.readFileSync and fixes the behavior of special files such as /dev/stdin. # rw. writeFile ( path , data [, options ], callback ) Writes the specified data (completely in memory) to a file at the specified path , invoking the specified callback once the data is completely written and the file is closed. The callback is invoked with a single argument: the error that occurred during write (hopefully null). If options is a string, it specifies the encoding to use, in which case the data must be a string; otherwise options is an object, and may specify encoding, mode and flag properties. This method is a drop-in replacement for fs.writeFile and fixes the behavior of special files such as /dev/stdout. # rw. writeFileSync ( path , data [, options ]) Writes the specified data (completely in memory) to a file at the specified path , synchronously, returning once the data is completely written and the file is closed. Throws an error if one occurs during write. If options is a string, it specifies the encoding to use, in which case the data must be a string; otherwise options is an object, and may specify encoding, mode and flag properties. This method is a drop-in replacement for fs.writeFileSync and fixes the behavior of special files such as /dev/stdout. # rw.dash. readFile ( path [, options ], callback ) Equivalent to rw.readFile , except treats a path of - as /dev/stdin . Useful for command-line arguments. # rw.dash. readFileSync ( path [, options ]) Equivalent to rw.readFileSync , except treats a path of - as /dev/stdin . Useful for command-line arguments. # rw.dash. writeFile ( path , data [, options ], callback ) Equivalent to rw.writeFile , except treats a path of - as /dev/stdout . Useful for command-line arguments. # rw.dash. writeFileSync ( path , data [, options ]) Equivalent to rw.writeFileSync , except treats a path of - as /dev/stdout . Useful for command-line arguments.","title":"rw - Now stdin and stdout are files."},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/rw/#rw-now-stdin-and-stdout-are-files","text":"How do you read a file from stdin? If you thought, 1 var contents = fs . readFileSync ( \"/dev/stdin\" , \"utf8\" ); you\u2019d be wrong, because Node only reads up to the size of the file reported by fs.stat rather than reading until it receives an EOF. So, if you redirect a file to your program ( cat file | program ), you\u2019ll only read the first 65,536 bytes of your file. Oops. What about writing a file to stdout? If you thought, 1 fs . writeFileSync ( \"/dev/stdout\" , contents , \"utf8\" ); you\u2019d also be wrong, because this tries to close stdout, so you get this error: 1 2 3 Error : UNKNOWN , unknown error at Object . fs . writeSync ( fs . js : 528 : 18 ) at Object . fs . writeFileSync ( fs . js : 975 : 21 ) (Also, this doesn\u2019t work on Windows, because Windows doesn\u2019t support /dev/stdout, /dev/stdin and /dev/stderr!) Shucks. So what should you do? You could use a different pattern for reading from stdin: 1 2 3 4 5 6 var chunks = []; process . stdin . on ( \"data\" , function ( chunk ) { chunks . push ( chunk ); }) . on ( \"end\" , function () { console . log ( chunks . join ( \"\" ). length ); }) . setEncoding ( \"utf8\" ); But that\u2019s a pain, since now your code has two different code paths for reading inputs depending on whether you\u2019re reading a real file or stdin. And the code gets even more complex if you want to read that file synchronously . You could also try a different pattern for writing to stdout: 1 process . stdout . write ( contents ); Or even: 1 console . log ( contents ); But if you try to pipe your output to head , you\u2019ll get this error: 1 2 3 Error : write EPIPE at errnoException ( net . js : 904 : 11 ) at Object . afterWrite ( net . js : 720 : 19 ) Huh. The rw module fixes these problems. It provides an interface just like readFile, readFileSync, writeFile and writeFileSync, but with implementations that work the way you expect on stdin and stdout. If you use these methods on files other than /dev/stdin or /dev/stdout, they simply delegate to the fs methods, so you can trust that they behave identically to the methods you\u2019re used to. For example, now you can read stdin synchronously like so: 1 var contents = rw . readFileSync ( \"/dev/stdin\" , \"utf8\" ); Or to write to stdout: 1 rw . writeFileSync ( \"/dev/stdout\" , contents , \"utf8\" ); And rw automatically squashes EPIPE errors, so you can pipe the output of your program to head and you won\u2019t get a spurious stack trace. To install, npm install rw .","title":"rw - Now stdin and stdout are files."},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/rw/#note","text":"If you want to read synchronously from stdin using readFileSync , you cannot also use process.stdin in the same program. Likewise, if you want to write synchronously to stdout or stderr using writeFileSync , you cannot use process.stdout or process.stderr, respectively. (This includes using console.log and the like!) Failure to heed this warning may result in error: EAGAIN, resource temporarily unavailable. Unfortunately, it does not appear possible for this library to fix this issue automatically, so please use caution. Only the asynchronous methods readFile and writeFile are supported on Windows. Node has no synchronous API for reading from process. stdin or writing to process. stdout or process. stderr , so you\u2019re out of luck!","title":"Note"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/rw/#api-reference","text":"# rw. readFile ( path [, options ], callback ) Reads the file at the specified path completely into memory, invoking the specified callback once the data is available and the file is closed. The callback is invoked with two arguments: the error that occurred during read (hopefully null), and the read data. If options is a string, it specifies the encoding to use, in which case the read data will be a string; otherwise options is an object, and may specify encoding and flag properties. This method is a drop-in replacement for fs.readFile and fixes the behavior of special files such as /dev/stdin. # rw. readFileSync ( path [, options ]) Reads the file at the specified path completely into memory, synchronously, returning the data. If an error occurred during read, this function throws an error instead. If options is a string, it specifies the encoding to use, in which case the read data will be a string; otherwise options is an object, and may specify encoding and flag properties. This method is a drop-in replacement for fs.readFileSync and fixes the behavior of special files such as /dev/stdin. # rw. writeFile ( path , data [, options ], callback ) Writes the specified data (completely in memory) to a file at the specified path , invoking the specified callback once the data is completely written and the file is closed. The callback is invoked with a single argument: the error that occurred during write (hopefully null). If options is a string, it specifies the encoding to use, in which case the data must be a string; otherwise options is an object, and may specify encoding, mode and flag properties. This method is a drop-in replacement for fs.writeFile and fixes the behavior of special files such as /dev/stdout. # rw. writeFileSync ( path , data [, options ]) Writes the specified data (completely in memory) to a file at the specified path , synchronously, returning once the data is completely written and the file is closed. Throws an error if one occurs during write. If options is a string, it specifies the encoding to use, in which case the data must be a string; otherwise options is an object, and may specify encoding, mode and flag properties. This method is a drop-in replacement for fs.writeFileSync and fixes the behavior of special files such as /dev/stdout. # rw.dash. readFile ( path [, options ], callback ) Equivalent to rw.readFile , except treats a path of - as /dev/stdin . Useful for command-line arguments. # rw.dash. readFileSync ( path [, options ]) Equivalent to rw.readFileSync , except treats a path of - as /dev/stdin . Useful for command-line arguments. # rw.dash. writeFile ( path , data [, options ], callback ) Equivalent to rw.writeFile , except treats a path of - as /dev/stdout . Useful for command-line arguments. # rw.dash. writeFileSync ( path , data [, options ]) Equivalent to rw.writeFileSync , except treats a path of - as /dev/stdout . Useful for command-line arguments.","title":"API Reference"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-asc/","text":"sort-asc Sort array elements in ascending order. Install Install with npm 1 npm i sort-asc --save Usage 1 2 3 var sortAsc = require ( 'sort-asc' ); console . log (([ 'a' , 'b' , 'c' , 'd' ]). sort ( sortAsc )); //=> ['d', 'c', 'b', 'a'] Author Jon Schlinkert github/jonschlinkert twitter/jonschlinkert License Copyright (c) 2014 Jon Schlinkert, contributors. Released under the MIT license This file was generated by verb-cli on August 15, 2014.","title":"sort-asc [![NPM version](https://badge.fury.io/js/sort-asc.png)](http://badge.fury.io/js/sort-asc)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-asc/#sort-asc","text":"Sort array elements in ascending order.","title":"sort-asc"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-asc/#install","text":"","title":"Install"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-asc/#install-with-npm","text":"1 npm i sort-asc --save","title":"Install with npm"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-asc/#usage","text":"1 2 3 var sortAsc = require ( 'sort-asc' ); console . log (([ 'a' , 'b' , 'c' , 'd' ]). sort ( sortAsc )); //=> ['d', 'c', 'b', 'a']","title":"Usage"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-asc/#author","text":"Jon Schlinkert github/jonschlinkert twitter/jonschlinkert","title":"Author"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-asc/#license","text":"Copyright (c) 2014 Jon Schlinkert, contributors. Released under the MIT license This file was generated by verb-cli on August 15, 2014.","title":"License"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-desc/","text":"sort-desc Sort array elements in descending order. Install Install with npm 1 npm i sort-desc --save Usage 1 2 3 var sortDesc = require ( 'sort-desc' ); console . log (([ 'd' , 'c' , 'b' , 'a' ]). sort ( sortDesc )); //=> ['a', 'b', 'c', 'd'] Author Jon Schlinkert github/jonschlinkert twitter/jonschlinkert License Copyright (c) 2014 Jon Schlinkert, contributors. Released under the MIT license This file was generated by verb-cli on August 15, 2014.","title":"sort-desc [![NPM version](https://badge.fury.io/js/sort-desc.png)](http://badge.fury.io/js/sort-desc)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-desc/#sort-desc","text":"Sort array elements in descending order.","title":"sort-desc"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-desc/#install","text":"","title":"Install"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-desc/#install-with-npm","text":"1 npm i sort-desc --save","title":"Install with npm"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-desc/#usage","text":"1 2 3 var sortDesc = require ( 'sort-desc' ); console . log (([ 'd' , 'c' , 'b' , 'a' ]). sort ( sortDesc )); //=> ['a', 'b', 'c', 'd']","title":"Usage"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-desc/#author","text":"Jon Schlinkert github/jonschlinkert twitter/jonschlinkert","title":"Author"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-desc/#license","text":"Copyright (c) 2014 Jon Schlinkert, contributors. Released under the MIT license This file was generated by verb-cli on August 15, 2014.","title":"License"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/","text":"sort-object Sort the keys in an object. Install Install with npm 1 npm i sort-object --save Usage 1 var sortObj = require ( 'sort-object' ); By default, the keys on an object will be sorted in descending order: 1 2 console . log ( sortObj ({ a : 1 , c : 2 , b : 3 })); //=> {a: 1, b: 3, c: 2} The second param can be an object of options OR an array of keys : object 1 2 console . log ( sortObj ({ a : 1 , c : 2 , b : 3 }, { keys : [ 'a' , 'b' ]})); //=> {a: 1, b: 3} array 1 2 console . log ( sortObj ({ a : 1 , c : 2 , b : 3 }, [ 'a' , 'c' ])); //=> {a: 1, c: 2} Options keys {Array} The returned object will contain only the specified keys, in the same order. sort {Function} Sort function to sort the keys using JavaScript's .sort() method. sortOrder {String} Valid values are desc or asc , case insensitive. sortBy {String} Sort function that is passed the entire object, rather than just the keys - as with the .sort() method. options.keys Create a new object with only the given keys. 1 2 3 4 var o = { a : 1 , c : 2 , e : 5 , d : 4 , b : 3 }; console . log ( sortObj ( o , { keys : [ 'a' , 'b' ]})); //=> {a: 1, b: 3} options.sort Function to be passed to javascript's .sort() method: 1 2 3 4 5 6 7 8 var o = { a : 1 , c : 2 , e : 5 , d : 4 , b : 3 }; var obj = sortObj ( o , { sort : function ( a , b ) { return a < b ? - 1 : 1 ; } }); console . log ( obj ); //=> {a: 1, b: 3, c: 2, d: 4, e: 5} options.sortOrder Valid values are desc or asc , case insensitive: 1 2 3 var o = { a : 1 , c : 2 , e : 5 , d : 4 , b : 3 }; console . log ( sortObj ( o , { sortOrder : 'ASC' })); //=> {e: 5, d: 4, c: 3, b: 2, a: 1} options.sortBy Function that returns an array of keys to sort by: 1 2 3 4 5 6 7 8 9 10 11 var old = { one : 'aa' , two : 'bc' , three : 'ab' }; var o = sortObj ( old , { sortBy : function ( obj ) { var arr = []; Object . keys ( obj ). filter ( function ( key ) { if ( /^a/ . test ( obj [ key ])) arr . push ( key ); }); return arr . reverse (); } }); //=> {three: 'ab', one: 'aa'} Author Brian Woodward github/doowb twitter/doowb License Copyright (c) 2014 Brian Woodward, contributors. Released under the MIT license This file was generated by verb-cli on October 24, 2014.","title":"sort-object [![NPM version](https://badge.fury.io/js/sort-object.png)](http://badge.fury.io/js/sort-object)"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#sort-object","text":"Sort the keys in an object.","title":"sort-object"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#install","text":"","title":"Install"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#install-with-npm","text":"1 npm i sort-object --save","title":"Install with npm"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#usage","text":"1 var sortObj = require ( 'sort-object' ); By default, the keys on an object will be sorted in descending order: 1 2 console . log ( sortObj ({ a : 1 , c : 2 , b : 3 })); //=> {a: 1, b: 3, c: 2} The second param can be an object of options OR an array of keys : object 1 2 console . log ( sortObj ({ a : 1 , c : 2 , b : 3 }, { keys : [ 'a' , 'b' ]})); //=> {a: 1, b: 3} array 1 2 console . log ( sortObj ({ a : 1 , c : 2 , b : 3 }, [ 'a' , 'c' ])); //=> {a: 1, c: 2}","title":"Usage"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#options","text":"keys {Array} The returned object will contain only the specified keys, in the same order. sort {Function} Sort function to sort the keys using JavaScript's .sort() method. sortOrder {String} Valid values are desc or asc , case insensitive. sortBy {String} Sort function that is passed the entire object, rather than just the keys - as with the .sort() method.","title":"Options"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#optionskeys","text":"Create a new object with only the given keys. 1 2 3 4 var o = { a : 1 , c : 2 , e : 5 , d : 4 , b : 3 }; console . log ( sortObj ( o , { keys : [ 'a' , 'b' ]})); //=> {a: 1, b: 3}","title":"options.keys"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#optionssort","text":"Function to be passed to javascript's .sort() method: 1 2 3 4 5 6 7 8 var o = { a : 1 , c : 2 , e : 5 , d : 4 , b : 3 }; var obj = sortObj ( o , { sort : function ( a , b ) { return a < b ? - 1 : 1 ; } }); console . log ( obj ); //=> {a: 1, b: 3, c: 2, d: 4, e: 5}","title":"options.sort"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#optionssortorder","text":"Valid values are desc or asc , case insensitive: 1 2 3 var o = { a : 1 , c : 2 , e : 5 , d : 4 , b : 3 }; console . log ( sortObj ( o , { sortOrder : 'ASC' })); //=> {e: 5, d: 4, c: 3, b: 2, a: 1}","title":"options.sortOrder"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#optionssortby","text":"Function that returns an array of keys to sort by: 1 2 3 4 5 6 7 8 9 10 11 var old = { one : 'aa' , two : 'bc' , three : 'ab' }; var o = sortObj ( old , { sortBy : function ( obj ) { var arr = []; Object . keys ( obj ). filter ( function ( key ) { if ( /^a/ . test ( obj [ key ])) arr . push ( key ); }); return arr . reverse (); } }); //=> {three: 'ab', one: 'aa'}","title":"options.sortBy"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#author","text":"Brian Woodward github/doowb twitter/doowb","title":"Author"},{"location":"data-science/knime/images/node_modules/mapbox-gl/src/style-spec/node_modules/sort-object/#license","text":"Copyright (c) 2014 Brian Woodward, contributors. Released under the MIT license This file was generated by verb-cli on October 24, 2014.","title":"License"},{"location":"data-science/knime/images/node_modules/minimist/readme/","text":"minimist parse argument options This module is the guts of optimist's argument parser without all the fanciful decoration. example 1 2 var argv = require ( 'minimist' )( process . argv . slice ( 2 )); console . dir ( argv ); 1 2 $ node example/parse.js -a beep -b boop { _: [] , a: 'beep' , b: 'boop' } 1 2 3 4 5 6 7 8 9 $ node example/parse.js -x 3 -y 4 -n5 -abc --beep = boop foo bar baz { _: [ 'foo' , 'bar' , 'baz' ] , x: 3 , y: 4 , n: 5 , a: true, b: true, c: true, beep: 'boop' } methods 1 var parseArgs = require ( 'minimist' ) var argv = parseArgs(args, opts={}) Return an argument object argv populated with the array arguments from args . argv._ contains all the arguments that didn't have an option associated with them. Numeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name. Any arguments after '--' will not be parsed and will end up in argv._ . options can be: opts.string - a string or array of strings argument names to always treat as strings opts.boolean - a string or array of strings to always treat as booleans opts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases opts.default - an object mapping string argument names to default values install With npm do: 1 npm install minimist license MIT","title":"minimist"},{"location":"data-science/knime/images/node_modules/minimist/readme/#minimist","text":"parse argument options This module is the guts of optimist's argument parser without all the fanciful decoration.","title":"minimist"},{"location":"data-science/knime/images/node_modules/minimist/readme/#example","text":"1 2 var argv = require ( 'minimist' )( process . argv . slice ( 2 )); console . dir ( argv ); 1 2 $ node example/parse.js -a beep -b boop { _: [] , a: 'beep' , b: 'boop' } 1 2 3 4 5 6 7 8 9 $ node example/parse.js -x 3 -y 4 -n5 -abc --beep = boop foo bar baz { _: [ 'foo' , 'bar' , 'baz' ] , x: 3 , y: 4 , n: 5 , a: true, b: true, c: true, beep: 'boop' }","title":"example"},{"location":"data-science/knime/images/node_modules/minimist/readme/#methods","text":"1 var parseArgs = require ( 'minimist' )","title":"methods"},{"location":"data-science/knime/images/node_modules/minimist/readme/#var-argv-parseargsargs-opts","text":"Return an argument object argv populated with the array arguments from args . argv._ contains all the arguments that didn't have an option associated with them. Numeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name. Any arguments after '--' will not be parsed and will end up in argv._ . options can be: opts.string - a string or array of strings argument names to always treat as strings opts.boolean - a string or array of strings to always treat as booleans opts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases opts.default - an object mapping string argument names to default values","title":"var argv = parseArgs(args, opts={})"},{"location":"data-science/knime/images/node_modules/minimist/readme/#install","text":"With npm do: 1 npm install minimist","title":"install"},{"location":"data-science/knime/images/node_modules/minimist/readme/#license","text":"MIT","title":"license"},{"location":"data-science/knime/images/node_modules/murmurhash-js/","text":"MurmurHash.js An optimized JavaScript implementation of the MurmurHash algorithms. These algorithms take a JavaScript string (and a seed), and quickly create a non-cryptographic 32-bit hash from it. And by quick I mean sub-millisecond performance. More information about these algorithms can be found at: MurmurHash Homepage Wikipedia Entry on MurmurHash Install 1 npm install murmurhash-js API 1 var murmur = require ( \"murmurhash-js\" ) Methods murmur.murmur2(key, seed) Runs the murmur2 hash algorithm on the string key with initial seed seed . murmur.murmur3(key, seed) Runs the murmur3 hash algorithm on the string key with initial seed seed . Note require(\"murmur-hash\") is the same as murmur.murmur3 License (MIT) Copyright (c) 2011 Gary Court Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MurmurHash.js"},{"location":"data-science/knime/images/node_modules/murmurhash-js/#murmurhashjs","text":"An optimized JavaScript implementation of the MurmurHash algorithms. These algorithms take a JavaScript string (and a seed), and quickly create a non-cryptographic 32-bit hash from it. And by quick I mean sub-millisecond performance. More information about these algorithms can be found at: MurmurHash Homepage Wikipedia Entry on MurmurHash","title":"MurmurHash.js"},{"location":"data-science/knime/images/node_modules/murmurhash-js/#install","text":"1 npm install murmurhash-js","title":"Install"},{"location":"data-science/knime/images/node_modules/murmurhash-js/#api","text":"1 var murmur = require ( \"murmurhash-js\" )","title":"API"},{"location":"data-science/knime/images/node_modules/murmurhash-js/#methods","text":"","title":"Methods"},{"location":"data-science/knime/images/node_modules/murmurhash-js/#murmurmurmur2key-seed","text":"Runs the murmur2 hash algorithm on the string key with initial seed seed .","title":"murmur.murmur2(key, seed)"},{"location":"data-science/knime/images/node_modules/murmurhash-js/#murmurmurmur3key-seed","text":"Runs the murmur3 hash algorithm on the string key with initial seed seed . Note require(\"murmur-hash\") is the same as murmur.murmur3","title":"murmur.murmur3(key, seed)"},{"location":"data-science/knime/images/node_modules/murmurhash-js/#license-mit","text":"Copyright (c) 2011 Gary Court Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License (MIT)"},{"location":"data-science/knime/images/node_modules/pbf/","text":"pbf A low-level, fast, ultra-lightweight (3KB gzipped) JavaScript library for decoding and encoding protocol buffers , a compact binary format for structured data serialization. Works both in Node and the browser. Supports lazy decoding and detailed customization of the reading/writing code. Performance This library is extremely fast \u2014 much faster than native JSON.parse / JSON.stringify and the protocol-buffers module. Here's a result from running a real-world benchmark on Node v6.5 (decoding and encoding a sample of 439 vector tiles, 22.6 MB total): pbf decode: 387ms, or 57 MB/s pbf encode: 396ms, or 56 MB/s protocol-buffers decode: 837ms, or 26 MB/s protocol-buffers encode: 4197ms, or 5 MB/s JSON.parse : 1540ms, or 125 MB/s (parsing an equivalent 77.5 MB JSON file) JSON.stringify : 607ms, or 49 MB/s Examples Using Compiled Code Install pbf and compile a JavaScript module from a .proto file: 1 2 $ npm install -g pbf $ pbf example.proto > example.js Then read and write objects using the module like this: 1 2 3 4 5 6 7 8 9 10 11 var Pbf = require ( 'pbf' ); var Example = require ( './example.js' ). Example ; // read var pbf = new Pbf ( buffer ); var obj = Example . read ( pbf ); // write var pbf = new Pbf (); Example . write ( obj , pbf ); var buffer = pbf . finish (); Alternatively, you can compile a module directly in the code: 1 2 3 4 5 var compile = require ( 'pbf/compile' ); var schema = require ( 'protocol-buffers-schema' ); var proto = schema . parse ( fs . readFileSync ( 'example.proto' )); var Test = compile ( proto ). Test ; If you use webpack as your module bundler, you can use pbf-loader to load .proto files directly. It returns a compiled module ready to be used. Given you already configured your webpack.config.js , the code above would look like: 1 2 3 4 var Pbf = require ( 'pbf' ); var proto = require ( './example.proto' ); var Test = proto . Test ; Custom Reading 1 2 3 4 5 6 7 8 9 10 11 var data = new Pbf ( buffer ). readFields ( readData , {}); function readData ( tag , data , pbf ) { if ( tag === 1 ) data . name = pbf . readString (); else if ( tag === 2 ) data . version = pbf . readVarint (); else if ( tag === 3 ) data . layer = pbf . readMessage ( readLayer , {}); } function readLayer ( tag , layer , pbf ) { if ( tag === 1 ) layer . name = pbf . readString (); else if ( tag === 3 ) layer . size = pbf . readVarint (); } Custom Writing 1 2 3 4 5 6 7 8 9 10 11 12 13 var pbf = new Pbf (); writeData ( data , pbf ); var buffer = pbf . finish (); function writeData ( data , pbf ) { pbf . writeStringField ( 1 , data . name ); pbf . writeVarintField ( 2 , data . version ); pbf . writeMessage ( 3 , writeLayer , data . layer ); } function writeLayer ( layer , pbf ) { pbf . writeStringField ( 1 , layer . name ); pbf . writeVarintField ( 2 , layer . size ); } Install Node and Browserify: 1 npm install pbf Making a browser build: 1 2 3 npm install npm run build-dev # dist/pbf-dev.js (development build) npm run build-min # dist/pbf.js (minified production build) CDN link: https://unpkg.com/pbf@3.0.5/dist/pbf.js API Create a Pbf object, optionally given a Buffer or Uint8Array as input data: 1 2 3 4 5 // parse a pbf file from disk in Node var pbf = new Pbf ( fs . readFileSync ( 'data.pbf' )); // parse a pbf file in a browser after an ajax request with responseType=\"arraybuffer\" var pbf = new Pbf ( new Uint8Array ( xhr . response )); Pbf object properties: 1 2 pbf . length ; // length of the underlying buffer pbf . pos ; // current offset for reading or writing Reading Read a sequence of fields: 1 2 3 4 5 pbf . readFields ( function ( tag ) { if ( tag === 1 ) pbf . readVarint (); else if ( tag === 2 ) pbf . readString (); else ... }); It optionally accepts an object that will be passed to the reading function for easier construction of decoded data, and also passes the Pbf object as a third argument: 1 2 3 4 5 var result = pbf . readFields ( callback , {}) function callback ( tag , result , pbf ) { if ( tag === 1 ) result . id = pbf . readVarint (); } To read an embedded message, use pbf.readMessage(fn[, obj]) (in the same way as read ). Read values: 1 2 3 var value = pbf . readVarint (); var str = pbf . readString (); var numbers = pbf . readPackedVarint (); For lazy or partial decoding, simply save the position instead of reading a value, then later set it back to the saved value and read: 1 2 3 4 5 6 7 var fooPos = - 1 ; pbf . readFields ( function ( tag ) { if ( tag === 1 ) fooPos = pbf . pos ; }); ... pbf . pos = fooPos ; pbf . readMessage ( readFoo ); Scalar reading methods: readVarint(isSigned) (pass true if you expect negative varints) readSVarint() readFixed32() readFixed64() readSFixed32() readSFixed64() readBoolean() readFloat() readDouble() readString() readBytes() skip(value) Packed reading methods: readPackedVarint(arr, isSigned) (appends read items to arr ) readPackedSVarint(arr) readPackedFixed32(arr) readPackedFixed64(arr) readPackedSFixed32(arr) readPackedSFixed64(arr) readPackedBoolean(arr) readPackedFloat(arr) readPackedDouble(arr) Writing Write values: 1 2 pbf . writeVarint ( 123 ); pbf . writeString ( \"Hello world\" ); Write an embedded message: 1 2 3 4 5 6 pbf . writeMessage ( 1 , writeObj , obj ); function writeObj ( obj , pbf ) { pbf . writeStringField ( obj . name ); pbf . writeVarintField ( obj . version ); } Field writing methods: writeVarintField(tag, val) writeSVarintField(tag, val) writeFixed32Field(tag, val) writeFixed64Field(tag, val) writeSFixed32Field(tag, val) writeSFixed64Field(tag, val) writeBooleanField(tag, val) writeFloatField(tag, val) writeDoubleField(tag, val) writeStringField(tag, val) writeBytesField(tag, buffer) Packed field writing methods: writePackedVarint(tag, val) writePackedSVarint(tag, val) writePackedSFixed32(tag, val) writePackedSFixed64(tag, val) writePackedBoolean(tag, val) writePackedFloat(tag, val) writePackedDouble(tag, val) Scalar writing methods: writeVarint(val) writeSVarint(val) writeSFixed32(val) writeSFixed64(val) writeBoolean(val) writeFloat(val) writeDouble(val) writeString(val) writeBytes(buffer) Message writing methods: writeMessage(tag, fn[, obj]) writeRawMessage(fn[, obj]) Misc methods: realloc(minBytes) - pad the underlying buffer size to accommodate the given number of bytes; note that the size increases exponentially, so it won't necessarily equal the size of data written finish() - make the current buffer ready for reading and return the data as a buffer slice destroy() - dispose the buffer For an example of a real-world usage of the library, see vector-tile-js . Proto Schema to JavaScript If installed globally, pbf provides a binary that compiles proto files into JavaScript modules. Usage: 1 $ pbf <proto_path> [ --no-write ] [ --no-read ] [ --browser ] The --no-write and --no-read switches remove corresponding code in the output. The --browser switch makes the module work in browsers instead of Node. The resulting module exports each message by name with the following methods: read(pbf) - decodes an object from the given Pbf instance write(obj, pbf) - encodes an object into the given Pbf instance (usually empty) The resulting code is clean and simple, so feel free to customize it. Changelog 3.2.1 (Oct 11, 2019) Significantly improved performance when decoding large strings in the browser. 3.2.0 (Mar 11, 2019) Improved decoding to be able to parse repeated fields even if they were specified as packed, and vise versa. Improved packed encoding to skip empty arrays (previously, it would write a tag). Fixed an off-by-one data corruption bug when writing a message larger than 0x10000000 bytes. 3.1.0 (Sep 27, 2017) Added support for Protocol Buffer 3 maps to proto compiler. 3.0.5 (Nov 30, 2016) Fixed an error appearing in some versions of IE11 and old Android browsers. 3.0.4 (Nov 14, 2016) Fixed compiling repeated packed enum fields. 3.0.3 (Nov 14, 2016) Fixed a regression that broke compiling repeated enum fields with defaults. 3.0.2 (Sep 30, 2016) Fixed a regression that broke decoding of packed fields with a tag that didn't fit into one byte. 3.0.1 (Sep 20, 2016) Fixed a regression that broke encoding of long strings. 3.0.0 (Aug 30, 2016) This release include tons of compatibility/robustness fixes, and a more reliable Node implementation. Decoding performance is expected to get up to ~15% slower than v2.0 in Node (browsers are unaffected), but encoding got faster by ~15% in return. Encoder/decoder Breaking : changed Node implementation to use Uint8Array instead of Buffer internally (and produce corresponding result on finish() ), making it fully match the browser implementation for consistency and simplicity. Fixed writeVarint to write 0 when given NaN or other non-number to avoid producing a broken Protobuf message. Changed readPacked* methods signature to accept an optional arr argument to append the results to (to support messages with repeated fields that mix packed/non-packed encoding). Added an optional isSigned argument to readVarint that enables proper reading of negative varints. Deprecated readVarint64() (it still works, but it's recommended to be changed to readVarint(true) ). Faster string encoding. Proto compiler Breaking: Full support for defaults field values (both implicit and explicit); they're now included in the decoded JSON objects. Fixed reading of repeated fields with mixed packed/non-packed encoding for compatibility. Fixed proto3 compiler to use packed by default for repeated scalar fields. Fixed reading of negative varint types. Fixed packed fields to decode into [] if they're not present. Fixed nested message references handling. Fixed packed=false being interpreted as packed. Added a comment to generated code with pbf version number. 2.0.1 (May 28, 2016) Fixed a regression with writeVarint that affected certain numbers. 2.0.0 (May 28, 2016) Significantly improved the proto compiler, which now produces a much safer reading/writing code. Added the ability to compile a read/write module from a protobuf schema directly in the code. Proto compiler: fixed name resolutions and collisions in schemas with nested messages. Proto compiler: fixed broken top-level enums. 1.3.7 (May 28, 2016) Fixed a regression with writeVarint that affected certain numbers. 1.3.6 (May 27, 2016) Improved read and write performance (both ~15% faster). Improved generated code for default values. 1.3.5 (Oct 5, 2015) Added support for syntax keyword proto files (by updating resolve-protobuf-schema dependency). 1.3.4 (Jul 31, 2015) Added writeRawMessage method for writing a message without a tag, useful for creating pbfs with multiple top-level messages. 1.3.2 (Mar 5, 2015) Added readVarint64 method for proper decoding of negative int64 -encoded values. 1.3.1 (Feb 20, 2015) Fixed pbf proto compile tool generating broken writing code. 1.3.0 (Feb 5, 2015) Added pbf binary that compiles .proto files into Pbf -based JavaScript modules. 1.2.0 (Jan 5, 2015) Breaking API changes Changed writeMessage signature to (tag, fn, obj) (see example in the docs) for a huge encoding performance improvement. Replaced readPacked and writePacked methods that accept type as a string with readPackedVarint , etc. for each type (better performance and simpler API). Improvements 5x faster encoding in Node (vector tile benchmark). 40x faster encoding and 3x faster decoding in the browser (vector tile benchmark). 1.1.4 (Jan 2, 2015) Significantly improved readPacked and writePacked performance (the tile reading benchmark is now 70% faster). 1.1.3 (Dec 26, 2014) Brings tons of improvements and fixes over the previous version ( 0.0.2 ). Basically makes the library complete. Improvements Improved performance of both reading and writing. Made the browser build 3 times smaller. Added convenience readFields and readMessage methods for a much easier reading API. Added reading methods: readFloat , readBoolean , readSFixed32 , readSFixed64 . Added writing methods: writeUInt64 , writeSFixed32 , writeSFixed64 . Improved readDouble and readString to use native Buffer methods under Node. Improved readString and writeString to use HTML5 TextEncoder and TextDecoder where available. Made Pbf buffer argument optional. Added extensive docs and examples in the readme. Added an extensive test suite that brings test coverage up to 100%. Breaking API changes Renamed readBuffer / writeBuffer to readBytes / writeBytes . Renamed readUInt32 / writeUInt32 to readFixed32 / writeFixed32 , etc. Renamed writeTaggedVarint to writeVarintField , etc. Changed writePacked signature from (type, tag, items) to (tag, type, items) . Bugfixes Fixed readVarint to handle varints bigger than 6 bytes. Fixed readSVarint to handle number bigger than 2^30 . Fixed writeVarint failing on some integers. Fixed writeVarint not throwing an error on numbers that are too big. Fixed readUInt64 always failing. Fixed writing to an empty buffer always failing.","title":"pbf"},{"location":"data-science/knime/images/node_modules/pbf/#pbf","text":"A low-level, fast, ultra-lightweight (3KB gzipped) JavaScript library for decoding and encoding protocol buffers , a compact binary format for structured data serialization. Works both in Node and the browser. Supports lazy decoding and detailed customization of the reading/writing code.","title":"pbf"},{"location":"data-science/knime/images/node_modules/pbf/#performance","text":"This library is extremely fast \u2014 much faster than native JSON.parse / JSON.stringify and the protocol-buffers module. Here's a result from running a real-world benchmark on Node v6.5 (decoding and encoding a sample of 439 vector tiles, 22.6 MB total): pbf decode: 387ms, or 57 MB/s pbf encode: 396ms, or 56 MB/s protocol-buffers decode: 837ms, or 26 MB/s protocol-buffers encode: 4197ms, or 5 MB/s JSON.parse : 1540ms, or 125 MB/s (parsing an equivalent 77.5 MB JSON file) JSON.stringify : 607ms, or 49 MB/s","title":"Performance"},{"location":"data-science/knime/images/node_modules/pbf/#examples","text":"","title":"Examples"},{"location":"data-science/knime/images/node_modules/pbf/#using-compiled-code","text":"Install pbf and compile a JavaScript module from a .proto file: 1 2 $ npm install -g pbf $ pbf example.proto > example.js Then read and write objects using the module like this: 1 2 3 4 5 6 7 8 9 10 11 var Pbf = require ( 'pbf' ); var Example = require ( './example.js' ). Example ; // read var pbf = new Pbf ( buffer ); var obj = Example . read ( pbf ); // write var pbf = new Pbf (); Example . write ( obj , pbf ); var buffer = pbf . finish (); Alternatively, you can compile a module directly in the code: 1 2 3 4 5 var compile = require ( 'pbf/compile' ); var schema = require ( 'protocol-buffers-schema' ); var proto = schema . parse ( fs . readFileSync ( 'example.proto' )); var Test = compile ( proto ). Test ; If you use webpack as your module bundler, you can use pbf-loader to load .proto files directly. It returns a compiled module ready to be used. Given you already configured your webpack.config.js , the code above would look like: 1 2 3 4 var Pbf = require ( 'pbf' ); var proto = require ( './example.proto' ); var Test = proto . Test ;","title":"Using Compiled Code"},{"location":"data-science/knime/images/node_modules/pbf/#custom-reading","text":"1 2 3 4 5 6 7 8 9 10 11 var data = new Pbf ( buffer ). readFields ( readData , {}); function readData ( tag , data , pbf ) { if ( tag === 1 ) data . name = pbf . readString (); else if ( tag === 2 ) data . version = pbf . readVarint (); else if ( tag === 3 ) data . layer = pbf . readMessage ( readLayer , {}); } function readLayer ( tag , layer , pbf ) { if ( tag === 1 ) layer . name = pbf . readString (); else if ( tag === 3 ) layer . size = pbf . readVarint (); }","title":"Custom Reading"},{"location":"data-science/knime/images/node_modules/pbf/#custom-writing","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 var pbf = new Pbf (); writeData ( data , pbf ); var buffer = pbf . finish (); function writeData ( data , pbf ) { pbf . writeStringField ( 1 , data . name ); pbf . writeVarintField ( 2 , data . version ); pbf . writeMessage ( 3 , writeLayer , data . layer ); } function writeLayer ( layer , pbf ) { pbf . writeStringField ( 1 , layer . name ); pbf . writeVarintField ( 2 , layer . size ); }","title":"Custom Writing"},{"location":"data-science/knime/images/node_modules/pbf/#install","text":"Node and Browserify: 1 npm install pbf Making a browser build: 1 2 3 npm install npm run build-dev # dist/pbf-dev.js (development build) npm run build-min # dist/pbf.js (minified production build) CDN link: https://unpkg.com/pbf@3.0.5/dist/pbf.js","title":"Install"},{"location":"data-science/knime/images/node_modules/pbf/#api","text":"Create a Pbf object, optionally given a Buffer or Uint8Array as input data: 1 2 3 4 5 // parse a pbf file from disk in Node var pbf = new Pbf ( fs . readFileSync ( 'data.pbf' )); // parse a pbf file in a browser after an ajax request with responseType=\"arraybuffer\" var pbf = new Pbf ( new Uint8Array ( xhr . response )); Pbf object properties: 1 2 pbf . length ; // length of the underlying buffer pbf . pos ; // current offset for reading or writing","title":"API"},{"location":"data-science/knime/images/node_modules/pbf/#reading","text":"Read a sequence of fields: 1 2 3 4 5 pbf . readFields ( function ( tag ) { if ( tag === 1 ) pbf . readVarint (); else if ( tag === 2 ) pbf . readString (); else ... }); It optionally accepts an object that will be passed to the reading function for easier construction of decoded data, and also passes the Pbf object as a third argument: 1 2 3 4 5 var result = pbf . readFields ( callback , {}) function callback ( tag , result , pbf ) { if ( tag === 1 ) result . id = pbf . readVarint (); } To read an embedded message, use pbf.readMessage(fn[, obj]) (in the same way as read ). Read values: 1 2 3 var value = pbf . readVarint (); var str = pbf . readString (); var numbers = pbf . readPackedVarint (); For lazy or partial decoding, simply save the position instead of reading a value, then later set it back to the saved value and read: 1 2 3 4 5 6 7 var fooPos = - 1 ; pbf . readFields ( function ( tag ) { if ( tag === 1 ) fooPos = pbf . pos ; }); ... pbf . pos = fooPos ; pbf . readMessage ( readFoo ); Scalar reading methods: readVarint(isSigned) (pass true if you expect negative varints) readSVarint() readFixed32() readFixed64() readSFixed32() readSFixed64() readBoolean() readFloat() readDouble() readString() readBytes() skip(value) Packed reading methods: readPackedVarint(arr, isSigned) (appends read items to arr ) readPackedSVarint(arr) readPackedFixed32(arr) readPackedFixed64(arr) readPackedSFixed32(arr) readPackedSFixed64(arr) readPackedBoolean(arr) readPackedFloat(arr) readPackedDouble(arr)","title":"Reading"},{"location":"data-science/knime/images/node_modules/pbf/#writing","text":"Write values: 1 2 pbf . writeVarint ( 123 ); pbf . writeString ( \"Hello world\" ); Write an embedded message: 1 2 3 4 5 6 pbf . writeMessage ( 1 , writeObj , obj ); function writeObj ( obj , pbf ) { pbf . writeStringField ( obj . name ); pbf . writeVarintField ( obj . version ); } Field writing methods: writeVarintField(tag, val) writeSVarintField(tag, val) writeFixed32Field(tag, val) writeFixed64Field(tag, val) writeSFixed32Field(tag, val) writeSFixed64Field(tag, val) writeBooleanField(tag, val) writeFloatField(tag, val) writeDoubleField(tag, val) writeStringField(tag, val) writeBytesField(tag, buffer) Packed field writing methods: writePackedVarint(tag, val) writePackedSVarint(tag, val) writePackedSFixed32(tag, val) writePackedSFixed64(tag, val) writePackedBoolean(tag, val) writePackedFloat(tag, val) writePackedDouble(tag, val) Scalar writing methods: writeVarint(val) writeSVarint(val) writeSFixed32(val) writeSFixed64(val) writeBoolean(val) writeFloat(val) writeDouble(val) writeString(val) writeBytes(buffer) Message writing methods: writeMessage(tag, fn[, obj]) writeRawMessage(fn[, obj]) Misc methods: realloc(minBytes) - pad the underlying buffer size to accommodate the given number of bytes; note that the size increases exponentially, so it won't necessarily equal the size of data written finish() - make the current buffer ready for reading and return the data as a buffer slice destroy() - dispose the buffer For an example of a real-world usage of the library, see vector-tile-js .","title":"Writing"},{"location":"data-science/knime/images/node_modules/pbf/#proto-schema-to-javascript","text":"If installed globally, pbf provides a binary that compiles proto files into JavaScript modules. Usage: 1 $ pbf <proto_path> [ --no-write ] [ --no-read ] [ --browser ] The --no-write and --no-read switches remove corresponding code in the output. The --browser switch makes the module work in browsers instead of Node. The resulting module exports each message by name with the following methods: read(pbf) - decodes an object from the given Pbf instance write(obj, pbf) - encodes an object into the given Pbf instance (usually empty) The resulting code is clean and simple, so feel free to customize it.","title":"Proto Schema to JavaScript"},{"location":"data-science/knime/images/node_modules/pbf/#changelog","text":"","title":"Changelog"},{"location":"data-science/knime/images/node_modules/pbf/#321-oct-11-2019","text":"Significantly improved performance when decoding large strings in the browser.","title":"3.2.1 (Oct 11, 2019)"},{"location":"data-science/knime/images/node_modules/pbf/#320-mar-11-2019","text":"Improved decoding to be able to parse repeated fields even if they were specified as packed, and vise versa. Improved packed encoding to skip empty arrays (previously, it would write a tag). Fixed an off-by-one data corruption bug when writing a message larger than 0x10000000 bytes.","title":"3.2.0 (Mar 11, 2019)"},{"location":"data-science/knime/images/node_modules/pbf/#310-sep-27-2017","text":"Added support for Protocol Buffer 3 maps to proto compiler.","title":"3.1.0 (Sep 27, 2017)"},{"location":"data-science/knime/images/node_modules/pbf/#305-nov-30-2016","text":"Fixed an error appearing in some versions of IE11 and old Android browsers.","title":"3.0.5 (Nov 30, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#304-nov-14-2016","text":"Fixed compiling repeated packed enum fields.","title":"3.0.4 (Nov 14, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#303-nov-14-2016","text":"Fixed a regression that broke compiling repeated enum fields with defaults.","title":"3.0.3 (Nov 14, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#302-sep-30-2016","text":"Fixed a regression that broke decoding of packed fields with a tag that didn't fit into one byte.","title":"3.0.2 (Sep 30, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#301-sep-20-2016","text":"Fixed a regression that broke encoding of long strings.","title":"3.0.1 (Sep 20, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#300-aug-30-2016","text":"This release include tons of compatibility/robustness fixes, and a more reliable Node implementation. Decoding performance is expected to get up to ~15% slower than v2.0 in Node (browsers are unaffected), but encoding got faster by ~15% in return.","title":"3.0.0 (Aug 30, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#encoderdecoder","text":"Breaking : changed Node implementation to use Uint8Array instead of Buffer internally (and produce corresponding result on finish() ), making it fully match the browser implementation for consistency and simplicity. Fixed writeVarint to write 0 when given NaN or other non-number to avoid producing a broken Protobuf message. Changed readPacked* methods signature to accept an optional arr argument to append the results to (to support messages with repeated fields that mix packed/non-packed encoding). Added an optional isSigned argument to readVarint that enables proper reading of negative varints. Deprecated readVarint64() (it still works, but it's recommended to be changed to readVarint(true) ). Faster string encoding.","title":"Encoder/decoder"},{"location":"data-science/knime/images/node_modules/pbf/#proto-compiler","text":"Breaking: Full support for defaults field values (both implicit and explicit); they're now included in the decoded JSON objects. Fixed reading of repeated fields with mixed packed/non-packed encoding for compatibility. Fixed proto3 compiler to use packed by default for repeated scalar fields. Fixed reading of negative varint types. Fixed packed fields to decode into [] if they're not present. Fixed nested message references handling. Fixed packed=false being interpreted as packed. Added a comment to generated code with pbf version number.","title":"Proto compiler"},{"location":"data-science/knime/images/node_modules/pbf/#201-may-28-2016","text":"Fixed a regression with writeVarint that affected certain numbers.","title":"2.0.1 (May 28, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#200-may-28-2016","text":"Significantly improved the proto compiler, which now produces a much safer reading/writing code. Added the ability to compile a read/write module from a protobuf schema directly in the code. Proto compiler: fixed name resolutions and collisions in schemas with nested messages. Proto compiler: fixed broken top-level enums.","title":"2.0.0 (May 28, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#137-may-28-2016","text":"Fixed a regression with writeVarint that affected certain numbers.","title":"1.3.7 (May 28, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#136-may-27-2016","text":"Improved read and write performance (both ~15% faster). Improved generated code for default values.","title":"1.3.6 (May 27, 2016)"},{"location":"data-science/knime/images/node_modules/pbf/#135-oct-5-2015","text":"Added support for syntax keyword proto files (by updating resolve-protobuf-schema dependency).","title":"1.3.5 (Oct 5, 2015)"},{"location":"data-science/knime/images/node_modules/pbf/#134-jul-31-2015","text":"Added writeRawMessage method for writing a message without a tag, useful for creating pbfs with multiple top-level messages.","title":"1.3.4 (Jul 31, 2015)"},{"location":"data-science/knime/images/node_modules/pbf/#132-mar-5-2015","text":"Added readVarint64 method for proper decoding of negative int64 -encoded values.","title":"1.3.2 (Mar 5, 2015)"},{"location":"data-science/knime/images/node_modules/pbf/#131-feb-20-2015","text":"Fixed pbf proto compile tool generating broken writing code.","title":"1.3.1 (Feb 20, 2015)"},{"location":"data-science/knime/images/node_modules/pbf/#130-feb-5-2015","text":"Added pbf binary that compiles .proto files into Pbf -based JavaScript modules.","title":"1.3.0 (Feb 5, 2015)"},{"location":"data-science/knime/images/node_modules/pbf/#120-jan-5-2015","text":"","title":"1.2.0 (Jan 5, 2015)"},{"location":"data-science/knime/images/node_modules/pbf/#breaking-api-changes","text":"Changed writeMessage signature to (tag, fn, obj) (see example in the docs) for a huge encoding performance improvement. Replaced readPacked and writePacked methods that accept type as a string with readPackedVarint , etc. for each type (better performance and simpler API).","title":"Breaking API changes"},{"location":"data-science/knime/images/node_modules/pbf/#improvements","text":"5x faster encoding in Node (vector tile benchmark). 40x faster encoding and 3x faster decoding in the browser (vector tile benchmark).","title":"Improvements"},{"location":"data-science/knime/images/node_modules/pbf/#114-jan-2-2015","text":"Significantly improved readPacked and writePacked performance (the tile reading benchmark is now 70% faster).","title":"1.1.4 (Jan 2, 2015)"},{"location":"data-science/knime/images/node_modules/pbf/#113-dec-26-2014","text":"Brings tons of improvements and fixes over the previous version ( 0.0.2 ). Basically makes the library complete.","title":"1.1.3 (Dec 26, 2014)"},{"location":"data-science/knime/images/node_modules/pbf/#improvements_1","text":"Improved performance of both reading and writing. Made the browser build 3 times smaller. Added convenience readFields and readMessage methods for a much easier reading API. Added reading methods: readFloat , readBoolean , readSFixed32 , readSFixed64 . Added writing methods: writeUInt64 , writeSFixed32 , writeSFixed64 . Improved readDouble and readString to use native Buffer methods under Node. Improved readString and writeString to use HTML5 TextEncoder and TextDecoder where available. Made Pbf buffer argument optional. Added extensive docs and examples in the readme. Added an extensive test suite that brings test coverage up to 100%.","title":"Improvements"},{"location":"data-science/knime/images/node_modules/pbf/#breaking-api-changes_1","text":"Renamed readBuffer / writeBuffer to readBytes / writeBytes . Renamed readUInt32 / writeUInt32 to readFixed32 / writeFixed32 , etc. Renamed writeTaggedVarint to writeVarintField , etc. Changed writePacked signature from (type, tag, items) to (tag, type, items) .","title":"Breaking API changes"},{"location":"data-science/knime/images/node_modules/pbf/#bugfixes","text":"Fixed readVarint to handle varints bigger than 6 bytes. Fixed readSVarint to handle number bigger than 2^30 . Fixed writeVarint failing on some integers. Fixed writeVarint not throwing an error on numbers that are too big. Fixed readUInt64 always failing. Fixed writing to an empty buffer always failing.","title":"Bugfixes"},{"location":"data-science/knime/images/node_modules/potpack/","text":"potpack A tiny JavaScript library for packing 2D rectangles into a near-square container, which is useful for generating CSS sprites and WebGL textures. Similar to shelf-pack , but static (you can't add items once a layout is generated), and aims for maximal space utilization. A variation of algorithms used in rectpack2D and bin-pack , which are in turn based on this article by Blackpawn . Demo Example usage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import potpack from 'potpack' ; const boxes = [ { w : 300 , h : 50 }, { w : 100 , h : 200 }, ... ]; const { w , h , fill } = potpack ( boxes ); // w and h are resulting container's width and height; // fill is the space utilization value (0 to 1), higher is better // potpack mutates the boxes array: it's sorted by height, // and box objects are augmented with x, y coordinates: boxes [ 0 ]; // {w: 300, h: 50, x: 100, y: 0} boxes [ 1 ]; // {w: 100, h: 200, x: 0, y: 0} Install Install with NPM ( npm install potpack ) or Yarn ( yarn add potpack ), then: 1 2 3 4 5 // import as an ES module import potpack from 'potpack' ; // or require in Node / Browserify const potpack = require ( 'potpack' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/potpack@1.0.0/index.js\" ></ script >","title":"potpack"},{"location":"data-science/knime/images/node_modules/potpack/#potpack","text":"A tiny JavaScript library for packing 2D rectangles into a near-square container, which is useful for generating CSS sprites and WebGL textures. Similar to shelf-pack , but static (you can't add items once a layout is generated), and aims for maximal space utilization. A variation of algorithms used in rectpack2D and bin-pack , which are in turn based on this article by Blackpawn .","title":"potpack"},{"location":"data-science/knime/images/node_modules/potpack/#demo","text":"","title":"Demo"},{"location":"data-science/knime/images/node_modules/potpack/#example-usage","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import potpack from 'potpack' ; const boxes = [ { w : 300 , h : 50 }, { w : 100 , h : 200 }, ... ]; const { w , h , fill } = potpack ( boxes ); // w and h are resulting container's width and height; // fill is the space utilization value (0 to 1), higher is better // potpack mutates the boxes array: it's sorted by height, // and box objects are augmented with x, y coordinates: boxes [ 0 ]; // {w: 300, h: 50, x: 100, y: 0} boxes [ 1 ]; // {w: 100, h: 200, x: 0, y: 0}","title":"Example usage"},{"location":"data-science/knime/images/node_modules/potpack/#install","text":"Install with NPM ( npm install potpack ) or Yarn ( yarn add potpack ), then: 1 2 3 4 5 // import as an ES module import potpack from 'potpack' ; // or require in Node / Browserify const potpack = require ( 'potpack' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/potpack@1.0.0/index.js\" ></ script >","title":"Install"},{"location":"data-science/knime/images/node_modules/process-nextick-args/license/","text":"Copyright (c) 2015 Calvin Metcalf Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Copyright (c) 2015 Calvin Metcalf"},{"location":"data-science/knime/images/node_modules/process-nextick-args/license/#copyright-c-2015-calvin-metcalf","text":"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Copyright (c) 2015 Calvin Metcalf"},{"location":"data-science/knime/images/node_modules/process-nextick-args/readme/","text":"process-nextick-args 1 npm install --save process-nextick-args Always be able to pass arguments to process.nextTick, no matter the platform 1 2 3 4 5 var pna = require ( 'process-nextick-args' ); pna . nextTick ( function ( a , b , c ) { console . log ( a , b , c ); }, 'step' , 3 , 'profit' );","title":"Readme"},{"location":"data-science/knime/images/node_modules/process-nextick-args/readme/#process-nextick-args","text":"1 npm install --save process-nextick-args Always be able to pass arguments to process.nextTick, no matter the platform 1 2 3 4 5 var pna = require ( 'process-nextick-args' ); pna . nextTick ( function ( a , b , c ) { console . log ( a , b , c ); }, 'step' , 3 , 'profit' );","title":"process-nextick-args"},{"location":"data-science/knime/images/node_modules/protocol-buffers-schema/","text":"protocol-buffers-schema No nonsense protocol buffers schema parser written in Javascript 1 npm install protocol - buffers - schema Usage First save the following file as example.proto 1 2 3 4 5 6 7 8 9 10 11 12 13 syntax = \"proto2\" ; message Point { required int32 x = 1 ; required int32 y = 2 ; optional string label = 3 ; } message Line { required Point start = 1 ; required Point end = 2 ; optional string label = 3 ; } The run the following example 1 2 3 4 5 6 7 8 var fs = require ( 'fs' ) var schema = require ( 'protocol-buffers-schema' ) // pass a buffer or string to schema.parse var sch = schema . parse ( fs . readFileSync ( 'example.proto' )) // will print out the schema as a javascript object console . log ( sch ) Running the above example will print something like 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 { syntax : 2 , package : null , enums : [], messages : [{ name : 'Point' , enums : [], messages : [], options : {}, fields : [{ name : 'x' , type : 'int32' , tag : 1 , required : true , repeated : false , options : {} }, { name : 'y' , type : 'int32' , tag : 2 , required : true , repeated : false , options : {} }, { name : 'label' , type : 'string' , tag : 3 , required : false , repeated : false , options : {} }] }, { name : 'Line' , enums : [], messages : [], options : {}, fields : [{ name : 'start' , type : 'Point' , tag : 1 , required : true , repeated : false , options : {} }, { name : 'end' , type : 'Point' , tag : 2 , required : true , repeated : false , options : {} }, { name : 'label' , type : 'string' , tag : 3 , required : false , repeated : false , options : {} }] }], options : {} } API schema.parse(protobufSchemaBufferOrString) Parses a .proto schema into a javascript object schema.stringify(schema) Stringifies a parsed schema back into .proto format License MIT","title":"protocol-buffers-schema"},{"location":"data-science/knime/images/node_modules/protocol-buffers-schema/#protocol-buffers-schema","text":"No nonsense protocol buffers schema parser written in Javascript 1 npm install protocol - buffers - schema","title":"protocol-buffers-schema"},{"location":"data-science/knime/images/node_modules/protocol-buffers-schema/#usage","text":"First save the following file as example.proto 1 2 3 4 5 6 7 8 9 10 11 12 13 syntax = \"proto2\" ; message Point { required int32 x = 1 ; required int32 y = 2 ; optional string label = 3 ; } message Line { required Point start = 1 ; required Point end = 2 ; optional string label = 3 ; } The run the following example 1 2 3 4 5 6 7 8 var fs = require ( 'fs' ) var schema = require ( 'protocol-buffers-schema' ) // pass a buffer or string to schema.parse var sch = schema . parse ( fs . readFileSync ( 'example.proto' )) // will print out the schema as a javascript object console . log ( sch ) Running the above example will print something like 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 { syntax : 2 , package : null , enums : [], messages : [{ name : 'Point' , enums : [], messages : [], options : {}, fields : [{ name : 'x' , type : 'int32' , tag : 1 , required : true , repeated : false , options : {} }, { name : 'y' , type : 'int32' , tag : 2 , required : true , repeated : false , options : {} }, { name : 'label' , type : 'string' , tag : 3 , required : false , repeated : false , options : {} }] }, { name : 'Line' , enums : [], messages : [], options : {}, fields : [{ name : 'start' , type : 'Point' , tag : 1 , required : true , repeated : false , options : {} }, { name : 'end' , type : 'Point' , tag : 2 , required : true , repeated : false , options : {} }, { name : 'label' , type : 'string' , tag : 3 , required : false , repeated : false , options : {} }] }], options : {} }","title":"Usage"},{"location":"data-science/knime/images/node_modules/protocol-buffers-schema/#api","text":"","title":"API"},{"location":"data-science/knime/images/node_modules/protocol-buffers-schema/#schemaparseprotobufschemabufferorstring","text":"Parses a .proto schema into a javascript object","title":"schema.parse(protobufSchemaBufferOrString)"},{"location":"data-science/knime/images/node_modules/protocol-buffers-schema/#schemastringifyschema","text":"Stringifies a parsed schema back into .proto format","title":"schema.stringify(schema)"},{"location":"data-science/knime/images/node_modules/protocol-buffers-schema/#license","text":"MIT","title":"License"},{"location":"data-science/knime/images/node_modules/quickselect/","text":"quickselect A tiny and fast selection algorithm in JavaScript (specifically, Floyd-Rivest selection ). 1 quickselect ( array , k [, left , right , compareFn ]); Rearranges items so that all items in the [left, k] are the smallest. The k -th element will have the (k - left + 1) -th smallest value in [left, right] . array : the array to partially sort (in place) k : middle index for partial sorting (as defined above) left : left index of the range to sort ( 0 by default) right : right index (last index of the array by default) compareFn : compare function Example: 1 2 3 4 5 6 var arr = [ 65 , 28 , 59 , 33 , 21 , 56 , 22 , 95 , 50 , 12 , 90 , 53 , 28 , 77 , 39 ]; quickselect ( arr , 8 ); // arr is [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95] // ^^ middle index","title":"Index"},{"location":"data-science/knime/images/node_modules/quickselect/#quickselect","text":"A tiny and fast selection algorithm in JavaScript (specifically, Floyd-Rivest selection ). 1 quickselect ( array , k [, left , right , compareFn ]); Rearranges items so that all items in the [left, k] are the smallest. The k -th element will have the (k - left + 1) -th smallest value in [left, right] . array : the array to partially sort (in place) k : middle index for partial sorting (as defined above) left : left index of the range to sort ( 0 by default) right : right index (last index of the array by default) compareFn : compare function Example: 1 2 3 4 5 6 var arr = [ 65 , 28 , 59 , 33 , 21 , 56 , 22 , 95 , 50 , 12 , 90 , 53 , 28 , 77 , 39 ]; quickselect ( arr , 8 ); // arr is [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95] // ^^ middle index","title":"quickselect"},{"location":"data-science/knime/images/node_modules/readable-stream/","text":"readable-stream Node-core v8.11.1 streams for userland 1 npm install --save readable-stream Node-core streams for userland This package is a mirror of the Streams2 and Streams3 implementations in Node-core. Full documentation may be found on the Node.js website . If you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use readable-stream only and avoid the \"stream\" module in Node-core, for background see this blogpost . As of version 2.0.0 readable-stream uses semantic versioning. Streams Working Group readable-stream is maintained by the Streams Working Group, which oversees the development and maintenance of the Streams API within Node.js. The responsibilities of the Streams Working Group include: Addressing stream issues on the Node.js issue tracker. Authoring and editing stream documentation within the Node.js project. Reviewing changes to stream subclasses within the Node.js project. Redirecting changes to streams from the Node.js project to this project. Assisting in the implementation of stream providers within Node.js. Recommending versions of readable-stream to be included in Node.js. Messaging about the future of streams to give the community advance notice of changes. Team Members Chris Dickinson ( @chrisdickinson ) < christopher.s.dickinson@gmail.com > Release GPG key: 9554F04D7259F04124DE6B476D5A82AC7E37093B Calvin Metcalf ( @calvinmetcalf ) < calvin.metcalf@gmail.com > Release GPG key: F3EF5F62A87FC27A22E643F714CE4FF5015AA242 Rod Vagg ( @rvagg ) < rod@vagg.org > Release GPG key: DD8F2338BAE7501E3DD5AC78C273792F7D83545D Sam Newman ( @sonewman ) < newmansam@outlook.com > Mathias Buus ( @mafintosh ) < mathiasbuus@gmail.com > Domenic Denicola ( @domenic ) < d@domenic.me > Matteo Collina ( @mcollina ) < matteo.collina@gmail.com > Release GPG key: 3ABC01543F22DD2239285CDD818674489FBC127E Irina Shestak ( @lrlna ) < shestak.irina@gmail.com >","title":"readable-stream"},{"location":"data-science/knime/images/node_modules/readable-stream/#readable-stream","text":"Node-core v8.11.1 streams for userland 1 npm install --save readable-stream Node-core streams for userland This package is a mirror of the Streams2 and Streams3 implementations in Node-core. Full documentation may be found on the Node.js website . If you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use readable-stream only and avoid the \"stream\" module in Node-core, for background see this blogpost . As of version 2.0.0 readable-stream uses semantic versioning.","title":"readable-stream"},{"location":"data-science/knime/images/node_modules/readable-stream/#streams-working-group","text":"readable-stream is maintained by the Streams Working Group, which oversees the development and maintenance of the Streams API within Node.js. The responsibilities of the Streams Working Group include: Addressing stream issues on the Node.js issue tracker. Authoring and editing stream documentation within the Node.js project. Reviewing changes to stream subclasses within the Node.js project. Redirecting changes to streams from the Node.js project to this project. Assisting in the implementation of stream providers within Node.js. Recommending versions of readable-stream to be included in Node.js. Messaging about the future of streams to give the community advance notice of changes.","title":"Streams Working Group"},{"location":"data-science/knime/images/node_modules/readable-stream/#team-members","text":"Chris Dickinson ( @chrisdickinson ) < christopher.s.dickinson@gmail.com > Release GPG key: 9554F04D7259F04124DE6B476D5A82AC7E37093B Calvin Metcalf ( @calvinmetcalf ) < calvin.metcalf@gmail.com > Release GPG key: F3EF5F62A87FC27A22E643F714CE4FF5015AA242 Rod Vagg ( @rvagg ) < rod@vagg.org > Release GPG key: DD8F2338BAE7501E3DD5AC78C273792F7D83545D Sam Newman ( @sonewman ) < newmansam@outlook.com > Mathias Buus ( @mafintosh ) < mathiasbuus@gmail.com > Domenic Denicola ( @domenic ) < d@domenic.me > Matteo Collina ( @mcollina ) < matteo.collina@gmail.com > Release GPG key: 3ABC01543F22DD2239285CDD818674489FBC127E Irina Shestak ( @lrlna ) < shestak.irina@gmail.com >","title":"Team Members"},{"location":"data-science/knime/images/node_modules/readable-stream/CONTRIBUTING/","text":"Developer's Certificate of Origin 1.1 By making a contribution to this project, I certify that: (a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or (b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or (c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it. (d) I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved. Moderation Policy The Node.js Moderation Policy applies to this WG. Code of Conduct The Node.js Code of Conduct applies to this WG. https://github.com/nodejs/node/blob/master/CODE_OF_CONDUCT.md https://github.com/nodejs/TSC/blob/master/Moderation-Policy.md","title":"Developer's Certificate of Origin 1.1"},{"location":"data-science/knime/images/node_modules/readable-stream/CONTRIBUTING/#developers-certificate-of-origin-11","text":"By making a contribution to this project, I certify that: (a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or (b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or (c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it. (d) I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this project or the open source license(s) involved.","title":"Developer's Certificate of Origin 1.1"},{"location":"data-science/knime/images/node_modules/readable-stream/CONTRIBUTING/#moderation-policy","text":"The Node.js Moderation Policy applies to this WG.","title":"Moderation Policy"},{"location":"data-science/knime/images/node_modules/readable-stream/CONTRIBUTING/#code-of-conduct","text":"The Node.js Code of Conduct applies to this WG. https://github.com/nodejs/node/blob/master/CODE_OF_CONDUCT.md https://github.com/nodejs/TSC/blob/master/Moderation-Policy.md","title":"Code of Conduct"},{"location":"data-science/knime/images/node_modules/readable-stream/GOVERNANCE/","text":"Streams Working Group The Node.js Streams is jointly governed by a Working Group (WG) that is responsible for high-level guidance of the project. The WG has final authority over this project including: Technical direction Project governance and process (including this policy) Contribution policy GitHub repository hosting Conduct guidelines Maintaining the list of additional Collaborators For the current list of WG members, see the project README.md . Collaborators The readable-stream GitHub repository is maintained by the WG and additional Collaborators who are added by the WG on an ongoing basis. Individuals making significant and valuable contributions are made Collaborators and given commit-access to the project. These individuals are identified by the WG and their addition as Collaborators is discussed during the WG meeting. Note: If you make a significant contribution and are not considered for commit-access log an issue or contact a WG member directly and it will be brought up in the next WG meeting. Modifications of the contents of the readable-stream repository are made on a collaborative basis. Anybody with a GitHub account may propose a modification via pull request and it will be considered by the project Collaborators. All pull requests must be reviewed and accepted by a Collaborator with sufficient expertise who is able to take full responsibility for the change. In the case of pull requests proposed by an existing Collaborator, an additional Collaborator is required for sign-off. Consensus should be sought if additional Collaborators participate and there is disagreement around a particular modification. See Consensus Seeking Process below for further detail on the consensus model used for governance. Collaborators may opt to elevate significant or controversial modifications, or modifications that have not found consensus to the WG for discussion by assigning the WG-agenda tag to a pull request or issue. The WG should serve as the final arbiter where required. For the current list of Collaborators, see the project README.md . WG Membership WG seats are not time-limited. There is no fixed size of the WG. However, the expected target is between 6 and 12, to ensure adequate coverage of important areas of expertise, balanced with the ability to make decisions efficiently. There is no specific set of requirements or qualifications for WG membership beyond these rules. The WG may add additional members to the WG by unanimous consensus. A WG member may be removed from the WG by voluntary resignation, or by unanimous consensus of all other WG members. Changes to WG membership should be posted in the agenda, and may be suggested as any other agenda item (see \"WG Meetings\" below). If an addition or removal is proposed during a meeting, and the full WG is not in attendance to participate, then the addition or removal is added to the agenda for the subsequent meeting. This is to ensure that all members are given the opportunity to participate in all membership decisions. If a WG member is unable to attend a meeting where a planned membership decision is being made, then their consent is assumed. No more than 1/3 of the WG members may be affiliated with the same employer. If removal or resignation of a WG member, or a change of employment by a WG member, creates a situation where more than 1/3 of the WG membership shares an employer, then the situation must be immediately remedied by the resignation or removal of one or more WG members affiliated with the over-represented employer(s). WG Meetings The WG meets occasionally on a Google Hangout On Air. A designated moderator approved by the WG runs the meeting. Each meeting should be published to YouTube. Items are added to the WG agenda that are considered contentious or are modifications of governance, contribution policy, WG membership, or release process. The intention of the agenda is not to approve or review all patches; that should happen continuously on GitHub and be handled by the larger group of Collaborators. Any community member or contributor can ask that something be added to the next meeting's agenda by logging a GitHub Issue. Any Collaborator, WG member or the moderator can add the item to the agenda by adding the WG-agenda tag to the issue. Prior to each WG meeting the moderator will share the Agenda with members of the WG. WG members can add any items they like to the agenda at the beginning of each meeting. The moderator and the WG cannot veto or remove items. The WG may invite persons or representatives from certain projects to participate in a non-voting capacity. The moderator is responsible for summarizing the discussion of each agenda item and sends it as a pull request after the meeting. Consensus Seeking Process The WG follows a Consensus Seeking decision-making model. When an agenda item has appeared to reach a consensus the moderator will ask \"Does anyone object?\" as a final call for dissent from the consensus. If an agenda item cannot reach a consensus a WG member can call for either a closing vote or a vote to table the issue to the next meeting. The call for a vote must be seconded by a majority of the WG or else the discussion will continue. Simple majority wins. Note that changes to WG membership require a majority consensus. See \"WG Membership\" above.","title":"GOVERNANCE"},{"location":"data-science/knime/images/node_modules/readable-stream/GOVERNANCE/#streams-working-group","text":"The Node.js Streams is jointly governed by a Working Group (WG) that is responsible for high-level guidance of the project. The WG has final authority over this project including: Technical direction Project governance and process (including this policy) Contribution policy GitHub repository hosting Conduct guidelines Maintaining the list of additional Collaborators For the current list of WG members, see the project README.md .","title":"Streams Working Group"},{"location":"data-science/knime/images/node_modules/readable-stream/GOVERNANCE/#collaborators","text":"The readable-stream GitHub repository is maintained by the WG and additional Collaborators who are added by the WG on an ongoing basis. Individuals making significant and valuable contributions are made Collaborators and given commit-access to the project. These individuals are identified by the WG and their addition as Collaborators is discussed during the WG meeting. Note: If you make a significant contribution and are not considered for commit-access log an issue or contact a WG member directly and it will be brought up in the next WG meeting. Modifications of the contents of the readable-stream repository are made on a collaborative basis. Anybody with a GitHub account may propose a modification via pull request and it will be considered by the project Collaborators. All pull requests must be reviewed and accepted by a Collaborator with sufficient expertise who is able to take full responsibility for the change. In the case of pull requests proposed by an existing Collaborator, an additional Collaborator is required for sign-off. Consensus should be sought if additional Collaborators participate and there is disagreement around a particular modification. See Consensus Seeking Process below for further detail on the consensus model used for governance. Collaborators may opt to elevate significant or controversial modifications, or modifications that have not found consensus to the WG for discussion by assigning the WG-agenda tag to a pull request or issue. The WG should serve as the final arbiter where required. For the current list of Collaborators, see the project README.md .","title":"Collaborators"},{"location":"data-science/knime/images/node_modules/readable-stream/GOVERNANCE/#wg-membership","text":"WG seats are not time-limited. There is no fixed size of the WG. However, the expected target is between 6 and 12, to ensure adequate coverage of important areas of expertise, balanced with the ability to make decisions efficiently. There is no specific set of requirements or qualifications for WG membership beyond these rules. The WG may add additional members to the WG by unanimous consensus. A WG member may be removed from the WG by voluntary resignation, or by unanimous consensus of all other WG members. Changes to WG membership should be posted in the agenda, and may be suggested as any other agenda item (see \"WG Meetings\" below). If an addition or removal is proposed during a meeting, and the full WG is not in attendance to participate, then the addition or removal is added to the agenda for the subsequent meeting. This is to ensure that all members are given the opportunity to participate in all membership decisions. If a WG member is unable to attend a meeting where a planned membership decision is being made, then their consent is assumed. No more than 1/3 of the WG members may be affiliated with the same employer. If removal or resignation of a WG member, or a change of employment by a WG member, creates a situation where more than 1/3 of the WG membership shares an employer, then the situation must be immediately remedied by the resignation or removal of one or more WG members affiliated with the over-represented employer(s).","title":"WG Membership"},{"location":"data-science/knime/images/node_modules/readable-stream/GOVERNANCE/#wg-meetings","text":"The WG meets occasionally on a Google Hangout On Air. A designated moderator approved by the WG runs the meeting. Each meeting should be published to YouTube. Items are added to the WG agenda that are considered contentious or are modifications of governance, contribution policy, WG membership, or release process. The intention of the agenda is not to approve or review all patches; that should happen continuously on GitHub and be handled by the larger group of Collaborators. Any community member or contributor can ask that something be added to the next meeting's agenda by logging a GitHub Issue. Any Collaborator, WG member or the moderator can add the item to the agenda by adding the WG-agenda tag to the issue. Prior to each WG meeting the moderator will share the Agenda with members of the WG. WG members can add any items they like to the agenda at the beginning of each meeting. The moderator and the WG cannot veto or remove items. The WG may invite persons or representatives from certain projects to participate in a non-voting capacity. The moderator is responsible for summarizing the discussion of each agenda item and sends it as a pull request after the meeting.","title":"WG Meetings"},{"location":"data-science/knime/images/node_modules/readable-stream/GOVERNANCE/#consensus-seeking-process","text":"The WG follows a Consensus Seeking decision-making model. When an agenda item has appeared to reach a consensus the moderator will ask \"Does anyone object?\" as a final call for dissent from the consensus. If an agenda item cannot reach a consensus a WG member can call for either a closing vote or a vote to table the issue to the next meeting. The call for a vote must be seconded by a majority of the WG or else the discussion will continue. Simple majority wins. Note that changes to WG membership require a majority consensus. See \"WG Membership\" above.","title":"Consensus Seeking Process"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/","text":"streams WG Meeting 2015-01-30 Links Google Hangouts Video : http://www.youtube.com/watch?v=I9nDOSGfwZg GitHub Issue : https://github.com/iojs/readable-stream/issues/106 Original Minutes Google Doc : https://docs.google.com/document/d/17aTgLnjMXIrfjgNaTUnHQO7m3xgzHR2VXBTmi03Qii4/ Agenda Extracted from https://github.com/iojs/readable-stream/labels/wg-agenda prior to meeting. adopt a charter #105 release and versioning strategy #101 simpler stream creation #102 proposal: deprecate implicit flowing of streams #99 Minutes adopt a charter group: +1's all around What versioning scheme should be adopted? group: +1\u2019s 3.0.0 domenic+group: pulling in patches from other sources where appropriate mikeal: version independently, suggesting versions for io.js mikeal+domenic: work with TC to notify in advance of changes simpler stream creation streamline creation of streams sam: streamline creation of streams domenic: nice simple solution posted but, we lose the opportunity to change the model may not be backwards incompatible (double check keys) action item: domenic will check remove implicit flowing of streams on(\u2018data\u2019) add isFlowing / isPaused mikeal: worrying that we\u2019re documenting polyfill methods \u2013 confuses users domenic: more reflective API is probably good, with warning labels for users new section for mad scientists (reflective stream access) calvin: name the \u201cthird state\u201d mikeal: maybe borrow the name from whatwg? domenic: we\u2019re missing the \u201cthird state\u201d consensus: kind of difficult to name the third state mikeal: figure out differences in states / compat mathias: always flow on data \u2013 eliminates third state explore what it breaks action items: * ask isaac for ability to list packages by what public io.js APIs they use (esp. Stream) * ask rod/build for infrastructure * chris : explore the \u201cflow on data\u201d approach * add isPaused/isFlowing * add new docs section * move isPaused to that section","title":"streams WG Meeting 2015-01-30"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/#streams-wg-meeting-2015-01-30","text":"","title":"streams WG Meeting 2015-01-30"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/#links","text":"Google Hangouts Video : http://www.youtube.com/watch?v=I9nDOSGfwZg GitHub Issue : https://github.com/iojs/readable-stream/issues/106 Original Minutes Google Doc : https://docs.google.com/document/d/17aTgLnjMXIrfjgNaTUnHQO7m3xgzHR2VXBTmi03Qii4/","title":"Links"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/#agenda","text":"Extracted from https://github.com/iojs/readable-stream/labels/wg-agenda prior to meeting. adopt a charter #105 release and versioning strategy #101 simpler stream creation #102 proposal: deprecate implicit flowing of streams #99","title":"Agenda"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/#minutes","text":"","title":"Minutes"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/#adopt-a-charter","text":"group: +1's all around","title":"adopt a charter"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/#what-versioning-scheme-should-be-adopted","text":"group: +1\u2019s 3.0.0 domenic+group: pulling in patches from other sources where appropriate mikeal: version independently, suggesting versions for io.js mikeal+domenic: work with TC to notify in advance of changes simpler stream creation","title":"What versioning scheme should be adopted?"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/#streamline-creation-of-streams","text":"sam: streamline creation of streams domenic: nice simple solution posted but, we lose the opportunity to change the model may not be backwards incompatible (double check keys) action item: domenic will check","title":"streamline creation of streams"},{"location":"data-science/knime/images/node_modules/readable-stream/doc/wg-meetings/2015-01-30/#remove-implicit-flowing-of-streams-ondata","text":"add isFlowing / isPaused mikeal: worrying that we\u2019re documenting polyfill methods \u2013 confuses users domenic: more reflective API is probably good, with warning labels for users new section for mad scientists (reflective stream access) calvin: name the \u201cthird state\u201d mikeal: maybe borrow the name from whatwg? domenic: we\u2019re missing the \u201cthird state\u201d consensus: kind of difficult to name the third state mikeal: figure out differences in states / compat mathias: always flow on data \u2013 eliminates third state explore what it breaks action items: * ask isaac for ability to list packages by what public io.js APIs they use (esp. Stream) * ask rod/build for infrastructure * chris : explore the \u201cflow on data\u201d approach * add isPaused/isFlowing * add new docs section * move isPaused to that section","title":"remove implicit flowing of streams on(\u2018data\u2019)"},{"location":"data-science/knime/images/node_modules/redeyed/","text":"redeyed Add color to your JavaScript! Red Eyed Tree Frog (Agalychnis callidryas) What? Takes JavaScript code, along with a config and returns the original code with tokens wrapped and/or replaced as configured. Where? server side using nodejs in the browser What for? One usecase is adding metadata to your code that can then be used to apply syntax highlighting. How? copy the config.js and edit it in order to specify how certain tokens are to be surrounded/replaced replace the undefined of each token you want to configure with one of the following {String} config 'before:after' wraps the token inside before/after {Object} config { _before: 'before', _after: 'after' } wraps token inside before/after Missing before and after resolution for {String} and {Object} config For the {String} and {Object} configurations, 'before' or 'after' may be omitted: {String} : 'before:' (omitting 'after') ':after' (omitting 'before') {Object} : { _before: 'before' } (omitting '_after') { _after: 'after' } (omitting '_before') In these cases the missing half is resolved as follows: from the parent._default (i.e., Keyword._default ) if found otherwise from the config._default if found otherwise '' (empty string) {Function} config function (tokenString, info) { return {String}|{Object}; } Inputs tokenString: the content of the token that is currently being processed info: an object with the following structure 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 { // {Int} // the index of the token being processed inside tokens tokenIndex // {Array} // all tokens that are being processed including comments // (i.e. the result of merging esprima tokens and comments) , tokens // {Object} // the abstract syntax tree of the parsed code , ast // {String} // the code that was parsed (same string as the one passed to redeyed(code ..) , code } In most cases the tokenString is all you need. The extra info object is passed in case you need to gather more information about the token 's surroundings in order to decide how to transform it. See: replace-log-example Output You can return a {String} or an {Object} from a {Function} config. when returning a {String}, the token value will be replaced with it when returning an {Object}, it should be of the following form: 1 2 3 4 5 6 7 8 9 10 { // {String} // the string that should be substituted for the value of the current and all skipped tokens replacement // {Object} (Token) // the token after which processing should continue // all tokens in between the current one and this one inclusive will be ignored , skipPastToken } Transforming JavaScript code redeyed(code, config[, opts]) Invoke redeyed with your config uration, a code snippet and maybe opts as in the below example: 1 2 3 4 5 6 7 8 9 10 11 12 var redeyed = require ( 'redeyed' ) , config = require ( './path/to/config' ) , code = 'var a = 3;' , result ; // redeyed will throw an error (caused by the esprima parser) if the code has invalid javascript try { result = redeyed ( code , config ); console . log ( result . code ); } catch ( err ) { console . error ( err ); } opts : 1 2 3 4 5 { // {Boolean} // if true `result.code` is not assigned and therefore `undefined` // if false (default) `result.code` property contains the result of `split.join` nojoin : true | false } return value : 1 2 3 4 5 6 { ast , tokens , comments , splits , code } ast {Array} : abstract syntax tree as returned by esprima parse tokens {Array} : tokens provided by esprima (excluding comments) comments {Array} : block and line comments as provided by esprima splits {Array} : code pieces split up, some of which where transformed as configured code {String} : transformed code, same as splits.join('') unless this step has been skipped (see opts) Browser Support AMD Ensure to include esprima as one of your dependencies 1 2 3 define ([ 'redeyed' ], function ( redeyed ) { [ .. ] }); Attached to global window object The redeyed {Function} will be exposed globally as window.redeyed - big surprise! 1 2 < script type = \"text/javascript\" src = \"https://raw.github.com/ariya/esprima/master/esprima.js\" ></ script > < script type = \"text/javascript\" src = \"path/to/redeyed.js\" ></ script > redeyed in the wild cardinal : Syntax highlights JavaScript code with ANSI colors to be printed to the terminal peacock : JavaScript syntax highlighter that generates html that is compatible with pygments styles. Examples npm explore redeyed; npm demo will let you try the browser example npm explore redeyed; npm demo-log will let you try the replace log example","title":"redeyed [![build status](https://secure.travis-ci.org/thlorenz/redeyed.png?branch=master)](http://travis-ci.org/thlorenz/redeyed)"},{"location":"data-science/knime/images/node_modules/redeyed/#redeyed","text":"Add color to your JavaScript! Red Eyed Tree Frog (Agalychnis callidryas)","title":"redeyed"},{"location":"data-science/knime/images/node_modules/redeyed/#what","text":"Takes JavaScript code, along with a config and returns the original code with tokens wrapped and/or replaced as configured.","title":"What?"},{"location":"data-science/knime/images/node_modules/redeyed/#where","text":"server side using nodejs in the browser","title":"Where?"},{"location":"data-science/knime/images/node_modules/redeyed/#what-for","text":"One usecase is adding metadata to your code that can then be used to apply syntax highlighting.","title":"What for?"},{"location":"data-science/knime/images/node_modules/redeyed/#how","text":"copy the config.js and edit it in order to specify how certain tokens are to be surrounded/replaced replace the undefined of each token you want to configure with one of the following","title":"How?"},{"location":"data-science/knime/images/node_modules/redeyed/#string-config","text":"'before:after' wraps the token inside before/after","title":"{String} config"},{"location":"data-science/knime/images/node_modules/redeyed/#object-config","text":"{ _before: 'before', _after: 'after' } wraps token inside before/after","title":"{Object} config"},{"location":"data-science/knime/images/node_modules/redeyed/#missing-before-and-after-resolution-for-string-and-object-config","text":"For the {String} and {Object} configurations, 'before' or 'after' may be omitted: {String} : 'before:' (omitting 'after') ':after' (omitting 'before') {Object} : { _before: 'before' } (omitting '_after') { _after: 'after' } (omitting '_before') In these cases the missing half is resolved as follows: from the parent._default (i.e., Keyword._default ) if found otherwise from the config._default if found otherwise '' (empty string)","title":"Missing before and after resolution for {String} and {Object} config"},{"location":"data-science/knime/images/node_modules/redeyed/#function-config","text":"function (tokenString, info) { return {String}|{Object}; }","title":"{Function} config"},{"location":"data-science/knime/images/node_modules/redeyed/#inputs","text":"tokenString: the content of the token that is currently being processed info: an object with the following structure 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 { // {Int} // the index of the token being processed inside tokens tokenIndex // {Array} // all tokens that are being processed including comments // (i.e. the result of merging esprima tokens and comments) , tokens // {Object} // the abstract syntax tree of the parsed code , ast // {String} // the code that was parsed (same string as the one passed to redeyed(code ..) , code } In most cases the tokenString is all you need. The extra info object is passed in case you need to gather more information about the token 's surroundings in order to decide how to transform it. See: replace-log-example","title":"Inputs"},{"location":"data-science/knime/images/node_modules/redeyed/#output","text":"You can return a {String} or an {Object} from a {Function} config. when returning a {String}, the token value will be replaced with it when returning an {Object}, it should be of the following form: 1 2 3 4 5 6 7 8 9 10 { // {String} // the string that should be substituted for the value of the current and all skipped tokens replacement // {Object} (Token) // the token after which processing should continue // all tokens in between the current one and this one inclusive will be ignored , skipPastToken }","title":"Output"},{"location":"data-science/knime/images/node_modules/redeyed/#transforming-javascript-code","text":"redeyed(code, config[, opts]) Invoke redeyed with your config uration, a code snippet and maybe opts as in the below example: 1 2 3 4 5 6 7 8 9 10 11 12 var redeyed = require ( 'redeyed' ) , config = require ( './path/to/config' ) , code = 'var a = 3;' , result ; // redeyed will throw an error (caused by the esprima parser) if the code has invalid javascript try { result = redeyed ( code , config ); console . log ( result . code ); } catch ( err ) { console . error ( err ); } opts : 1 2 3 4 5 { // {Boolean} // if true `result.code` is not assigned and therefore `undefined` // if false (default) `result.code` property contains the result of `split.join` nojoin : true | false } return value : 1 2 3 4 5 6 { ast , tokens , comments , splits , code } ast {Array} : abstract syntax tree as returned by esprima parse tokens {Array} : tokens provided by esprima (excluding comments) comments {Array} : block and line comments as provided by esprima splits {Array} : code pieces split up, some of which where transformed as configured code {String} : transformed code, same as splits.join('') unless this step has been skipped (see opts)","title":"Transforming JavaScript code"},{"location":"data-science/knime/images/node_modules/redeyed/#browser-support","text":"","title":"Browser Support"},{"location":"data-science/knime/images/node_modules/redeyed/#amd","text":"Ensure to include esprima as one of your dependencies 1 2 3 define ([ 'redeyed' ], function ( redeyed ) { [ .. ] });","title":"AMD"},{"location":"data-science/knime/images/node_modules/redeyed/#attached-to-global-window-object","text":"The redeyed {Function} will be exposed globally as window.redeyed - big surprise! 1 2 < script type = \"text/javascript\" src = \"https://raw.github.com/ariya/esprima/master/esprima.js\" ></ script > < script type = \"text/javascript\" src = \"path/to/redeyed.js\" ></ script >","title":"Attached to global window object"},{"location":"data-science/knime/images/node_modules/redeyed/#redeyed-in-the-wild","text":"cardinal : Syntax highlights JavaScript code with ANSI colors to be printed to the terminal peacock : JavaScript syntax highlighter that generates html that is compatible with pygments styles.","title":"redeyed in the wild"},{"location":"data-science/knime/images/node_modules/redeyed/#examples","text":"npm explore redeyed; npm demo will let you try the browser example npm explore redeyed; npm demo-log will let you try the replace log example","title":"Examples"},{"location":"data-science/knime/images/node_modules/redeyed/Changelog/","text":"Changelog 0.4 browser support 0.3 passing more information into {Function} config API change: returning {Object} with code, ast, comments and tokens attached instead of just a code {String} comments support 0.2 upgrade to Esprima 1.0.0 0.1 first working version","title":"Changelog"},{"location":"data-science/knime/images/node_modules/redeyed/Changelog/#changelog","text":"","title":"Changelog"},{"location":"data-science/knime/images/node_modules/redeyed/Changelog/#04","text":"browser support","title":"0.4"},{"location":"data-science/knime/images/node_modules/redeyed/Changelog/#03","text":"passing more information into {Function} config API change: returning {Object} with code, ast, comments and tokens attached instead of just a code {String} comments support","title":"0.3"},{"location":"data-science/knime/images/node_modules/redeyed/Changelog/#02","text":"upgrade to Esprima 1.0.0","title":"0.2"},{"location":"data-science/knime/images/node_modules/redeyed/Changelog/#01","text":"first working version","title":"0.1"},{"location":"data-science/knime/images/node_modules/resolve-protobuf-schema/","text":"resolve-protobuf-schema Read a protobuf schema from the disk, parse it and resolve all imports 1 npm install resolve-protobuf-schema Usage Store the following example protobuf schema in test.proto 1 2 3 message Test { optional string test = 1; } Then run 1 2 var resolve = require ( 'resolve-protobuf-schema' ) console . log ( resolve . sync ( 'test.proto' )) // prints the parsed schema Schema imports will resolved as well 1 2 3 4 5 import \"./test.proto\" message AnotherTest { optional string test = 1 ; } 1 console . log ( resolve . sync ( './another-test.proto' )) // will print a combined parsed schema API resolve(path, cb) read and resolve a schema resolve.sync(path) sync version of resolve License MIT","title":"resolve-protobuf-schema"},{"location":"data-science/knime/images/node_modules/resolve-protobuf-schema/#resolve-protobuf-schema","text":"Read a protobuf schema from the disk, parse it and resolve all imports 1 npm install resolve-protobuf-schema","title":"resolve-protobuf-schema"},{"location":"data-science/knime/images/node_modules/resolve-protobuf-schema/#usage","text":"Store the following example protobuf schema in test.proto 1 2 3 message Test { optional string test = 1; } Then run 1 2 var resolve = require ( 'resolve-protobuf-schema' ) console . log ( resolve . sync ( 'test.proto' )) // prints the parsed schema Schema imports will resolved as well 1 2 3 4 5 import \"./test.proto\" message AnotherTest { optional string test = 1 ; } 1 console . log ( resolve . sync ( './another-test.proto' )) // will print a combined parsed schema","title":"Usage"},{"location":"data-science/knime/images/node_modules/resolve-protobuf-schema/#api","text":"resolve(path, cb) read and resolve a schema resolve.sync(path) sync version of resolve","title":"API"},{"location":"data-science/knime/images/node_modules/resolve-protobuf-schema/#license","text":"MIT","title":"License"},{"location":"data-science/knime/images/node_modules/rw/","text":"rw - Now stdin and stdout are files. How do you read a file from stdin? If you thought, 1 var contents = fs . readFileSync ( \"/dev/stdin\" , \"utf8\" ); you\u2019d be wrong, because Node only reads up to the size of the file reported by fs.stat rather than reading until it receives an EOF. So, if you redirect a file to your program ( cat file | program ), you\u2019ll only read the first 65,536 bytes of your file. Oops. What about writing a file to stdout? If you thought, 1 fs . writeFileSync ( \"/dev/stdout\" , contents , \"utf8\" ); you\u2019d also be wrong, because this tries to close stdout, so you get this error: 1 2 3 Error : UNKNOWN , unknown error at Object . fs . writeSync ( fs . js : 528 : 18 ) at Object . fs . writeFileSync ( fs . js : 975 : 21 ) (Also, this doesn\u2019t work on Windows, because Windows doesn\u2019t support /dev/stdout, /dev/stdin and /dev/stderr!) Shucks. So what should you do? You could use a different pattern for reading from stdin: 1 2 3 4 5 6 var chunks = []; process . stdin . on ( \"data\" , function ( chunk ) { chunks . push ( chunk ); }) . on ( \"end\" , function () { console . log ( chunks . join ( \"\" ). length ); }) . setEncoding ( \"utf8\" ); But that\u2019s a pain, since now your code has two different code paths for reading inputs depending on whether you\u2019re reading a real file or stdin. And the code gets even more complex if you want to read that file synchronously . You could also try a different pattern for writing to stdout: 1 process . stdout . write ( contents ); Or even: 1 console . log ( contents ); But if you try to pipe your output to head , you\u2019ll get this error: 1 2 3 Error : write EPIPE at errnoException ( net . js : 904 : 11 ) at Object . afterWrite ( net . js : 720 : 19 ) Huh. The rw module fixes these problems. It provides an interface just like readFile, readFileSync, writeFile and writeFileSync, but with implementations that work the way you expect on stdin and stdout. If you use these methods on files other than /dev/stdin or /dev/stdout, they simply delegate to the fs methods, so you can trust that they behave identically to the methods you\u2019re used to. For example, now you can read stdin synchronously like so: 1 var contents = rw . readFileSync ( \"/dev/stdin\" , \"utf8\" ); Or to write to stdout: 1 rw . writeFileSync ( \"/dev/stdout\" , contents , \"utf8\" ); And rw automatically squashes EPIPE errors, so you can pipe the output of your program to head and you won\u2019t get a spurious stack trace. To install, npm install rw . Note If you want to read synchronously from stdin using readFileSync , you cannot also use process.stdin in the same program. Likewise, if you want to write synchronously to stdout or stderr using writeFileSync , you cannot use process.stdout or process.stderr, respectively. (This includes using console.log and the like!) Failure to heed this warning may result in error: EAGAIN, resource temporarily unavailable. Unfortunately, it does not appear possible for this library to fix this issue automatically, so please use caution. Only the asynchronous methods readFile and writeFile are supported on Windows. Node has no synchronous API for reading from process. stdin or writing to process. stdout or process. stderr , so you\u2019re out of luck! API Reference # rw. readFile ( path [, options ], callback ) Reads the file at the specified path completely into memory, invoking the specified callback once the data is available and the file is closed. The callback is invoked with two arguments: the error that occurred during read (hopefully null), and the read data. If options is a string, it specifies the encoding to use, in which case the read data will be a string; otherwise options is an object, and may specify encoding and flag properties. This method is a drop-in replacement for fs.readFile and fixes the behavior of special files such as /dev/stdin. # rw. readFileSync ( path [, options ]) Reads the file at the specified path completely into memory, synchronously, returning the data. If an error occurred during read, this function throws an error instead. If options is a string, it specifies the encoding to use, in which case the read data will be a string; otherwise options is an object, and may specify encoding and flag properties. This method is a drop-in replacement for fs.readFileSync and fixes the behavior of special files such as /dev/stdin. # rw. writeFile ( path , data [, options ], callback ) Writes the specified data (completely in memory) to a file at the specified path , invoking the specified callback once the data is completely written and the file is closed. The callback is invoked with a single argument: the error that occurred during write (hopefully null). If options is a string, it specifies the encoding to use, in which case the data must be a string; otherwise options is an object, and may specify encoding, mode and flag properties. This method is a drop-in replacement for fs.writeFile and fixes the behavior of special files such as /dev/stdout. # rw. writeFileSync ( path , data [, options ]) Writes the specified data (completely in memory) to a file at the specified path , synchronously, returning once the data is completely written and the file is closed. Throws an error if one occurs during write. If options is a string, it specifies the encoding to use, in which case the data must be a string; otherwise options is an object, and may specify encoding, mode and flag properties. This method is a drop-in replacement for fs.writeFileSync and fixes the behavior of special files such as /dev/stdout. # rw.dash. readFile ( path [, options ], callback ) Equivalent to rw.readFile , except treats a path of - as /dev/stdin . Useful for command-line arguments. # rw.dash. readFileSync ( path [, options ]) Equivalent to rw.readFileSync , except treats a path of - as /dev/stdin . Useful for command-line arguments. # rw.dash. writeFile ( path , data [, options ], callback ) Equivalent to rw.writeFile , except treats a path of - as /dev/stdout . Useful for command-line arguments. # rw.dash. writeFileSync ( path , data [, options ]) Equivalent to rw.writeFileSync , except treats a path of - as /dev/stdout . Useful for command-line arguments.","title":"rw - Now stdin and stdout are files."},{"location":"data-science/knime/images/node_modules/rw/#rw-now-stdin-and-stdout-are-files","text":"How do you read a file from stdin? If you thought, 1 var contents = fs . readFileSync ( \"/dev/stdin\" , \"utf8\" ); you\u2019d be wrong, because Node only reads up to the size of the file reported by fs.stat rather than reading until it receives an EOF. So, if you redirect a file to your program ( cat file | program ), you\u2019ll only read the first 65,536 bytes of your file. Oops. What about writing a file to stdout? If you thought, 1 fs . writeFileSync ( \"/dev/stdout\" , contents , \"utf8\" ); you\u2019d also be wrong, because this tries to close stdout, so you get this error: 1 2 3 Error : UNKNOWN , unknown error at Object . fs . writeSync ( fs . js : 528 : 18 ) at Object . fs . writeFileSync ( fs . js : 975 : 21 ) (Also, this doesn\u2019t work on Windows, because Windows doesn\u2019t support /dev/stdout, /dev/stdin and /dev/stderr!) Shucks. So what should you do? You could use a different pattern for reading from stdin: 1 2 3 4 5 6 var chunks = []; process . stdin . on ( \"data\" , function ( chunk ) { chunks . push ( chunk ); }) . on ( \"end\" , function () { console . log ( chunks . join ( \"\" ). length ); }) . setEncoding ( \"utf8\" ); But that\u2019s a pain, since now your code has two different code paths for reading inputs depending on whether you\u2019re reading a real file or stdin. And the code gets even more complex if you want to read that file synchronously . You could also try a different pattern for writing to stdout: 1 process . stdout . write ( contents ); Or even: 1 console . log ( contents ); But if you try to pipe your output to head , you\u2019ll get this error: 1 2 3 Error : write EPIPE at errnoException ( net . js : 904 : 11 ) at Object . afterWrite ( net . js : 720 : 19 ) Huh. The rw module fixes these problems. It provides an interface just like readFile, readFileSync, writeFile and writeFileSync, but with implementations that work the way you expect on stdin and stdout. If you use these methods on files other than /dev/stdin or /dev/stdout, they simply delegate to the fs methods, so you can trust that they behave identically to the methods you\u2019re used to. For example, now you can read stdin synchronously like so: 1 var contents = rw . readFileSync ( \"/dev/stdin\" , \"utf8\" ); Or to write to stdout: 1 rw . writeFileSync ( \"/dev/stdout\" , contents , \"utf8\" ); And rw automatically squashes EPIPE errors, so you can pipe the output of your program to head and you won\u2019t get a spurious stack trace. To install, npm install rw .","title":"rw - Now stdin and stdout are files."},{"location":"data-science/knime/images/node_modules/rw/#note","text":"If you want to read synchronously from stdin using readFileSync , you cannot also use process.stdin in the same program. Likewise, if you want to write synchronously to stdout or stderr using writeFileSync , you cannot use process.stdout or process.stderr, respectively. (This includes using console.log and the like!) Failure to heed this warning may result in error: EAGAIN, resource temporarily unavailable. Unfortunately, it does not appear possible for this library to fix this issue automatically, so please use caution. Only the asynchronous methods readFile and writeFile are supported on Windows. Node has no synchronous API for reading from process. stdin or writing to process. stdout or process. stderr , so you\u2019re out of luck!","title":"Note"},{"location":"data-science/knime/images/node_modules/rw/#api-reference","text":"# rw. readFile ( path [, options ], callback ) Reads the file at the specified path completely into memory, invoking the specified callback once the data is available and the file is closed. The callback is invoked with two arguments: the error that occurred during read (hopefully null), and the read data. If options is a string, it specifies the encoding to use, in which case the read data will be a string; otherwise options is an object, and may specify encoding and flag properties. This method is a drop-in replacement for fs.readFile and fixes the behavior of special files such as /dev/stdin. # rw. readFileSync ( path [, options ]) Reads the file at the specified path completely into memory, synchronously, returning the data. If an error occurred during read, this function throws an error instead. If options is a string, it specifies the encoding to use, in which case the read data will be a string; otherwise options is an object, and may specify encoding and flag properties. This method is a drop-in replacement for fs.readFileSync and fixes the behavior of special files such as /dev/stdin. # rw. writeFile ( path , data [, options ], callback ) Writes the specified data (completely in memory) to a file at the specified path , invoking the specified callback once the data is completely written and the file is closed. The callback is invoked with a single argument: the error that occurred during write (hopefully null). If options is a string, it specifies the encoding to use, in which case the data must be a string; otherwise options is an object, and may specify encoding, mode and flag properties. This method is a drop-in replacement for fs.writeFile and fixes the behavior of special files such as /dev/stdout. # rw. writeFileSync ( path , data [, options ]) Writes the specified data (completely in memory) to a file at the specified path , synchronously, returning once the data is completely written and the file is closed. Throws an error if one occurs during write. If options is a string, it specifies the encoding to use, in which case the data must be a string; otherwise options is an object, and may specify encoding, mode and flag properties. This method is a drop-in replacement for fs.writeFileSync and fixes the behavior of special files such as /dev/stdout. # rw.dash. readFile ( path [, options ], callback ) Equivalent to rw.readFile , except treats a path of - as /dev/stdin . Useful for command-line arguments. # rw.dash. readFileSync ( path [, options ]) Equivalent to rw.readFileSync , except treats a path of - as /dev/stdin . Useful for command-line arguments. # rw.dash. writeFile ( path , data [, options ], callback ) Equivalent to rw.writeFile , except treats a path of - as /dev/stdout . Useful for command-line arguments. # rw.dash. writeFileSync ( path , data [, options ]) Equivalent to rw.writeFileSync , except treats a path of - as /dev/stdout . Useful for command-line arguments.","title":"API Reference"},{"location":"data-science/knime/images/node_modules/safe-buffer/","text":"safe-buffer Safer Node.js Buffer API Use the new Node.js Buffer APIs ( Buffer.from , Buffer.alloc , Buffer.allocUnsafe , Buffer.allocUnsafeSlow ) in all versions of Node.js. Uses the built-in implementation when available. install 1 npm install safe-buffer usage The goal of this package is to provide a safe replacement for the node.js Buffer . It's a drop-in replacement for Buffer . You can use it by adding one require line to the top of your node.js modules: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var Buffer = require ( 'safe-buffer' ). Buffer // Existing buffer code will continue to work without issues: new Buffer ( 'hey' , 'utf8' ) new Buffer ([ 1 , 2 , 3 ], 'utf8' ) new Buffer ( obj ) new Buffer ( 16 ) // create an uninitialized buffer (potentially unsafe) // But you can use these new explicit APIs to make clear what you want: Buffer . from ( 'hey' , 'utf8' ) // convert from many types to a Buffer Buffer . alloc ( 16 ) // create a zero-filled buffer (safe) Buffer . allocUnsafe ( 16 ) // create an uninitialized buffer (potentially unsafe) api Class Method: Buffer.from(array) array {Array} Allocates a new Buffer using an array of octets. 1 2 3 const buf = Buffer . from ([ 0x62 , 0x75 , 0x66 , 0x66 , 0x65 , 0x72 ]); // creates a new Buffer containing ASCII bytes // ['b','u','f','f','e','r'] A TypeError will be thrown if array is not an Array . Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]]) arrayBuffer {ArrayBuffer} The .buffer property of a TypedArray or a new ArrayBuffer() byteOffset {Number} Default: 0 length {Number} Default: arrayBuffer.length - byteOffset When passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const arr = new Uint16Array ( 2 ); arr [ 0 ] = 5000 ; arr [ 1 ] = 4000 ; const buf = Buffer . from ( arr . buffer ); // shares the memory with arr; console . log ( buf ); // Prints: <Buffer 88 13 a0 0f> // changing the TypedArray changes the Buffer also arr [ 1 ] = 6000 ; console . log ( buf ); // Prints: <Buffer 88 13 70 17> The optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer . 1 2 3 4 const ab = new ArrayBuffer ( 10 ); const buf = Buffer . from ( ab , 0 , 2 ); console . log ( buf . length ); // Prints: 2 A TypeError will be thrown if arrayBuffer is not an ArrayBuffer . Class Method: Buffer.from(buffer) buffer {Buffer} Copies the passed buffer data onto a new Buffer instance. 1 2 3 4 5 6 7 8 const buf1 = Buffer . from ( 'buffer' ); const buf2 = Buffer . from ( buf1 ); buf1 [ 0 ] = 0x61 ; console . log ( buf1 . toString ()); // 'auffer' console . log ( buf2 . toString ()); // 'buffer' (copy is not changed) A TypeError will be thrown if buffer is not a Buffer . Class Method: Buffer.from(str[, encoding]) str {String} String to encode. encoding {String} Encoding to use, Default: 'utf8' Creates a new Buffer containing the given JavaScript string str . If provided, the encoding parameter identifies the character encoding. If not provided, encoding defaults to 'utf8' . 1 2 3 4 5 6 7 8 9 const buf1 = Buffer . from ( 'this is a t\u00e9st' ); console . log ( buf1 . toString ()); // prints: this is a t\u00e9st console . log ( buf1 . toString ( 'ascii' )); // prints: this is a tC)st const buf2 = Buffer . from ( '7468697320697320612074c3a97374' , 'hex' ); console . log ( buf2 . toString ()); // prints: this is a t\u00e9st A TypeError will be thrown if str is not a string. Class Method: Buffer.alloc(size[, fill[, encoding]]) size {Number} fill {Value} Default: undefined encoding {String} Default: utf8 Allocates a new Buffer of size bytes. If fill is undefined , the Buffer will be zero-filled . 1 2 3 const buf = Buffer . alloc ( 5 ); console . log ( buf ); // <Buffer 00 00 00 00 00> The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. If fill is specified, the allocated Buffer will be initialized by calling buf.fill(fill) . See [ buf.fill() ][] for more information. 1 2 3 const buf = Buffer . alloc ( 5 , 'a' ); console . log ( buf ); // <Buffer 61 61 61 61 61> If both fill and encoding are specified, the allocated Buffer will be initialized by calling buf.fill(fill, encoding) . For example: 1 2 3 const buf = Buffer . alloc ( 11 , 'aGVsbG8gd29ybGQ=' , 'base64' ); console . log ( buf ); // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64> Calling Buffer.alloc(size) can be significantly slower than the alternative Buffer.allocUnsafe(size) but ensures that the newly created Buffer instance contents will never contain sensitive data . A TypeError will be thrown if size is not a number. Class Method: Buffer.allocUnsafe(size) size {Number} Allocates a new non-zero-filled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. 1 2 3 4 5 6 7 const buf = Buffer . allocUnsafe ( 5 ); console . log ( buf ); // <Buffer 78 e0 82 02 01> // (octets will be different, every time) buf . fill ( 0 ); console . log ( buf ); // <Buffer 00 00 00 00 00> A TypeError will be thrown if size is not a number. Note that the Buffer module pre-allocates an internal Buffer instance of size Buffer.poolSize that is used as a pool for the fast allocation of new Buffer instances created using Buffer.allocUnsafe(size) (and the deprecated new Buffer(size) constructor) only when size is less than or equal to Buffer.poolSize >> 1 (floor of Buffer.poolSize divided by two). The default value of Buffer.poolSize is 8192 but can be modified. Use of this pre-allocated internal memory pool is a key difference between calling Buffer.alloc(size, fill) vs. Buffer.allocUnsafe(size).fill(fill) . Specifically, Buffer.alloc(size, fill) will never use the internal Buffer pool, while Buffer.allocUnsafe(size).fill(fill) will use the internal Buffer pool if size is less than or equal to half Buffer.poolSize . The difference is subtle but can be important when an application requires the additional performance that Buffer.allocUnsafe(size) provides. Class Method: Buffer.allocUnsafeSlow(size) size {Number} Allocates a new non-zero-filled and non-pooled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. When using Buffer.allocUnsafe() to allocate new Buffer instances, allocations under 4KB are, by default, sliced from a single pre-allocated Buffer . This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many Persistent objects. However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using Buffer.allocUnsafeSlow() then copy out the relevant bits. 1 2 3 4 5 6 7 8 9 10 11 // need to keep around a few small chunks of memory const store = []; socket . on ( 'readable' , () => { const data = socket . read (); // allocate for retained data const sb = Buffer . allocUnsafeSlow ( 10 ); // copy the data into the new allocation data . copy ( sb , 0 , 0 , 10 ); store . push ( sb ); }); Use of Buffer.allocUnsafeSlow() should be used only as a last resort after a developer has observed undue memory retention in their applications. A TypeError will be thrown if size is not a number. All the Rest The rest of the Buffer API is exactly the same as in node.js. See the docs . Related links Node.js issue: Buffer(number) is unsafe Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate Why is Buffer unsafe? Today, the node.js Buffer constructor is overloaded to handle many different argument types like String , Array , Object , TypedArrayView ( Uint8Array , etc.), ArrayBuffer , and also Number . The API is optimized for convenience: you can throw any type at it, and it will try to do what you want. Because the Buffer constructor is so powerful, you often see code like this: 1 2 3 4 // Convert UTF-8 strings to hex function toHex ( str ) { return new Buffer ( str ). toString ( 'hex' ) } But what happens if toHex is called with a Number argument? Remote Memory Disclosure If an attacker can make your program call the Buffer constructor with a Number argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords. When the Buffer constructor is passed a Number argument, it returns an UNINITIALIZED block of memory of the specified size . When you create a Buffer like this, you MUST overwrite the contents before returning it to the user. From the node.js docs : new Buffer(size) size Number The underlying memory for Buffer instances created in this way is not initialized. The contents of a newly created Buffer are unknown and could contain sensitive data. Use buf.fill(0) to initialize a Buffer to zeroes. (Emphasis our own.) Whenever the programmer intended to create an uninitialized Buffer you often see code like this: 1 2 3 4 5 6 var buf = new Buffer ( 16 ) // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] } Would this ever be a problem in real code? Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript. Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the Buffer constructor is more catastrophic. Here's an example of a vulnerable service that takes a JSON payload and converts it to hex: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Take a JSON payload {str: \"some string\"} and convert it to hex var server = http . createServer ( function ( req , res ) { var data = '' req . setEncoding ( 'utf8' ) req . on ( 'data' , function ( chunk ) { data += chunk }) req . on ( 'end' , function () { var body = JSON . parse ( data ) res . end ( new Buffer ( body . str ). toString ( 'hex' )) }) }) server . listen ( 8080 ) In this example, an http client just has to send: 1 2 3 { \"str\" : 1000 } and it will get back 1,000 bytes of uninitialized memory from the server. This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers. Which real-world packages were vulnerable? bittorrent-dht Mathias Buus and I ( Feross Aboukhadijeh ) found this issue in one of our own packages, bittorrent-dht . The bug would allow anyone on the internet to send a series of messages to a user of bittorrent-dht and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process. Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure , and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version. ws That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in ws , the most popular WebSocket implementation in node.js. If certain APIs were called with Number parameters instead of String or Buffer as expected, then uninitialized server memory would be disclosed to the remote peer. These were the vulnerable methods: 1 2 3 socket . send ( number ) socket . ping ( number ) socket . pong ( number ) Here's a vulnerable socket server with some echo functionality: 1 2 3 4 5 6 7 8 server . on ( 'connection' , function ( socket ) { socket . on ( 'message' , function ( message ) { message = JSON . parse ( message ) if ( message . type === 'echo' ) { socket . send ( message . data ) // send back the user's message } }) }) socket.send(number) called on the server, will disclose server memory. Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure . What's the solution? It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower. But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly. Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully. A new API: Buffer.allocUnsafe(number) The functionality of creating buffers with uninitialized memory should be part of another API. We propose Buffer.allocUnsafe(number) . This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it. 1 2 3 4 5 6 var buf = Buffer . allocUnsafe ( 16 ) // careful, uninitialized memory! // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] } How do we fix node.js core? We sent a PR to node.js core (merged as semver-major ) which defends against one case: 1 2 var str = 16 new Buffer ( str , 'utf8' ) In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of new Buffer(number, encoding) , which is probably not what the programmer intended. But this is only a partial solution, since if the programmer does new Buffer(variable) (without an encoding parameter) there's no way to know what they intended. If variable is sometimes a number, then uninitialized memory will sometimes be returned. What's the real long-term fix? We could deprecate and remove new Buffer(number) and use Buffer.allocUnsafe(number) when we need uninitialized memory. But that would break 1000s of packages. We believe the best solution is to: 1. Change new Buffer(number) to return safe, zeroed-out memory 2. Create a new API for creating uninitialized Buffers. We propose: Buffer.allocUnsafe(number) Update We now support adding three new APIs: Buffer.from(value) - convert from any type to a buffer Buffer.alloc(size) - create a zero-filled buffer Buffer.allocUnsafe(size) - create an uninitialized buffer with given size This solves the core problem that affected ws and bittorrent-dht which is Buffer(variable) getting tricked into taking a number argument. This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use Buffer.allocUnsafe(number) instead of new Buffer(number) . Conclusion We think there's a serious design issue with the Buffer API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\". This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages. Fortunately, there's an easy fix that can be applied today. Use safe-buffer in place of buffer . 1 var Buffer = require ( 'safe-buffer' ). Buffer Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use Buffer.alloc quickly, while older, insecure packages would magically become safe from this attack vector. links Node.js PR: buffer: throw if both length and enc are passed Node Security Project disclosure for ws Node Security Project disclosure for bittorrent-dht credit The original issues in bittorrent-dht ( disclosure ) and ws ( disclosure ) were discovered by Mathias Buus and Feross Aboukhadijeh . Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project . Thanks to John Hiesey for proofreading this README and auditing the code. license MIT. Copyright (C) Feross Aboukhadijeh","title":"safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]"},{"location":"data-science/knime/images/node_modules/safe-buffer/#safe-buffer","text":"","title":"safe-buffer"},{"location":"data-science/knime/images/node_modules/safe-buffer/#safer-nodejs-buffer-api","text":"Use the new Node.js Buffer APIs ( Buffer.from , Buffer.alloc , Buffer.allocUnsafe , Buffer.allocUnsafeSlow ) in all versions of Node.js. Uses the built-in implementation when available.","title":"Safer Node.js Buffer API"},{"location":"data-science/knime/images/node_modules/safe-buffer/#install","text":"1 npm install safe-buffer","title":"install"},{"location":"data-science/knime/images/node_modules/safe-buffer/#usage","text":"The goal of this package is to provide a safe replacement for the node.js Buffer . It's a drop-in replacement for Buffer . You can use it by adding one require line to the top of your node.js modules: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 var Buffer = require ( 'safe-buffer' ). Buffer // Existing buffer code will continue to work without issues: new Buffer ( 'hey' , 'utf8' ) new Buffer ([ 1 , 2 , 3 ], 'utf8' ) new Buffer ( obj ) new Buffer ( 16 ) // create an uninitialized buffer (potentially unsafe) // But you can use these new explicit APIs to make clear what you want: Buffer . from ( 'hey' , 'utf8' ) // convert from many types to a Buffer Buffer . alloc ( 16 ) // create a zero-filled buffer (safe) Buffer . allocUnsafe ( 16 ) // create an uninitialized buffer (potentially unsafe)","title":"usage"},{"location":"data-science/knime/images/node_modules/safe-buffer/#api","text":"","title":"api"},{"location":"data-science/knime/images/node_modules/safe-buffer/#class-method-bufferfromarray","text":"array {Array} Allocates a new Buffer using an array of octets. 1 2 3 const buf = Buffer . from ([ 0x62 , 0x75 , 0x66 , 0x66 , 0x65 , 0x72 ]); // creates a new Buffer containing ASCII bytes // ['b','u','f','f','e','r'] A TypeError will be thrown if array is not an Array .","title":"Class Method: Buffer.from(array)"},{"location":"data-science/knime/images/node_modules/safe-buffer/#class-method-bufferfromarraybuffer-byteoffset-length","text":"arrayBuffer {ArrayBuffer} The .buffer property of a TypedArray or a new ArrayBuffer() byteOffset {Number} Default: 0 length {Number} Default: arrayBuffer.length - byteOffset When passed a reference to the .buffer property of a TypedArray instance, the newly created Buffer will share the same allocated memory as the TypedArray. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const arr = new Uint16Array ( 2 ); arr [ 0 ] = 5000 ; arr [ 1 ] = 4000 ; const buf = Buffer . from ( arr . buffer ); // shares the memory with arr; console . log ( buf ); // Prints: <Buffer 88 13 a0 0f> // changing the TypedArray changes the Buffer also arr [ 1 ] = 6000 ; console . log ( buf ); // Prints: <Buffer 88 13 70 17> The optional byteOffset and length arguments specify a memory range within the arrayBuffer that will be shared by the Buffer . 1 2 3 4 const ab = new ArrayBuffer ( 10 ); const buf = Buffer . from ( ab , 0 , 2 ); console . log ( buf . length ); // Prints: 2 A TypeError will be thrown if arrayBuffer is not an ArrayBuffer .","title":"Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])"},{"location":"data-science/knime/images/node_modules/safe-buffer/#class-method-bufferfrombuffer","text":"buffer {Buffer} Copies the passed buffer data onto a new Buffer instance. 1 2 3 4 5 6 7 8 const buf1 = Buffer . from ( 'buffer' ); const buf2 = Buffer . from ( buf1 ); buf1 [ 0 ] = 0x61 ; console . log ( buf1 . toString ()); // 'auffer' console . log ( buf2 . toString ()); // 'buffer' (copy is not changed) A TypeError will be thrown if buffer is not a Buffer .","title":"Class Method: Buffer.from(buffer)"},{"location":"data-science/knime/images/node_modules/safe-buffer/#class-method-bufferfromstr-encoding","text":"str {String} String to encode. encoding {String} Encoding to use, Default: 'utf8' Creates a new Buffer containing the given JavaScript string str . If provided, the encoding parameter identifies the character encoding. If not provided, encoding defaults to 'utf8' . 1 2 3 4 5 6 7 8 9 const buf1 = Buffer . from ( 'this is a t\u00e9st' ); console . log ( buf1 . toString ()); // prints: this is a t\u00e9st console . log ( buf1 . toString ( 'ascii' )); // prints: this is a tC)st const buf2 = Buffer . from ( '7468697320697320612074c3a97374' , 'hex' ); console . log ( buf2 . toString ()); // prints: this is a t\u00e9st A TypeError will be thrown if str is not a string.","title":"Class Method: Buffer.from(str[, encoding])"},{"location":"data-science/knime/images/node_modules/safe-buffer/#class-method-bufferallocsize-fill-encoding","text":"size {Number} fill {Value} Default: undefined encoding {String} Default: utf8 Allocates a new Buffer of size bytes. If fill is undefined , the Buffer will be zero-filled . 1 2 3 const buf = Buffer . alloc ( 5 ); console . log ( buf ); // <Buffer 00 00 00 00 00> The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. If fill is specified, the allocated Buffer will be initialized by calling buf.fill(fill) . See [ buf.fill() ][] for more information. 1 2 3 const buf = Buffer . alloc ( 5 , 'a' ); console . log ( buf ); // <Buffer 61 61 61 61 61> If both fill and encoding are specified, the allocated Buffer will be initialized by calling buf.fill(fill, encoding) . For example: 1 2 3 const buf = Buffer . alloc ( 11 , 'aGVsbG8gd29ybGQ=' , 'base64' ); console . log ( buf ); // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64> Calling Buffer.alloc(size) can be significantly slower than the alternative Buffer.allocUnsafe(size) but ensures that the newly created Buffer instance contents will never contain sensitive data . A TypeError will be thrown if size is not a number.","title":"Class Method: Buffer.alloc(size[, fill[, encoding]])"},{"location":"data-science/knime/images/node_modules/safe-buffer/#class-method-bufferallocunsafesize","text":"size {Number} Allocates a new non-zero-filled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. 1 2 3 4 5 6 7 const buf = Buffer . allocUnsafe ( 5 ); console . log ( buf ); // <Buffer 78 e0 82 02 01> // (octets will be different, every time) buf . fill ( 0 ); console . log ( buf ); // <Buffer 00 00 00 00 00> A TypeError will be thrown if size is not a number. Note that the Buffer module pre-allocates an internal Buffer instance of size Buffer.poolSize that is used as a pool for the fast allocation of new Buffer instances created using Buffer.allocUnsafe(size) (and the deprecated new Buffer(size) constructor) only when size is less than or equal to Buffer.poolSize >> 1 (floor of Buffer.poolSize divided by two). The default value of Buffer.poolSize is 8192 but can be modified. Use of this pre-allocated internal memory pool is a key difference between calling Buffer.alloc(size, fill) vs. Buffer.allocUnsafe(size).fill(fill) . Specifically, Buffer.alloc(size, fill) will never use the internal Buffer pool, while Buffer.allocUnsafe(size).fill(fill) will use the internal Buffer pool if size is less than or equal to half Buffer.poolSize . The difference is subtle but can be important when an application requires the additional performance that Buffer.allocUnsafe(size) provides.","title":"Class Method: Buffer.allocUnsafe(size)"},{"location":"data-science/knime/images/node_modules/safe-buffer/#class-method-bufferallocunsafeslowsize","text":"size {Number} Allocates a new non-zero-filled and non-pooled Buffer of size bytes. The size must be less than or equal to the value of require('buffer').kMaxLength (on 64-bit architectures, kMaxLength is (2^31)-1 ). Otherwise, a [ RangeError ][] is thrown. A zero-length Buffer will be created if a size less than or equal to 0 is specified. The underlying memory for Buffer instances created in this way is not initialized . The contents of the newly created Buffer are unknown and may contain sensitive data . Use [ buf.fill(0) ][] to initialize such Buffer instances to zeroes. When using Buffer.allocUnsafe() to allocate new Buffer instances, allocations under 4KB are, by default, sliced from a single pre-allocated Buffer . This allows applications to avoid the garbage collection overhead of creating many individually allocated Buffers. This approach improves both performance and memory usage by eliminating the need to track and cleanup as many Persistent objects. However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled Buffer instance using Buffer.allocUnsafeSlow() then copy out the relevant bits. 1 2 3 4 5 6 7 8 9 10 11 // need to keep around a few small chunks of memory const store = []; socket . on ( 'readable' , () => { const data = socket . read (); // allocate for retained data const sb = Buffer . allocUnsafeSlow ( 10 ); // copy the data into the new allocation data . copy ( sb , 0 , 0 , 10 ); store . push ( sb ); }); Use of Buffer.allocUnsafeSlow() should be used only as a last resort after a developer has observed undue memory retention in their applications. A TypeError will be thrown if size is not a number.","title":"Class Method: Buffer.allocUnsafeSlow(size)"},{"location":"data-science/knime/images/node_modules/safe-buffer/#all-the-rest","text":"The rest of the Buffer API is exactly the same as in node.js. See the docs .","title":"All the Rest"},{"location":"data-science/knime/images/node_modules/safe-buffer/#related-links","text":"Node.js issue: Buffer(number) is unsafe Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate","title":"Related links"},{"location":"data-science/knime/images/node_modules/safe-buffer/#why-is-buffer-unsafe","text":"Today, the node.js Buffer constructor is overloaded to handle many different argument types like String , Array , Object , TypedArrayView ( Uint8Array , etc.), ArrayBuffer , and also Number . The API is optimized for convenience: you can throw any type at it, and it will try to do what you want. Because the Buffer constructor is so powerful, you often see code like this: 1 2 3 4 // Convert UTF-8 strings to hex function toHex ( str ) { return new Buffer ( str ). toString ( 'hex' ) } But what happens if toHex is called with a Number argument?","title":"Why is Buffer unsafe?"},{"location":"data-science/knime/images/node_modules/safe-buffer/#remote-memory-disclosure","text":"If an attacker can make your program call the Buffer constructor with a Number argument, then they can make it allocate uninitialized memory from the node.js process. This could potentially disclose TLS private keys, user data, or database passwords. When the Buffer constructor is passed a Number argument, it returns an UNINITIALIZED block of memory of the specified size . When you create a Buffer like this, you MUST overwrite the contents before returning it to the user. From the node.js docs : new Buffer(size) size Number The underlying memory for Buffer instances created in this way is not initialized. The contents of a newly created Buffer are unknown and could contain sensitive data. Use buf.fill(0) to initialize a Buffer to zeroes. (Emphasis our own.) Whenever the programmer intended to create an uninitialized Buffer you often see code like this: 1 2 3 4 5 6 var buf = new Buffer ( 16 ) // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] }","title":"Remote Memory Disclosure"},{"location":"data-science/knime/images/node_modules/safe-buffer/#would-this-ever-be-a-problem-in-real-code","text":"Yes. It's surprisingly common to forget to check the type of your variables in a dynamically-typed language like JavaScript. Usually the consequences of assuming the wrong type is that your program crashes with an uncaught exception. But the failure mode for forgetting to check the type of arguments to the Buffer constructor is more catastrophic. Here's an example of a vulnerable service that takes a JSON payload and converts it to hex: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Take a JSON payload {str: \"some string\"} and convert it to hex var server = http . createServer ( function ( req , res ) { var data = '' req . setEncoding ( 'utf8' ) req . on ( 'data' , function ( chunk ) { data += chunk }) req . on ( 'end' , function () { var body = JSON . parse ( data ) res . end ( new Buffer ( body . str ). toString ( 'hex' )) }) }) server . listen ( 8080 ) In this example, an http client just has to send: 1 2 3 { \"str\" : 1000 } and it will get back 1,000 bytes of uninitialized memory from the server. This is a very serious bug. It's similar in severity to the the Heartbleed bug that allowed disclosure of OpenSSL process memory by remote attackers.","title":"Would this ever be a problem in real code?"},{"location":"data-science/knime/images/node_modules/safe-buffer/#which-real-world-packages-were-vulnerable","text":"","title":"Which real-world packages were vulnerable?"},{"location":"data-science/knime/images/node_modules/safe-buffer/#bittorrent-dht","text":"Mathias Buus and I ( Feross Aboukhadijeh ) found this issue in one of our own packages, bittorrent-dht . The bug would allow anyone on the internet to send a series of messages to a user of bittorrent-dht and get them to reveal 20 bytes at a time of uninitialized memory from the node.js process. Here's the commit that fixed it. We released a new fixed version, created a Node Security Project disclosure , and deprecated all vulnerable versions on npm so users will get a warning to upgrade to a newer version.","title":"bittorrent-dht"},{"location":"data-science/knime/images/node_modules/safe-buffer/#ws","text":"That got us wondering if there were other vulnerable packages. Sure enough, within a short period of time, we found the same issue in ws , the most popular WebSocket implementation in node.js. If certain APIs were called with Number parameters instead of String or Buffer as expected, then uninitialized server memory would be disclosed to the remote peer. These were the vulnerable methods: 1 2 3 socket . send ( number ) socket . ping ( number ) socket . pong ( number ) Here's a vulnerable socket server with some echo functionality: 1 2 3 4 5 6 7 8 server . on ( 'connection' , function ( socket ) { socket . on ( 'message' , function ( message ) { message = JSON . parse ( message ) if ( message . type === 'echo' ) { socket . send ( message . data ) // send back the user's message } }) }) socket.send(number) called on the server, will disclose server memory. Here's the release where the issue was fixed, with a more detailed explanation. Props to Arnout Kazemier for the quick fix. Here's the Node Security Project disclosure .","title":"ws"},{"location":"data-science/knime/images/node_modules/safe-buffer/#whats-the-solution","text":"It's important that node.js offers a fast way to get memory otherwise performance-critical applications would needlessly get a lot slower. But we need a better way to signal our intent as programmers. When we want uninitialized memory, we should request it explicitly. Sensitive functionality should not be packed into a developer-friendly API that loosely accepts many different types. This type of API encourages the lazy practice of passing variables in without checking the type very carefully.","title":"What's the solution?"},{"location":"data-science/knime/images/node_modules/safe-buffer/#a-new-api-bufferallocunsafenumber","text":"The functionality of creating buffers with uninitialized memory should be part of another API. We propose Buffer.allocUnsafe(number) . This way, it's not part of an API that frequently gets user input of all sorts of different types passed into it. 1 2 3 4 5 6 var buf = Buffer . allocUnsafe ( 16 ) // careful, uninitialized memory! // Immediately overwrite the uninitialized buffer with data from another buffer for ( var i = 0 ; i < buf . length ; i ++ ) { buf [ i ] = otherBuf [ i ] }","title":"A new API: Buffer.allocUnsafe(number)"},{"location":"data-science/knime/images/node_modules/safe-buffer/#how-do-we-fix-nodejs-core","text":"We sent a PR to node.js core (merged as semver-major ) which defends against one case: 1 2 var str = 16 new Buffer ( str , 'utf8' ) In this situation, it's implied that the programmer intended the first argument to be a string, since they passed an encoding as a second argument. Today, node.js will allocate uninitialized memory in the case of new Buffer(number, encoding) , which is probably not what the programmer intended. But this is only a partial solution, since if the programmer does new Buffer(variable) (without an encoding parameter) there's no way to know what they intended. If variable is sometimes a number, then uninitialized memory will sometimes be returned.","title":"How do we fix node.js core?"},{"location":"data-science/knime/images/node_modules/safe-buffer/#whats-the-real-long-term-fix","text":"We could deprecate and remove new Buffer(number) and use Buffer.allocUnsafe(number) when we need uninitialized memory. But that would break 1000s of packages. We believe the best solution is to: 1. Change new Buffer(number) to return safe, zeroed-out memory 2. Create a new API for creating uninitialized Buffers. We propose: Buffer.allocUnsafe(number)","title":"What's the real long-term fix?"},{"location":"data-science/knime/images/node_modules/safe-buffer/#update","text":"We now support adding three new APIs: Buffer.from(value) - convert from any type to a buffer Buffer.alloc(size) - create a zero-filled buffer Buffer.allocUnsafe(size) - create an uninitialized buffer with given size This solves the core problem that affected ws and bittorrent-dht which is Buffer(variable) getting tricked into taking a number argument. This way, existing code continues working and the impact on the npm ecosystem will be minimal. Over time, npm maintainers can migrate performance-critical code to use Buffer.allocUnsafe(number) instead of new Buffer(number) .","title":"Update"},{"location":"data-science/knime/images/node_modules/safe-buffer/#conclusion","text":"We think there's a serious design issue with the Buffer API as it exists today. It promotes insecure software by putting high-risk functionality into a convenient API with friendly \"developer ergonomics\". This wasn't merely a theoretical exercise because we found the issue in some of the most popular npm packages. Fortunately, there's an easy fix that can be applied today. Use safe-buffer in place of buffer . 1 var Buffer = require ( 'safe-buffer' ). Buffer Eventually, we hope that node.js core can switch to this new, safer behavior. We believe the impact on the ecosystem would be minimal since it's not a breaking change. Well-maintained, popular packages would be updated to use Buffer.alloc quickly, while older, insecure packages would magically become safe from this attack vector.","title":"Conclusion"},{"location":"data-science/knime/images/node_modules/safe-buffer/#links","text":"Node.js PR: buffer: throw if both length and enc are passed Node Security Project disclosure for ws Node Security Project disclosure for bittorrent-dht","title":"links"},{"location":"data-science/knime/images/node_modules/safe-buffer/#credit","text":"The original issues in bittorrent-dht ( disclosure ) and ws ( disclosure ) were discovered by Mathias Buus and Feross Aboukhadijeh . Thanks to Adam Baldwin for helping disclose these issues and for his work running the Node Security Project . Thanks to John Hiesey for proofreading this README and auditing the code.","title":"credit"},{"location":"data-science/knime/images/node_modules/safe-buffer/#license","text":"MIT. Copyright (C) Feross Aboukhadijeh","title":"license"},{"location":"data-science/knime/images/node_modules/sharkdown/","text":"sharkdown usage 1 npm install --save sharkdown Or as a handy utility: 1 npm install sharkdown -g And then you can do: 1 2 sharkdown file.md sharkdown < \"markdown data\" api sharkdown(str) Takes a string, returns a string with markdown encoded as control codes for a shell. sharkdown() Returns a through-stream for pipes. example 1 2 3 4 5 var sharkdown = require ( 'sharkdown' ); process . stdin . pipe ( sharkdown ()) . pipe ( process . stdout );","title":"Index"},{"location":"data-science/knime/images/node_modules/sharkdown/#sharkdown","text":"","title":"sharkdown"},{"location":"data-science/knime/images/node_modules/sharkdown/#usage","text":"1 npm install --save sharkdown Or as a handy utility: 1 npm install sharkdown -g And then you can do: 1 2 sharkdown file.md sharkdown < \"markdown data\"","title":"usage"},{"location":"data-science/knime/images/node_modules/sharkdown/#api","text":"","title":"api"},{"location":"data-science/knime/images/node_modules/sharkdown/#sharkdownstr","text":"Takes a string, returns a string with markdown encoded as control codes for a shell.","title":"sharkdown(str)"},{"location":"data-science/knime/images/node_modules/sharkdown/#sharkdown_1","text":"Returns a through-stream for pipes.","title":"sharkdown()"},{"location":"data-science/knime/images/node_modules/sharkdown/#example","text":"1 2 3 4 5 var sharkdown = require ( 'sharkdown' ); process . stdin . pipe ( sharkdown ()) . pipe ( process . stdout );","title":"example"},{"location":"data-science/knime/images/node_modules/sharkdown/node_modules/minimist/readme/","text":"minimist parse argument options This module is the guts of optimist's argument parser without all the fanciful decoration. example 1 2 var argv = require ( 'minimist' )( process . argv . slice ( 2 )); console . dir ( argv ); 1 2 $ node example/parse.js -a beep -b boop { _: [] , a: 'beep' , b: 'boop' } 1 2 3 4 5 6 7 8 9 $ node example/parse.js -x 3 -y 4 -n5 -abc --beep = boop foo bar baz { _: [ 'foo' , 'bar' , 'baz' ] , x: 3 , y: 4 , n: 5 , a: true, b: true, c: true, beep: 'boop' } methods 1 var parseArgs = require ( 'minimist' ) var argv = parseArgs(args, opts={}) Return an argument object argv populated with the array arguments from args . argv._ contains all the arguments that didn't have an option associated with them. Numeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name. Any arguments after '--' will not be parsed and will end up in argv._ . options can be: opts.string - a string or array of strings argument names to always treat as strings opts.boolean - a string or array of strings to always treat as booleans opts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases opts.default - an object mapping string argument names to default values install With npm do: 1 npm install minimist license MIT","title":"minimist"},{"location":"data-science/knime/images/node_modules/sharkdown/node_modules/minimist/readme/#minimist","text":"parse argument options This module is the guts of optimist's argument parser without all the fanciful decoration.","title":"minimist"},{"location":"data-science/knime/images/node_modules/sharkdown/node_modules/minimist/readme/#example","text":"1 2 var argv = require ( 'minimist' )( process . argv . slice ( 2 )); console . dir ( argv ); 1 2 $ node example/parse.js -a beep -b boop { _: [] , a: 'beep' , b: 'boop' } 1 2 3 4 5 6 7 8 9 $ node example/parse.js -x 3 -y 4 -n5 -abc --beep = boop foo bar baz { _: [ 'foo' , 'bar' , 'baz' ] , x: 3 , y: 4 , n: 5 , a: true, b: true, c: true, beep: 'boop' }","title":"example"},{"location":"data-science/knime/images/node_modules/sharkdown/node_modules/minimist/readme/#methods","text":"1 var parseArgs = require ( 'minimist' )","title":"methods"},{"location":"data-science/knime/images/node_modules/sharkdown/node_modules/minimist/readme/#var-argv-parseargsargs-opts","text":"Return an argument object argv populated with the array arguments from args . argv._ contains all the arguments that didn't have an option associated with them. Numeric-looking arguments will be returned as numbers unless opts.string or opts.boolean is set for that argument name. Any arguments after '--' will not be parsed and will end up in argv._ . options can be: opts.string - a string or array of strings argument names to always treat as strings opts.boolean - a string or array of strings to always treat as booleans opts.alias - an object mapping string names to strings or arrays of string argument names to use as aliases opts.default - an object mapping string argument names to default values","title":"var argv = parseArgs(args, opts={})"},{"location":"data-science/knime/images/node_modules/sharkdown/node_modules/minimist/readme/#install","text":"With npm do: 1 npm install minimist","title":"install"},{"location":"data-science/knime/images/node_modules/sharkdown/node_modules/minimist/readme/#license","text":"MIT","title":"license"},{"location":"data-science/knime/images/node_modules/split/readme/","text":"Split (matcher) Break up a stream and reassemble it so that each line is a chunk. matcher may be a String , or a RegExp Example, read every line in a file ... 1 2 3 4 5 fs . createReadStream ( file ) . pipe ( split ()) . on ( 'data' , function ( line ) { //each chunk now is a seperate line! }) split takes the same arguments as string.split except it defaults to '/\\r?\\n/' instead of ',', and the optional limit paremeter is ignored. String#split NDJ - Newline Delimited Json split accepts a function which transforms each line. 1 2 3 4 5 6 7 8 9 fs . createReadStream ( file ) . pipe ( split ( JSON . parse )) . on ( 'data' , function ( obj ) { //each chunk now is a a js object }) . on ( 'error' , function ( err ) { //syntax errors will land here //note, this ends the stream. }) License MIT","title":"Split (matcher)"},{"location":"data-science/knime/images/node_modules/split/readme/#split-matcher","text":"Break up a stream and reassemble it so that each line is a chunk. matcher may be a String , or a RegExp Example, read every line in a file ... 1 2 3 4 5 fs . createReadStream ( file ) . pipe ( split ()) . on ( 'data' , function ( line ) { //each chunk now is a seperate line! }) split takes the same arguments as string.split except it defaults to '/\\r?\\n/' instead of ',', and the optional limit paremeter is ignored. String#split","title":"Split (matcher)"},{"location":"data-science/knime/images/node_modules/split/readme/#ndj-newline-delimited-json","text":"split accepts a function which transforms each line. 1 2 3 4 5 6 7 8 9 fs . createReadStream ( file ) . pipe ( split ( JSON . parse )) . on ( 'data' , function ( obj ) { //each chunk now is a a js object }) . on ( 'error' , function ( err ) { //syntax errors will land here //note, this ends the stream. })","title":"NDJ - Newline Delimited Json"},{"location":"data-science/knime/images/node_modules/split/readme/#license","text":"MIT","title":"License"},{"location":"data-science/knime/images/node_modules/string_decoder/","text":"string_decoder Node-core v8.9.4 string_decoder for userland 1 npm install --save string_decoder Node-core string_decoder for userland This package is a mirror of the string_decoder implementation in Node-core. Full documentation may be found on the Node.js website . As of version 1.0.0 string_decoder uses semantic versioning. Previous versions Previous version numbers match the versions found in Node core, e.g. 0.10.24 matches Node 0.10.24, likewise 0.11.10 matches Node 0.11.10. Update The build/ directory contains a build script that will scrape the source from the nodejs/node repo given a specific Node version. Streams Working Group string_decoder is maintained by the Streams Working Group, which oversees the development and maintenance of the Streams API within Node.js. The responsibilities of the Streams Working Group include: Addressing stream issues on the Node.js issue tracker. Authoring and editing stream documentation within the Node.js project. Reviewing changes to stream subclasses within the Node.js project. Redirecting changes to streams from the Node.js project to this project. Assisting in the implementation of stream providers within Node.js. Recommending versions of readable-stream to be included in Node.js. Messaging about the future of streams to give the community advance notice of changes. See readable-stream for more details.","title":"string_decoder"},{"location":"data-science/knime/images/node_modules/string_decoder/#string_decoder","text":"Node-core v8.9.4 string_decoder for userland 1 npm install --save string_decoder Node-core string_decoder for userland This package is a mirror of the string_decoder implementation in Node-core. Full documentation may be found on the Node.js website . As of version 1.0.0 string_decoder uses semantic versioning.","title":"string_decoder"},{"location":"data-science/knime/images/node_modules/string_decoder/#previous-versions","text":"Previous version numbers match the versions found in Node core, e.g. 0.10.24 matches Node 0.10.24, likewise 0.11.10 matches Node 0.11.10.","title":"Previous versions"},{"location":"data-science/knime/images/node_modules/string_decoder/#update","text":"The build/ directory contains a build script that will scrape the source from the nodejs/node repo given a specific Node version.","title":"Update"},{"location":"data-science/knime/images/node_modules/string_decoder/#streams-working-group","text":"string_decoder is maintained by the Streams Working Group, which oversees the development and maintenance of the Streams API within Node.js. The responsibilities of the Streams Working Group include: Addressing stream issues on the Node.js issue tracker. Authoring and editing stream documentation within the Node.js project. Reviewing changes to stream subclasses within the Node.js project. Redirecting changes to streams from the Node.js project to this project. Assisting in the implementation of stream providers within Node.js. Recommending versions of readable-stream to be included in Node.js. Messaging about the future of streams to give the community advance notice of changes. See readable-stream for more details.","title":"Streams Working Group"},{"location":"data-science/knime/images/node_modules/supercluster/","text":"supercluster A very fast JavaScript library for geospatial point clustering for browsers and Node. 1 < script src = \"https://unpkg.com/supercluster@6.0.2/dist/supercluster.min.js\" ></ script > 1 2 3 4 5 6 const index = new Supercluster ({ radius : 40 , maxZoom : 16 }); index . load ( points ); index . getClusters ([ - 180 , - 85 , 180 , 85 ], 2 ); Clustering 6 million points in Leaflet: Install Install using NPM ( npm install supercluster ) or Yarn ( yarn add supercluster ), then: 1 2 3 4 5 // import as a ES module import Supercluster from 'supercluster' ; // or require in Node / Browserify const Supercluster = require ( 'supercluster' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/supercluster@6.0.2/dist/supercluster.min.js\" ></ script > Methods load(points) Loads an array of GeoJSON Feature objects. Each feature's geometry must be a GeoJSON Point . Once loaded, index is immutable. getClusters(bbox, zoom) For the given bbox array ( [westLng, southLat, eastLng, northLat] ) and integer zoom , returns an array of clusters and points as GeoJSON Feature objects. getTile(z, x, y) For a given zoom and x/y coordinates, returns a geojson-vt -compatible JSON tile object with cluster/point features. getChildren(clusterId) Returns the children of a cluster (on the next zoom level) given its id ( cluster_id value from feature properties). getLeaves(clusterId, limit = 10, offset = 0) Returns all the points of a cluster (given its cluster_id ), with pagination support: limit is the number of points to return (set to Infinity for all points), and offset is the amount of points to skip (for pagination). getClusterExpansionZoom(clusterId) Returns the zoom on which the cluster expands into several children (useful for \"click to zoom\" feature) given the cluster's cluster_id . Options Option Default Description minZoom 0 Minimum zoom level at which clusters are generated. maxZoom 16 Maximum zoom level at which clusters are generated. radius 40 Cluster radius, in pixels. extent 512 (Tiles) Tile extent. Radius is calculated relative to this value. nodeSize 64 Size of the KD-tree leaf node. Affects performance. log false Whether timing info should be logged. generateId false Whether to generate ids for input features that don't have them. Property map/reduce options In addition to the options above, supercluster supports property aggregation with the following three options: map : a function that returns cluster properties corresponding to a single point. reduce : a reduce function that merges properties of two clusters into one. Example of setting up a sum cluster property that accumulates the sum of myValue property values: 1 2 3 4 const index = new Supercluster ({ map : ( props ) => ({ sum : props . myValue }), reduce : ( accumulated , props ) => { accumulated . sum += props . sum ; } }); Note that reduce must not mutate the second argument ( props ). Developing Supercluster 1 2 3 npm install # install dependencies npm run build # generate dist/supercluster.js and dist/supercluster.min.js npm test # run tests","title":"supercluster [![Simply Awesome](https://img.shields.io/badge/simply-awesome-brightgreen.svg)](https://github.com/mourner/projects) [![Build Status](https://travis-ci.org/mapbox/supercluster.svg?branch=master)](https://travis-ci.org/mapbox/supercluster)"},{"location":"data-science/knime/images/node_modules/supercluster/#supercluster","text":"A very fast JavaScript library for geospatial point clustering for browsers and Node. 1 < script src = \"https://unpkg.com/supercluster@6.0.2/dist/supercluster.min.js\" ></ script > 1 2 3 4 5 6 const index = new Supercluster ({ radius : 40 , maxZoom : 16 }); index . load ( points ); index . getClusters ([ - 180 , - 85 , 180 , 85 ], 2 ); Clustering 6 million points in Leaflet:","title":"supercluster"},{"location":"data-science/knime/images/node_modules/supercluster/#install","text":"Install using NPM ( npm install supercluster ) or Yarn ( yarn add supercluster ), then: 1 2 3 4 5 // import as a ES module import Supercluster from 'supercluster' ; // or require in Node / Browserify const Supercluster = require ( 'supercluster' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/supercluster@6.0.2/dist/supercluster.min.js\" ></ script >","title":"Install"},{"location":"data-science/knime/images/node_modules/supercluster/#methods","text":"","title":"Methods"},{"location":"data-science/knime/images/node_modules/supercluster/#loadpoints","text":"Loads an array of GeoJSON Feature objects. Each feature's geometry must be a GeoJSON Point . Once loaded, index is immutable.","title":"load(points)"},{"location":"data-science/knime/images/node_modules/supercluster/#getclustersbbox-zoom","text":"For the given bbox array ( [westLng, southLat, eastLng, northLat] ) and integer zoom , returns an array of clusters and points as GeoJSON Feature objects.","title":"getClusters(bbox, zoom)"},{"location":"data-science/knime/images/node_modules/supercluster/#gettilez-x-y","text":"For a given zoom and x/y coordinates, returns a geojson-vt -compatible JSON tile object with cluster/point features.","title":"getTile(z, x, y)"},{"location":"data-science/knime/images/node_modules/supercluster/#getchildrenclusterid","text":"Returns the children of a cluster (on the next zoom level) given its id ( cluster_id value from feature properties).","title":"getChildren(clusterId)"},{"location":"data-science/knime/images/node_modules/supercluster/#getleavesclusterid-limit-10-offset-0","text":"Returns all the points of a cluster (given its cluster_id ), with pagination support: limit is the number of points to return (set to Infinity for all points), and offset is the amount of points to skip (for pagination).","title":"getLeaves(clusterId, limit = 10, offset = 0)"},{"location":"data-science/knime/images/node_modules/supercluster/#getclusterexpansionzoomclusterid","text":"Returns the zoom on which the cluster expands into several children (useful for \"click to zoom\" feature) given the cluster's cluster_id .","title":"getClusterExpansionZoom(clusterId)"},{"location":"data-science/knime/images/node_modules/supercluster/#options","text":"Option Default Description minZoom 0 Minimum zoom level at which clusters are generated. maxZoom 16 Maximum zoom level at which clusters are generated. radius 40 Cluster radius, in pixels. extent 512 (Tiles) Tile extent. Radius is calculated relative to this value. nodeSize 64 Size of the KD-tree leaf node. Affects performance. log false Whether timing info should be logged. generateId false Whether to generate ids for input features that don't have them.","title":"Options"},{"location":"data-science/knime/images/node_modules/supercluster/#property-mapreduce-options","text":"In addition to the options above, supercluster supports property aggregation with the following three options: map : a function that returns cluster properties corresponding to a single point. reduce : a reduce function that merges properties of two clusters into one. Example of setting up a sum cluster property that accumulates the sum of myValue property values: 1 2 3 4 const index = new Supercluster ({ map : ( props ) => ({ sum : props . myValue }), reduce : ( accumulated , props ) => { accumulated . sum += props . sum ; } }); Note that reduce must not mutate the second argument ( props ).","title":"Property map/reduce options"},{"location":"data-science/knime/images/node_modules/supercluster/#developing-supercluster","text":"1 2 3 npm install # install dependencies npm run build # generate dist/supercluster.js and dist/supercluster.min.js npm test # run tests","title":"Developing Supercluster"},{"location":"data-science/knime/images/node_modules/through/readme/","text":"through Easy way to create a Stream that is both readable and writable . Pass in optional write and end methods. through takes care of pause/resume logic if you use this.queue(data) instead of this.emit('data', data) . Use this.pause() and this.resume() to manage flow. Check this.paused to see current flow state. ( write always returns !this.paused ). This function is the basis for most of the synchronous streams in event-stream . 1 2 3 4 5 6 7 8 var through = require ( 'through' ) through ( function write ( data ) { this . queue ( data ) //data *must* not be null }, function end () { //optional this . queue ( null ) }) Or, can also be used without buffering on pause, use this.emit('data', data) , and this.emit('end') 1 2 3 4 5 6 7 8 9 var through = require ( 'through' ) through ( function write ( data ) { this . emit ( 'data' , data ) //this.pause() }, function end () { //optional this . emit ( 'end' ) }) Extended Options You will probably not need these 99% of the time. autoDestroy=false By default, through emits close when the writable and readable side of the stream has ended. If that is not desired, set autoDestroy=false . 1 2 3 4 5 6 7 var through = require ( 'through' ) //like this var ts = through ( write , end , { autoDestroy : false }) //or like this var ts = through ( write , end ) ts . autoDestroy = false License MIT / Apache2","title":"Readme"},{"location":"data-science/knime/images/node_modules/through/readme/#through","text":"Easy way to create a Stream that is both readable and writable . Pass in optional write and end methods. through takes care of pause/resume logic if you use this.queue(data) instead of this.emit('data', data) . Use this.pause() and this.resume() to manage flow. Check this.paused to see current flow state. ( write always returns !this.paused ). This function is the basis for most of the synchronous streams in event-stream . 1 2 3 4 5 6 7 8 var through = require ( 'through' ) through ( function write ( data ) { this . queue ( data ) //data *must* not be null }, function end () { //optional this . queue ( null ) }) Or, can also be used without buffering on pause, use this.emit('data', data) , and this.emit('end') 1 2 3 4 5 6 7 8 9 var through = require ( 'through' ) through ( function write ( data ) { this . emit ( 'data' , data ) //this.pause() }, function end () { //optional this . emit ( 'end' ) })","title":"through"},{"location":"data-science/knime/images/node_modules/through/readme/#extended-options","text":"You will probably not need these 99% of the time.","title":"Extended Options"},{"location":"data-science/knime/images/node_modules/through/readme/#autodestroyfalse","text":"By default, through emits close when the writable and readable side of the stream has ended. If that is not desired, set autoDestroy=false . 1 2 3 4 5 6 7 var through = require ( 'through' ) //like this var ts = through ( write , end , { autoDestroy : false }) //or like this var ts = through ( write , end ) ts . autoDestroy = false","title":"autoDestroy=false"},{"location":"data-science/knime/images/node_modules/through/readme/#license","text":"MIT / Apache2","title":"License"},{"location":"data-science/knime/images/node_modules/tinyqueue/","text":"tinyqueue The smallest and simplest binary heap priority queue in JavaScript. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // create an empty priority queue var queue = new TinyQueue (); // add some items queue . push ( 7 ); queue . push ( 5 ); queue . push ( 10 ); // remove the top item var top = queue . pop (); // returns 5 // return the top item (without removal) top = queue . peek (); // returns 7 // get queue length queue . length ; // returns 2 // create a priority queue from an existing array (modifies the array) queue = new TinyQueue ([ 7 , 5 , 10 ]); // pass a custom item comparator as a second argument queue = new TinyQueue ([{ value : 5 }, { value : 7 }], function ( a , b ) { return a . value - b . value ; }); // turn a queue into a sorted array var array = []; while ( queue . length ) array . push ( queue . pop ()); For a faster number-based queue, see flatqueue . Install Install using NPM ( npm install tinyqueue ) or Yarn ( yarn add tinyqueue ), then: 1 2 3 4 5 // import as an ES module import TinyQueue from 'tinyqueue' ; // or require in Node / Browserify const TinyQueue = require ( 'tinyqueue' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/tinyqueue@2.0.0/tinyqueue.min.js\" ></ script > Thanks Inspired by js-priority-queue by Adam Hooper .","title":"Index"},{"location":"data-science/knime/images/node_modules/tinyqueue/#tinyqueue","text":"The smallest and simplest binary heap priority queue in JavaScript. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // create an empty priority queue var queue = new TinyQueue (); // add some items queue . push ( 7 ); queue . push ( 5 ); queue . push ( 10 ); // remove the top item var top = queue . pop (); // returns 5 // return the top item (without removal) top = queue . peek (); // returns 7 // get queue length queue . length ; // returns 2 // create a priority queue from an existing array (modifies the array) queue = new TinyQueue ([ 7 , 5 , 10 ]); // pass a custom item comparator as a second argument queue = new TinyQueue ([{ value : 5 }, { value : 7 }], function ( a , b ) { return a . value - b . value ; }); // turn a queue into a sorted array var array = []; while ( queue . length ) array . push ( queue . pop ()); For a faster number-based queue, see flatqueue .","title":"tinyqueue"},{"location":"data-science/knime/images/node_modules/tinyqueue/#install","text":"Install using NPM ( npm install tinyqueue ) or Yarn ( yarn add tinyqueue ), then: 1 2 3 4 5 // import as an ES module import TinyQueue from 'tinyqueue' ; // or require in Node / Browserify const TinyQueue = require ( 'tinyqueue' ); Or use a browser build directly: 1 < script src = \"https://unpkg.com/tinyqueue@2.0.0/tinyqueue.min.js\" ></ script >","title":"Install"},{"location":"data-science/knime/images/node_modules/tinyqueue/#thanks","text":"Inspired by js-priority-queue by Adam Hooper .","title":"Thanks"},{"location":"data-science/knime/images/node_modules/typedarray/readme/","text":"typedarray TypedArray polyfill ripped from this module . example 1 2 3 4 var Uint8Array = require ( 'typedarray' ). Uint8Array ; var ua = new Uint8Array ( 5 ); ua [ 1 ] = 256 + 55 ; console . log ( ua [ 1 ]); output: 1 55 methods 1 var TA = require ( 'typedarray' ) The TA object has the following constructors: TA.ArrayBuffer TA.DataView TA.Float32Array TA.Float64Array TA.Int8Array TA.Int16Array TA.Int32Array TA.Uint8Array TA.Uint8ClampedArray TA.Uint16Array TA.Uint32Array install With npm do: 1 npm install typedarray To use this module in the browser, compile with browserify or download a UMD build from browserify CDN: http://wzrd.in/standalone/typedarray@latest license MIT","title":"typedarray"},{"location":"data-science/knime/images/node_modules/typedarray/readme/#typedarray","text":"TypedArray polyfill ripped from this module .","title":"typedarray"},{"location":"data-science/knime/images/node_modules/typedarray/readme/#example","text":"1 2 3 4 var Uint8Array = require ( 'typedarray' ). Uint8Array ; var ua = new Uint8Array ( 5 ); ua [ 1 ] = 256 + 55 ; console . log ( ua [ 1 ]); output: 1 55","title":"example"},{"location":"data-science/knime/images/node_modules/typedarray/readme/#methods","text":"1 var TA = require ( 'typedarray' ) The TA object has the following constructors: TA.ArrayBuffer TA.DataView TA.Float32Array TA.Float64Array TA.Int8Array TA.Int16Array TA.Int32Array TA.Uint8Array TA.Uint8ClampedArray TA.Uint16Array TA.Uint32Array","title":"methods"},{"location":"data-science/knime/images/node_modules/typedarray/readme/#install","text":"With npm do: 1 npm install typedarray To use this module in the browser, compile with browserify or download a UMD build from browserify CDN: http://wzrd.in/standalone/typedarray@latest","title":"install"},{"location":"data-science/knime/images/node_modules/typedarray/readme/#license","text":"MIT","title":"license"},{"location":"data-science/knime/images/node_modules/util-deprecate/","text":"util-deprecate The Node.js util.deprecate() function with browser support In Node.js, this module simply re-exports the util.deprecate() function. In the web browser (i.e. via browserify), a browser-specific implementation of the util.deprecate() function is used. API A deprecate() function is the only thing exposed by this module. 1 2 3 4 5 6 7 8 9 // setup: exports . foo = deprecate ( foo , 'foo() is deprecated, use bar() instead' ); // users see: foo (); // foo() is deprecated, use bar() instead foo (); foo (); License (The MIT License) Copyright (c) 2014 Nathan Rajlich nathan@tootallnate.net Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Index"},{"location":"data-science/knime/images/node_modules/util-deprecate/#util-deprecate","text":"","title":"util-deprecate"},{"location":"data-science/knime/images/node_modules/util-deprecate/#the-nodejs-utildeprecate-function-with-browser-support","text":"In Node.js, this module simply re-exports the util.deprecate() function. In the web browser (i.e. via browserify), a browser-specific implementation of the util.deprecate() function is used.","title":"The Node.js util.deprecate() function with browser support"},{"location":"data-science/knime/images/node_modules/util-deprecate/#api","text":"A deprecate() function is the only thing exposed by this module. 1 2 3 4 5 6 7 8 9 // setup: exports . foo = deprecate ( foo , 'foo() is deprecated, use bar() instead' ); // users see: foo (); // foo() is deprecated, use bar() instead foo (); foo ();","title":"API"},{"location":"data-science/knime/images/node_modules/util-deprecate/#license","text":"(The MIT License) Copyright (c) 2014 Nathan Rajlich nathan@tootallnate.net Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"data-science/knime/images/node_modules/util-deprecate/History/","text":"1.0.2 / 2015-10-07 use try/catch when checking localStorage (#3, @kumavis) 1.0.1 / 2014-11-25 browser: use console.warn() for deprecation calls browser: more jsdocs 1.0.0 / 2014-04-30 initial commit","title":"History"},{"location":"data-science/knime/images/node_modules/util-deprecate/History/#102-2015-10-07","text":"use try/catch when checking localStorage (#3, @kumavis)","title":"1.0.2 / 2015-10-07"},{"location":"data-science/knime/images/node_modules/util-deprecate/History/#101-2014-11-25","text":"browser: use console.warn() for deprecation calls browser: more jsdocs","title":"1.0.1 / 2014-11-25"},{"location":"data-science/knime/images/node_modules/util-deprecate/History/#100-2014-04-30","text":"initial commit","title":"1.0.0 / 2014-04-30"},{"location":"data-science/knime/images/node_modules/vt-pbf/","text":"vt-pbf Serialize Mapbox vector tiles to binary protobufs in javascript. Usage As far as I know, the two places you might get a JS representation of a vector tile are geojson-vt and vector-tile-js . These both use slightly different internal representations, so serializing each looks slightly different: From vector-tile-js 1 2 3 4 5 6 7 8 9 var vtpbf = require ( 'vt-pbf' ) var VectorTile = require ( 'vector-tile' ). VectorTile var data = fs . readFileSync ( __dirname + '/fixtures/rectangle-1.0.0.pbf' ) var tile = new VectorTile ( new Pbf ( data )) var orig = tile . layers [ 'geojsonLayer' ]. feature ( 0 ). toGeoJSON ( 0 , 0 , 1 ) var buff = vtpbf ( tile ) fs . writeFileSync ( 'my-tile.pbf' , buff ) From geojson-vt 1 2 3 4 5 6 7 8 9 10 var vtpbf = require ( 'vt-pbf' ) var geojsonVt = require ( 'geojson-vt' ) var orig = JSON . parse ( fs . readFileSync ( __dirname + '/fixtures/rectangle.geojson' )) var tileindex = geojsonVt ( orig ) var tile = tileindex . getTile ( 1 , 0 , 0 ) // pass in an object mapping layername -> tile object var buff = vtpbf . fromGeojsonVt ({ 'geojsonLayer' : tile }) fs . writeFileSync ( 'my-tile.pbf' , buff )","title":"vt-pbf [![CircleCI](https://circleci.com/gh/mapbox/vt-pbf.svg?style=svg)](https://circleci.com/gh/mapbox/vt-pbf)"},{"location":"data-science/knime/images/node_modules/vt-pbf/#vt-pbf","text":"Serialize Mapbox vector tiles to binary protobufs in javascript.","title":"vt-pbf"},{"location":"data-science/knime/images/node_modules/vt-pbf/#usage","text":"As far as I know, the two places you might get a JS representation of a vector tile are geojson-vt and vector-tile-js . These both use slightly different internal representations, so serializing each looks slightly different:","title":"Usage"},{"location":"data-science/knime/images/node_modules/vt-pbf/#from-vector-tile-js","text":"1 2 3 4 5 6 7 8 9 var vtpbf = require ( 'vt-pbf' ) var VectorTile = require ( 'vector-tile' ). VectorTile var data = fs . readFileSync ( __dirname + '/fixtures/rectangle-1.0.0.pbf' ) var tile = new VectorTile ( new Pbf ( data )) var orig = tile . layers [ 'geojsonLayer' ]. feature ( 0 ). toGeoJSON ( 0 , 0 , 1 ) var buff = vtpbf ( tile ) fs . writeFileSync ( 'my-tile.pbf' , buff )","title":"From vector-tile-js"},{"location":"data-science/knime/images/node_modules/vt-pbf/#from-geojson-vt","text":"1 2 3 4 5 6 7 8 9 10 var vtpbf = require ( 'vt-pbf' ) var geojsonVt = require ( 'geojson-vt' ) var orig = JSON . parse ( fs . readFileSync ( __dirname + '/fixtures/rectangle.geojson' )) var tileindex = geojsonVt ( orig ) var tile = tileindex . getTile ( 1 , 0 , 0 ) // pass in an object mapping layername -> tile object var buff = vtpbf . fromGeojsonVt ({ 'geojsonLayer' : tile }) fs . writeFileSync ( 'my-tile.pbf' , buff )","title":"From geojson-vt"},{"location":"data-science/knime/images/node_modules/wgs84/","text":"wgs84 Provides RADIUS , FLATTENING , and POLAR_RADIUS constants from the reference ellipsoid.","title":"[wgs84](http://en.wikipedia.org/wiki/World_Geodetic_System)"},{"location":"data-science/knime/images/node_modules/wgs84/#wgs84","text":"Provides RADIUS , FLATTENING , and POLAR_RADIUS constants from the reference ellipsoid.","title":"wgs84"}]}